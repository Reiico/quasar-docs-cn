{
  "type": "component",
  "meta": {
    "docsUrl": "https://v2.quasar.dev/vue-components/select"
  },
  "props": {
    "name": {
      "type": "String",
      "desc": "Used to specify the name of the control; Useful if dealing with forms; If not specified, it takes the value of 'for' prop, if it exists",
      "examples": [
        "car_id",
        "car_id"
      ],
      "category": "behavior",
      "desc_cn": "用于指定控件的名称；处理表单时有用；如果未指定，则采用“for”属性的值（如果存在）"
    },
    "virtual-scroll-horizontal": {
      "type": "Boolean",
      "desc": "Make virtual list work in horizontal mode",
      "category": "behavior",
      "desc_cn": "使虚拟列表在水平模式下工作"
    },
    "virtual-scroll-slice-size": {
      "type": [
        "Number",
        "String"
      ],
      "desc": "Minimum number of items to render in the virtual list",
      "default": "30",
      "examples": [
        "virtual-scroll-slice-size=\"60\""
      ],
      "category": "virtual-scroll",
      "required": false,
      "desc_cn": "要在虚拟列表中呈现的最小项目数"
    },
    "virtual-scroll-slice-ratio-before": {
      "type": [
        "Number",
        "String"
      ],
      "desc": "Ratio of number of items in visible zone to render before it",
      "default": 1,
      "category": "virtual-scroll",
      "required": false,
      "desc_cn": "可见区域中的项目数与之前渲染的项目数之比"
    },
    "virtual-scroll-slice-ratio-after": {
      "type": [
        "Number",
        "String"
      ],
      "desc": "Ratio of number of items in visible zone to render after it",
      "default": 1,
      "category": "virtual-scroll",
      "required": false,
      "desc_cn": "可见区域中的项目数与之后渲染的项目数之比"
    },
    "virtual-scroll-item-size": {
      "type": [
        "Number",
        "String"
      ],
      "desc": "Default size in pixels (height if vertical, width if horizontal) of an item; This value is used for rendering the initial list; Try to use a value close to the minimum size of an item",
      "default": 24,
      "category": "virtual-scroll",
      "required": false,
      "desc_cn": "项目的默认像素大小（垂直时为高度，水平时为宽度）；此值用于呈现初始列表；尝试使用接近项目最小大小的值"
    },
    "virtual-scroll-sticky-size-start": {
      "type": [
        "Number",
        "String"
      ],
      "desc": "Size in pixels (height if vertical, width if horizontal) of the sticky part (if using one) at the start of the list; A correct value will improve scroll precision",
      "default": "0",
      "category": "virtual-scroll",
      "required": false,
      "desc_cn": "列表开头的粘性部分（如果使用粘性部分）的像素大小（如果垂直，则为高度；如果水平，则为宽度）；正确的值将提高滚动精度"
    },
    "virtual-scroll-sticky-size-end": {
      "type": [
        "Number",
        "String"
      ],
      "desc": "Size in pixels (height if vertical, width if horizontal) of the sticky part (if using one) at the end of the list; A correct value will improve scroll precision",
      "default": "0",
      "category": "virtual-scroll",
      "required": false,
      "desc_cn": "列表末尾粘性部分（如果使用）的像素大小（如果垂直，则为高度；如果水平，则为宽度）；正确的值将提高滚动精度"
    },
    "table-colspan": {
      "type": [
        "Number",
        "String"
      ],
      "desc": "The number of columns in the table (you need this if you use table-layout: fixed)",
      "category": "virtual-scroll|content",
      "desc_cn": "表中的列数（如果使用表布局，则需要此值：fixed）"
    },
    "model-value": {
      "desc": "Model of the component; Must be Array if using 'multiple' prop; Either use this property (along with a listener for 'update:modelValue' event) OR use v-model directive",
      "required": true,
      "syncable": true,
      "category": "model",
      "type": "Any",
      "examples": [
        "v-model=\"myModel\""
      ]
    },
    "error": {
      "type": "Boolean",
      "desc": "Does field have validation errors?",
      "category": "behavior",
      "desc_cn": "字段是否有验证错误？"
    },
    "error-message": {
      "type": "String",
      "desc": "Validation error message (gets displayed only if 'error' is set to 'true')",
      "examples": [
        "Username must have at least 5 characters"
      ],
      "category": "content",
      "desc_cn": "验证错误消息（仅当“error”设置为“true”时显示）"
    },
    "no-error-icon": {
      "type": "Boolean",
      "desc": "Hide error icon when there is an error",
      "category": "content",
      "desc_cn": "出现错误时隐藏错误图标"
    },
    "rules": {
      "type": "Array",
      "tsType": "ValidationRule",
      "desc": "Array of Functions/Strings; If String, then it must be a name of one of the embedded validation rules",
      "examples": [
        ":rules=\"[ val => val.length <= 3 || 'Please use maximum 3 characters' ]\"",
        ":rules=\"[ 'fulltime' ]\"",
        ":rules=\"[ (val, rules) => rules.email(val) || 'Please enter a valid email address' ]\""
      ],
      "category": "behavior",
      "desc_cn": "函数/字符串数组；如果是字符串，则它必须是嵌入式验证规则的其中一个名称"
    },
    "reactive-rules": {
      "type": "Boolean",
      "desc": "By default a change in the rules does not trigger a new validation until the model changes; If set to true then a change in the rules will trigger a validation; Has a performance penalty, so use it only when you really need it",
      "category": "behavior",
      "desc_cn": "默认情况下，在模型更改之前，规则的更改不会触发新的验证；如果设置为true，则规则中的更改将触发验证；有性能损失，所以只有当你真的需要它时使用它"
    },
    "lazy-rules": {
      "type": [
        "Boolean",
        "String"
      ],
      "desc": "If set to boolean true then it checks validation status against the 'rules' only after field loses focus for first time; If set to 'ondemand' then it will trigger only when component's validate() method is manually called or when the wrapper QForm submits itself",
      "values": [
        "(Boolean) true",
        "(Boolean) false",
        "ondemand"
      ],
      "category": "behavior",
      "desc_cn": "如果设置为布尔真，则只有在字段第一次失去焦点后，它才会根据“rules”检查验证状态；如果设置为“ondemand”，则仅当手动调用组件的validate()方法或当包装器QForm提交自身时才会触发"
    },
    "label": {
      "type": "String",
      "desc": "A text label that will “float” up above the input field, once the field gets focus",
      "examples": [
        "Username"
      ],
      "category": "content",
      "desc_cn": "一种文本标签，一旦字段获得焦点，它将“浮动”到输入字段上方"
    },
    "stack-label": {
      "type": "Boolean",
      "desc": "Label will be always shown above the field regardless of field content (if any)",
      "category": "content",
      "desc_cn": "标签将始终显示在字段上方，而不考虑字段内容（如果有）"
    },
    "hint": {
      "type": "String",
      "desc": "Helper (hint) text which gets placed below your wrapped form component",
      "examples": [
        "Fill in between 3 and 12 characters"
      ],
      "category": "content",
      "desc_cn": "辅助（提示）文本，放在包装的表单组件下面"
    },
    "hide-hint": {
      "type": "Boolean",
      "desc": "Hide the helper (hint) text when field doesn't have focus",
      "category": "content",
      "desc_cn": "当字段没有焦点时隐藏辅助（提示）文本"
    },
    "prefix": {
      "type": "String",
      "desc": "Prefix",
      "examples": [
        "$"
      ],
      "category": "content",
      "desc_cn": "前缀"
    },
    "suffix": {
      "type": "String",
      "desc": "Suffix",
      "examples": [
        "@gmail.com"
      ],
      "category": "content",
      "desc_cn": "后缀"
    },
    "label-color": {
      "type": "String",
      "desc": "Color name for the label from the Quasar Color Palette; Overrides the 'color' prop; The difference from 'color' prop is that the label will always have this color, even when field is not focused",
      "examples": [
        "primary",
        "teal-10"
      ],
      "category": "style",
      "desc_cn": "标签的来自Quasar调色板的颜色名称；覆盖“color”属性；与“color”属性的区别在于，标签将始终具有此颜色，即使字段未聚焦"
    },
    "color": {
      "type": "String",
      "desc": "Color name for component from the Quasar Color Palette",
      "examples": [
        "primary",
        "teal-10"
      ],
      "category": "style",
      "desc_cn": "组件的颜色，来自 Quasar 调色板的颜色名称"
    },
    "bg-color": {
      "type": "String",
      "desc": "Color name for component from the Quasar Color Palette",
      "examples": [
        "primary",
        "teal-10"
      ],
      "category": "style",
      "desc_cn": "组件的颜色，来自 Quasar 调色板的颜色名称"
    },
    "dark": {
      "type": "Boolean",
      "desc": "Notify the component that the background is a dark color",
      "category": "style",
      "desc_cn": "设置组件背景为深色"
    },
    "loading": {
      "type": "Boolean",
      "desc": "Signals the user a process is in progress by displaying a spinner; Spinner can be customized by using the 'loading' slot.",
      "category": "behavior|content",
      "desc_cn": "通过显示旋转器向用户发出进程正在进行的信号；可以使用“loading”槽自定义旋转器。"
    },
    "clearable": {
      "type": "Boolean",
      "desc": "Appends clearable icon when a value (not undefined or null) is set; When clicked, model becomes null",
      "category": "behavior|content",
      "desc_cn": "设置值（非undefined或null）时附加可清除图标；单击时，模型将变为null"
    },
    "clear-icon": {
      "type": "String",
      "desc": "Custom icon to use for the clear button when using along with 'clearable' prop",
      "examples": [
        "close"
      ],
      "category": "content",
      "desc_cn": "与“clearable”属性一起使用时用于清除按钮的自定义图标"
    },
    "filled": {
      "type": "Boolean",
      "desc": "Use 'filled' design for the field",
      "category": "style",
      "desc_cn": "对字段使用“填充”设计"
    },
    "outlined": {
      "type": "Boolean",
      "desc": "Use 'outlined' design for the field",
      "category": "style",
      "desc_cn": "现场使用“轮廓线”设计"
    },
    "borderless": {
      "type": "Boolean",
      "desc": "Use 'borderless' design for the field",
      "category": "style",
      "desc_cn": "现场采用“无边界”设计"
    },
    "standout": {
      "type": [
        "Boolean",
        "String"
      ],
      "desc": "Use 'standout' design for the field; Specifies classes to be applied when focused (overriding default ones)",
      "examples": [
        "standout",
        "standout=\"bg-primary text-white\""
      ],
      "category": "style",
      "desc_cn": "现场采用“突出”设计；指定聚焦时要应用的类（覆盖默认类）"
    },
    "label-slot": {
      "type": "Boolean",
      "desc": "Enables label slot; You need to set it to force use of the 'label' slot if the 'label' prop is not set",
      "category": "content",
      "desc_cn": "启用标签槽；如果未设置“label”属性，则需要将其设置为强制使用“label”插槽"
    },
    "bottom-slots": {
      "type": "Boolean",
      "desc": "Enables bottom slots ('error', 'hint', 'counter')",
      "category": "content",
      "desc_cn": "启用底部插槽（'error'，'hint'，'counter'）"
    },
    "hide-bottom-space": {
      "type": "Boolean",
      "desc": "Do not reserve space for hint/error/counter anymore when these are not used; As a result, it also disables the animation for those; It also allows the hint/error area to stretch vertically based on its content",
      "category": "style",
      "desc_cn": "不使用hint/error/counter时，不要再为其保留空间；因此，它也会禁用这些对象的动画；它还允许hint/error区域根据其内容进行垂直拉伸"
    },
    "counter": {
      "type": "Boolean",
      "desc": "Show an automatic counter on bottom right",
      "category": "content",
      "desc_cn": "在右下角显示自动计数器"
    },
    "rounded": {
      "type": "Boolean",
      "desc": "Applies a small standard border-radius for a squared shape of the component",
      "category": "style",
      "desc_cn": "为组件应用较小标准的边框圆角（border-radius）"
    },
    "square": {
      "type": "Boolean",
      "desc": "Remove border-radius so borders are squared; Overrides 'rounded' prop",
      "category": "style",
      "desc_cn": "去除border-radius半径，使边界为正方形；覆盖“rounded”属性"
    },
    "dense": {
      "type": "Boolean",
      "desc": "Dense mode; occupies less space",
      "category": "style",
      "desc_cn": "紧凑模式，占用更少的空间"
    },
    "item-aligned": {
      "type": "Boolean",
      "desc": "Match inner content alignment to that of QItem",
      "category": "style",
      "desc_cn": "将内部内容对齐方式与QItem匹配"
    },
    "disable": {
      "type": "Boolean",
      "desc": "Put component in disabled mode",
      "category": "state",
      "desc_cn": "将组件置于禁用模式"
    },
    "readonly": {
      "type": "Boolean",
      "desc": "Put component in readonly mode",
      "category": "state",
      "desc_cn": "将组件置于只读模式"
    },
    "autofocus": {
      "type": "Boolean",
      "desc": "Focus field on initial component render",
      "category": "behavior",
      "desc_cn": "初始组件渲染时的聚焦字段"
    },
    "for": {
      "type": "String",
      "desc": "Used to specify the 'id' of the control and also the 'for' attribute of the label that wraps it; If no 'name' prop is specified, then it is used for this attribute as well",
      "examples": [
        "myFieldsId"
      ],
      "category": "behavior",
      "desc_cn": "用于指定控件的“id”以及包装它的标签的“for”属性；如果没有指定'name'属性，那么它也将用于此属性"
    },
    "multiple": {
      "type": "Boolean",
      "desc": "Allow multiple selection; Model must be Array",
      "category": "model|selection",
      "desc_cn": "允许多选；模型必须是数组"
    },
    "display-value": {
      "type": [
        "Number",
        "String"
      ],
      "desc": "Override default selection string, if not using 'selected' slot/scoped slot and if not using 'use-chips' prop",
      "examples": [
        "Options: x, y, z"
      ],
      "category": "selection",
      "desc_cn": "如果不使用“selected”插槽/作用域插槽，并且如果不使用“use-chips”属性，则重写默认选择字符串"
    },
    "display-value-html": {
      "type": "Boolean",
      "desc": "Force render the selected option(s) as HTML; This can lead to XSS attacks so make sure that you sanitize the content; Does NOT apply when using 'selected' or 'selected-item' slots!",
      "category": "selection"
    },
    "options": {
      "type": "Array",
      "desc": "Available options that the user can select from. For best performance freeze the list of options.",
      "default": "[]",
      "examples": [
        ":options=\"[ 'BMW', 'Samsung Phone' ]\"",
        ":options=\"[ { label: 'BMW', value: 'car' }, { label: 'Samsung Phone', value: 'phone' } ]\""
      ],
      "category": "options",
      "required": false,
      "desc_cn": "用户可以从中选择的可用选项。为获得最佳性能，请冻结选项列表。"
    },
    "option-value": {
      "type": [
        "Function",
        "String"
      ],
      "desc": "Property of option which holds the 'value'; If using a function then for best performance, reference it from your scope and do not define it inline",
      "default": "value",
      "params": {
        "option": {
          "type": [
            "String",
            "Object"
          ],
          "desc": "The current option being processed",
          "examples": [
            "'BMW'",
            "'Samsung Phone'",
            "{ label: 'BMW', value: 'car', cannotSelect: true }"
          ]
        }
      },
      "returns": {
        "type": "Any",
        "desc": "Value of the current option",
        "examples": [
          "'car'",
          "34"
        ]
      },
      "examples": [
        "option-value=\"modelNumber\"",
        ":option-value=\"(item) => item === null ? null : item.modelNumber\""
      ],
      "category": "options",
      "required": false,
      "desc_cn": "持有“value”的选项属性；如果使用函数，那么为了获得最佳性能，请从您的范围引用它，而不要内联定义它"
    },
    "option-label": {
      "type": [
        "Function",
        "String"
      ],
      "desc": "Property of option which holds the 'label'; If using a function then for best performance, reference it from your scope and do not define it inline",
      "default": "label",
      "params": {
        "option": {
          "type": [
            "String",
            "Object"
          ],
          "desc": "The current option being processed",
          "examples": [
            "'BMW'",
            "'Samsung Phone'",
            "{ label: 'BMW', value: 'car', cannotSelect: true }"
          ]
        }
      },
      "returns": {
        "type": "String",
        "desc": "Label of the current option",
        "examples": [
          "'BMW'",
          "'Samsung Phone'"
        ]
      },
      "examples": [
        "option-label=\"itemName\"",
        ":option-label=\"(item) => item === null ? 'Null value' : item.itemName\""
      ],
      "category": "options",
      "required": false,
      "desc_cn": "持有“label”的选项属性；如果使用函数，那么为了获得最佳性能，请从您的范围引用它，而不要内联定义它"
    },
    "option-disable": {
      "type": [
        "Function",
        "String"
      ],
      "desc": "Property of option which tells it's disabled; The value of the property must be a Boolean; If using a function then for best performance, reference it from your scope and do not define it inline",
      "default": "disable",
      "params": {
        "option": {
          "type": [
            "String",
            "Object"
          ],
          "desc": "The current option being processed",
          "examples": [
            "'BMW'",
            "'Samsung Phone'",
            "{ label: 'BMW', value: 'car', cannotSelect: true }"
          ]
        }
      },
      "returns": {
        "type": "Boolean",
        "desc": "If true, the current option will be disabled"
      },
      "examples": [
        "option-disable=\"cannotSelect\"",
        ":option-disable=\"(item) => item === null ? true : item.cannotSelect\""
      ],
      "category": "options",
      "required": false,
      "desc_cn": "表示已禁用的选项的属性；属性的值必须是布尔值；如果使用函数，那么为了获得最佳性能，请从您的范围引用它，而不要内联定义它"
    },
    "hide-selected": {
      "type": "Boolean",
      "desc": "Hides selection; Use the underlying input tag to hold the label (instead of showing it to the right of the input) of the selected option; Only works for non 'multiple' Selects",
      "category": "selection",
      "desc_cn": "隐藏选择；使用基础输入(input)标记来保存所选选项的标签（而不是将其显示在输入的右侧）；仅适用于非“multiple”下拉框"
    },
    "hide-dropdown-icon": {
      "type": "Boolean",
      "desc": "Hides dropdown icon",
      "category": "content|behavior",
      "desc_cn": "隐藏下拉图标"
    },
    "dropdown-icon": {
      "type": "String",
      "desc": "Icon name following Quasar convention; Make sure you have the icon library installed unless you are using 'img:' prefix; If 'none' (String) is used as value then no icon is rendered (but screen real estate will still be used for it)",
      "examples": [
        "map",
        "ion-add",
        "img:https://cdn.quasar.dev/logo-v2/svg/logo.svg",
        "img:path/to/some_image.png"
      ],
      "category": "content",
      "desc_cn": "图标的名称，需确保已经安装了相关的图标库，除非使用了 'img:' 前缀来引用本地的图片，如果设置为 'none'，则不会渲染图标"
    },
    "max-values": {
      "type": [
        "Number",
        "String"
      ],
      "desc": "Allow a maximum number of selections that the user can do",
      "category": "selection",
      "desc_cn": "允许用户可以进行的最大选择数"
    },
    "options-dense": {
      "type": "Boolean",
      "desc": "Dense mode for options list; occupies less space",
      "category": "options",
      "desc_cn": "选项列表的紧凑模式，占用更少的空间"
    },
    "options-dark": {
      "type": "Boolean",
      "desc": "Options menu will be colored with a dark color",
      "category": "options",
      "desc_cn": "选项菜单将用深色着色"
    },
    "options-selected-class": {
      "type": "String",
      "desc": "CSS class name for options that are active/selected; Set it to an empty string to stop applying the default (which is text-* where * is the 'color' prop value)",
      "examples": [
        "text-orange"
      ],
      "category": "options",
      "desc_cn": "活动/选定选项的CSS类名；将其设置为空字符串以停止应用默认值（即text-*其中*是“color”属性值）"
    },
    "options-html": {
      "type": "Boolean",
      "desc": "Force render the options as HTML; This can lead to XSS attacks so make sure that you sanitize the content; Does NOT apply when using 'option' slot!",
      "category": "options"
    },
    "options-cover": {
      "type": "Boolean",
      "desc": "Expanded menu will cover the component (will not work along with 'use-input' prop for obvious reasons)",
      "category": "options",
      "desc_cn": "展开菜单将覆盖组件（由于明显的原因，不能与“use-input”属性一起工作）"
    },
    "menu-shrink": {
      "type": "Boolean",
      "desc": "Allow the options list to be narrower than the field (only in menu mode)",
      "category": "options",
      "desc_cn": "允许选项列表比字段窄（仅在菜单模式下）"
    },
    "menu-anchor": {
      "type": "String",
      "desc": "Two values setting the starting position or anchor point of the options list relative to the field (only in menu mode)",
      "values": [
        "top left",
        "top middle",
        "top right",
        "top start",
        "top end",
        "center left",
        "center middle",
        "center right",
        "center start",
        "center end",
        "bottom left",
        "bottom middle",
        "bottom right",
        "bottom start",
        "bottom end"
      ],
      "category": "position",
      "desc_cn": "设置选项列表相对于字段的起始位置或定位点的两个值（仅在菜单模式下）"
    },
    "menu-self": {
      "type": "String",
      "desc": "Two values setting the options list's own position relative to its target (only in menu mode)",
      "values": [
        "top left",
        "top middle",
        "top right",
        "top start",
        "top end",
        "center left",
        "center middle",
        "center right",
        "center start",
        "center end",
        "bottom left",
        "bottom middle",
        "bottom right",
        "bottom start",
        "bottom end"
      ],
      "category": "position",
      "desc_cn": "两个值设置选项列表相对于其目标的自身位置（仅在菜单模式下）"
    },
    "menu-offset": {
      "type": "Array",
      "desc": "An array of two numbers to offset the options list horizontally and vertically in pixels (only in menu mode)",
      "examples": [
        "[8, 8]",
        "[5, 10]"
      ],
      "category": "position",
      "desc_cn": "两个数字组成的数组，以像素为单位水平和垂直偏移选项列表（仅在菜单模式下）"
    },
    "popup-content-class": {
      "type": "String",
      "desc": "Class definitions to be attributed to the popup content",
      "examples": [
        "my-special-class"
      ],
      "category": "style",
      "desc_cn": "作为弹出内容属性的类的定义"
    },
    "popup-content-style": {
      "type": [
        "String",
        "Array",
        "Object"
      ],
      "tsType": "VueStyleProp",
      "desc": "Style definitions to be attributed to the popup content",
      "examples": [
        "background-color: #ff0000",
        ":popup-content-style=\"{ backgroundColor: '#ff0000' }\""
      ],
      "category": "style",
      "desc_cn": "为弹出内容属性的样式定义"
    },
    "use-input": {
      "type": "Boolean",
      "desc": "Use an input tag where users can type",
      "category": "content",
      "desc_cn": "使用用户可以键入的输入标记"
    },
    "use-chips": {
      "type": "Boolean",
      "desc": "Use QChip to show what is currently selected",
      "category": "selection",
      "desc_cn": "使用QChip显示当前选择的内容"
    },
    "fill-input": {
      "type": "Boolean",
      "desc": "Fills the input with current value; Useful along with 'hide-selected'; Does NOT works along with 'multiple' selection",
      "category": "behavior",
      "desc_cn": "用当前值填充输入；与“hide-selected”一起使用；不适用于“multiple”选择"
    },
    "new-value-mode": {
      "type": "String",
      "desc": "Enables creation of new values and defines behavior when a new value is added: 'add' means it adds the value (even if possible duplicate), 'add-unique' adds only unique values, and 'toggle' adds or removes the value (based on if it exists or not already); When using this prop then listening for @new-value becomes optional (only to override the behavior defined by 'new-value-mode')",
      "values": [
        "add",
        "add-unique",
        "toggle"
      ],
      "category": "behavior",
      "desc_cn": "启用新值的创建并定义添加新值时的行为：“add”表示添加值（即使可能重复），“add-unique”仅添加唯一值，“toggle”添加或删除值（基于值是否存在）；使用此属性时，侦听@new-value将变为可选（仅覆盖“new-value-mode”定义的行为）"
    },
    "map-options": {
      "type": "Boolean",
      "desc": "Try to map labels of model from 'options' Array; has a small performance penalty; If you are using emit-value you will probably need to use map-options to display the label text in the select field rather than the value;  Refer to the 'Affecting model' section above",
      "category": "options",
      "desc_cn": "尝试从“options”数组映射模型标签；性能损失较小；如果使用的是emit-value，则可能需要使用map-options在select字段中显示标签文本，而不是值；请参阅上面的“影响模型”章节"
    },
    "emit-value": {
      "type": "Boolean",
      "desc": "Update model with the value of the selected option instead of the whole option",
      "category": "model",
      "desc_cn": "用所选选项的值而不是整个选项的值更新模型"
    },
    "input-debounce": {
      "type": [
        "Number",
        "String"
      ],
      "desc": "Debounce the input model update with an amount of milliseconds",
      "default": 500,
      "category": "content",
      "required": false,
      "desc_cn": "以毫秒为单位对输入模型更新进行去抖动"
    },
    "input-class": {
      "type": [
        "String",
        "Array",
        "Object"
      ],
      "tsType": "VueClassProp",
      "desc": "Class definitions to be attributed to the underlying input tag",
      "examples": [
        "my-special-class",
        ":input-class=\"{ 'my-special-class': <condition> }\""
      ],
      "category": "style",
      "desc_cn": "作为基础输入标记属性的类定义"
    },
    "input-style": {
      "type": [
        "String",
        "Array",
        "Object"
      ],
      "tsType": "VueStyleProp",
      "desc": "Style definitions to be attributed to the underlying input tag",
      "examples": [
        "background-color: #ff0000",
        ":input-style=\"{ backgroundColor: '#ff0000' }\""
      ],
      "category": "style",
      "desc_cn": "作为基础输入标记属性的样式定义"
    },
    "tabindex": {
      "type": [
        "Number",
        "String"
      ],
      "desc": "Tabindex HTML attribute value",
      "examples": [
        "0",
        "100"
      ],
      "category": "general",
      "desc_cn": "Tabindex HTML 属性值"
    },
    "autocomplete": {
      "type": "String",
      "desc": "Autocomplete attribute for field",
      "examples": [
        "autocomplete=\"country\""
      ],
      "category": "behavior",
      "desc_cn": "字段的自动完成属性"
    },
    "transition-show": {
      "type": "String",
      "desc": "Transition when showing the menu/dialog; One of Quasar's embedded transitions",
      "examples": [
        "fade",
        "slide-down"
      ],
      "category": "behavior",
      "default": "fade",
      "required": false,
      "desc_cn": "显示菜单/对话框时的转换；Quasar的嵌入式过渡动画之一"
    },
    "transition-hide": {
      "type": "String",
      "desc": "Transition when hiding the menu/dialog; One of Quasar's embedded transitions",
      "examples": [
        "fade",
        "slide-down"
      ],
      "category": "behavior",
      "default": "fade",
      "required": false,
      "desc_cn": "隐藏菜单/对话框时的转换；Quasar的嵌入式过渡动画之一"
    },
    "transition-duration": {
      "type": [
        "String",
        "Number"
      ],
      "desc": "Transition duration when hiding the menu/dialog (in milliseconds, without unit)",
      "default": 300,
      "category": "behavior",
      "required": false
    },
    "behavior": {
      "type": "String",
      "desc": "Overrides the default dynamic mode of showing as menu on desktop and dialog on mobiles",
      "values": [
        "default",
        "menu",
        "dialog"
      ],
      "default": "default",
      "category": "behavior",
      "required": false,
      "desc_cn": "覆盖默认的动态模式，即在桌面上显示菜单，在手机上显示对话框"
    }
  },
  "slots": {
    "default": {
      "desc": "Field main content",
      "desc_cn": "字段主要内容"
    },
    "prepend": {
      "desc": "Prepend inner field; Suggestions: QIcon, QBtn",
      "desc_cn": "前置内部字段；建议：QIcon、QBtn"
    },
    "append": {
      "desc": "Append to inner field; Suggestions: QIcon, QBtn",
      "desc_cn": "后置内部字段；建议：QIcon、QBtn"
    },
    "before": {
      "desc": "Prepend outer field; Suggestions: QIcon, QBtn",
      "desc_cn": "前置外部字段；建议：QIcon、QBtn"
    },
    "after": {
      "desc": "Append outer field; Suggestions: QIcon, QBtn",
      "desc_cn": "后置内部字段；建议：QIcon、QBtn"
    },
    "label": {
      "desc": "Slot for label; Used only if 'label-slot' prop is set or the 'label' prop is set; When it is used the text in the 'label' prop is ignored",
      "desc_cn": "标签槽；仅当设置了“label-slot”属性或设置了“label”属性时使用；使用时，“标签”属性中的文本将被忽略"
    },
    "error": {
      "desc": "Slot for errors; Enabled only if 'bottom-slots' prop is used; Suggestion: <div>",
      "desc_cn": "错误插槽；仅在使用“bottom-slots”属性时启用；建议：<div>"
    },
    "hint": {
      "desc": "Slot for hint text; Enabled only if 'bottom-slots' prop is used; Suggestion: <div>",
      "desc_cn": "提示文本槽；仅在使用“bottom-slots”属性时启用；建议：<div>"
    },
    "counter": {
      "desc": "Slot for counter text; Enabled only if 'bottom-slots' prop is used; Suggestion: <div>",
      "desc_cn": "计数器文本槽；仅在使用“bottom-slots”属性时启用；建议：<div>"
    },
    "loading": {
      "desc": "Override default spinner when component is in loading mode; Suggestion: spinners",
      "desc_cn": "当组件处于加载模式时重写默认旋转器；建议：spinners"
    },
    "selected": {
      "desc": "Override default selection slot; Suggestion: QChip",
      "desc_cn": "覆盖默认选择槽；建议：QChip"
    },
    "before-options": {
      "desc": "Template slot for the elements that should be rendered before the list of options",
      "desc_cn": "应在选项列表之前呈现的元素的模板槽"
    },
    "after-options": {
      "desc": "Template slot for the elements that should be rendered after the list of options",
      "desc_cn": "应在选项列表之后呈现的元素的模板槽"
    },
    "no-option": {
      "desc": "What should the menu display after filtering options and none are left to be displayed; Suggestion: <div>",
      "scope": {
        "inputValue": {
          "type": "String",
          "desc": "Input textfield value, if any (not QSelect model)",
          "examples": [
            "typed something"
          ]
        }
      }
    },
    "selected-item": {
      "desc": "Override default selection slot; Suggestion: QChip",
      "scope": {
        "index": {
          "type": "Number",
          "desc": "Selection index"
        },
        "opt": {
          "type": "Any",
          "desc": "Selected option -- its value is taken from model"
        },
        "selected": {
          "type": "Boolean",
          "desc": "Always true -- passed down as prop to QItem (when using QItem)"
        },
        "removeAtIndex": {
          "type": "Function",
          "desc": "Remove selected option located at specific index",
          "params": {
            "index": {
              "type": "Number",
              "required": true,
              "desc": "Index at which to remove selection"
            }
          },
          "returns": null
        },
        "toggleOption": {
          "type": "Function",
          "desc": "Add/remove option from model",
          "params": {
            "opt": {
              "type": "Any",
              "required": true,
              "desc": "Option to add to model"
            }
          },
          "returns": null
        },
        "tabindex": {
          "type": "Number",
          "desc": "Tabindex HTML attribute value associated with respective option",
          "values": [
            0,
            -1
          ]
        }
      }
    },
    "option": {
      "desc": "Customize how options are rendered; Suggestion: QItem",
      "scope": {
        "index": {
          "type": "Number",
          "desc": "Option index"
        },
        "opt": {
          "type": "Any",
          "desc": "Option -- its value is taken from 'options' prop"
        },
        "selected": {
          "type": "Boolean",
          "desc": "Is option selected?"
        },
        "focused": {
          "type": "Boolean",
          "desc": "Is option focused?"
        },
        "toggleOption": {
          "type": "Function",
          "desc": "Add/remove option from model",
          "params": {
            "opt": {
              "type": "Any",
              "required": true,
              "desc": "Option to add to model"
            }
          },
          "returns": null
        },
        "setOptionIndex": {
          "type": "Function",
          "desc": "Sets option from menu as 'focused'",
          "params": {
            "index": {
              "type": "Number",
              "required": true,
              "desc": "Index of option from menu"
            }
          },
          "returns": null
        },
        "itemProps": {
          "type": "Object",
          "desc": "Computed properties passed down to QItem"
        }
      }
    }
  },
  "events": {
    "virtual-scroll": {
      "desc": "Emitted when the virtual scroll occurs",
      "params": {
        "details": {
          "type": "Object",
          "desc": "Object of properties on the new scroll position",
          "definition": {
            "index": {
              "type": "Number",
              "required": true,
              "desc": "Index of the list item that was scrolled into view (0 based)",
              "desc_cn": "滚动到视图中的列表项的索引（基于0）"
            },
            "from": {
              "type": "Number",
              "required": true,
              "desc": "The index of the first list item that is rendered (0 based)",
              "desc_cn": "呈现的第一个列表项的索引（基于0）"
            },
            "to": {
              "type": "Number",
              "required": true,
              "desc": "The index of the last list item that is rendered (0 based)",
              "desc_cn": "最后呈现的列表项的索引（基于0）"
            },
            "direction": {
              "type": "String",
              "required": true,
              "desc": "Direction of change",
              "values": [
                "increase",
                "decrease"
              ],
              "desc_cn": "变化方向"
            },
            "ref": {
              "type": "Component",
              "required": true,
              "desc": "Vue reference to the QSelect",
              "tsType": "QSelect"
            }
          },
          "desc_cn": "新滚动位置上的属性对象"
        }
      },
      "desc_cn": "发生虚拟滚动时发出"
    },
    "clear": {
      "desc": "When using the 'clearable' property, this event is emitted when the clear icon is clicked",
      "params": {
        "value": {
          "type": "Any",
          "desc": "The previous value before clearing it",
          "desc_cn": "清除之前的值"
        }
      },
      "desc_cn": "使用“clearable”属性时，单击清除图标时会发出此事件"
    },
    "update:model-value": {
      "desc": "Emitted when the component needs to change the model; Is also used by v-model",
      "desc_cn":"当组件需要改变模型数据（model）时触发，也会被 v-model 使用",
      "params": {
        "value": {
          "type": "Any",
          "desc": "New model value",
          "required": true
        }
      }
    },
    "input-value": {
      "desc": "Emitted when the value in the text input changes",
      "params": {
        "value": {
          "type": "String",
          "desc": "New text value",
          "desc_cn": "新文本值"
        }
      },
      "desc_cn": "当文本输入中的值更改时发出"
    },
    "remove": {
      "desc": "Emitted when an option is removed from selection",
      "params": {
        "details": {
          "type": "Object",
          "desc": "Removal details",
          "definition": {
            "index": {
              "type": "Number",
              "required": true,
              "desc": "Model index at which removal took place",
              "desc_cn": "移除发生时的模型索引"
            },
            "value": {
              "type": "Any",
              "required": true,
              "desc": "The actual value that was removed",
              "desc_cn": "删除的实际值"
            }
          },
          "desc_cn": "删除详细信息"
        }
      },
      "desc_cn": "从选择中删除选项时发出"
    },
    "add": {
      "desc": "Emitted when an option is added to the selection",
      "params": {
        "details": {
          "type": "Object",
          "desc": "Addition details",
          "definition": {
            "index": {
              "type": "Number",
              "required": true,
              "desc": "Model index at which addition took place",
              "desc_cn": "添加发生时的模型索引"
            },
            "value": {
              "type": "Any",
              "required": true,
              "desc": "The actual value that was added",
              "desc_cn": "添加的实际值"
            }
          },
          "desc_cn": "附加详细信息"
        }
      },
      "desc_cn": "将选项添加到选择时发出"
    },
    "new-value": {
      "desc": "Enables creation of new values; Emitted when a new value has been created; You can override 'new-value-mode' property with it",
      "params": {
        "inputValue": {
          "type": "String",
          "desc": "What the user typed",
          "examples": [
            "phone"
          ],
          "desc_cn": "用户键入的内容"
        },
        "doneFn": {
          "type": "Function",
          "desc": "Adds (optional) value to the model; Do not forget to call it after you validate the newly created value; Call it with no parameters if nothing should be added",
          "params": {
            "item": {
              "type": "Any",
              "required": false,
              "desc": "Item to add",
              "desc_cn": "要添加的项目"
            },
            "mode": {
              "type": "String",
              "required": false,
              "desc": "Override 'new-value-mode' (prop) behavior should you wish to",
              "values": [
                "add",
                "add-unique",
                "toggle"
              ],
              "default": "add",
              "desc_cn": "如果希望，请重写“new-value-mode”（属性）行为"
            }
          },
          "returns": null,
          "desc_cn": "为模型添加（可选）值；在验证新创建的值之后，不要忘记调用它；如果不需要添加任何参数，则调用它"
        }
      },
      "desc_cn": "能够创造新值；创建新值时发出；可以用它重写“'new-value-mode”属性"
    },
    "filter": {
      "desc": "Emitted when user wants to filter a value",
      "params": {
        "inputValue": {
          "type": "String",
          "desc": "What the user typed",
          "examples": [
            "phone"
          ],
          "desc_cn": "用户键入的内容"
        },
        "doneFn": {
          "type": "Function",
          "desc": "Supply a function which makes the necessary updates",
          "params": {
            "callbackFn": {
              "type": "Function",
              "required": true,
              "desc": "Callback to call to make the actual updates",
              "params": null,
              "returns": null,
              "desc_cn": "回调以调用以进行实际更新"
            },
            "afterFn": {
              "type": "Function",
              "required": false,
              "desc": "Callback to call at the end after the update has been fully processed by QSelect",
              "params": {
                "ref": {
                  "type": "Component",
                  "tsType": "QSelect",
                  "required": true,
                  "desc": "Vue reference to the QSelect which triggered the filtering",
                  "desc_cn": "对触发筛选的QSelect的Vue引用"
                }
              },
              "returns": null,
              "desc_cn": "在QSelect完全处理完更新后，在末尾调用的回调"
            }
          },
          "returns": null,
          "desc_cn": "提供一个进行必要更新的函数"
        },
        "abortFn": {
          "type": "Function",
          "desc": "Call this function if something went wrong",
          "params": null,
          "returns": null,
          "desc_cn": "如果出现问题，请调用此函数"
        }
      },
      "desc_cn": "当用户要筛选值时发出"
    },
    "filter-abort": {
      "desc": "Emitted when a filtering was aborted; Probably a new one was requested?",
      "desc_cn": "过滤中止时发出；可能有人要求换个新的？"
    },
    "popup-show": {
      "desc": "Emitted when the select options menu or dialog is shown.",
      "params": {
        "evt": {
          "type": "Event",
          "desc": "JS event object",
          "desc_cn": "JS事件对象"
        }
      },
      "desc_cn": "选择的选项菜单或对话框显示时发出。"
    },
    "popup-hide": {
      "desc": "Emitted when the select options menu or dialog is hidden.",
      "params": {
        "evt": {
          "type": "Event",
          "desc": "JS event object",
          "desc_cn": "JS事件对象"
        }
      },
      "desc_cn": "选择的选项菜单或对话框隐藏时发出。"
    }
  },
  "methods": {
    "scrollTo": {
      "desc": "Scroll the virtual scroll list to the item with the specified index (0 based)",
      "params": {
        "index": {
          "type": [
            "String",
            "Number"
          ],
          "desc": "The index of the list item (0 based)",
          "required": true,
          "desc_cn": "列表项的索引（基于0）"
        },
        "edge": {
          "type": "String",
          "desc": "The edge to align to if the item is not visible already (by default it aligns to end if scrolling towards the end and to start otherwise); If the '-force' version is used then it always aligns",
          "values": [
            "start",
            "center",
            "end",
            "start-force",
            "center-force",
            "end-force"
          ],
          "desc_cn": "如果项目不可见，则要对齐的边（默认情况下，如果滚动到终点，则对齐到终点，否则对齐到起点）；如果使用'-force'版本，则它始终对齐"
        }
      },
      "desc_cn": "将虚拟滚动列表滚动到具有指定索引的项目（基于0）"
    },
    "reset": {
      "desc": "Resets the virtual scroll computations; Needed for custom edge-cases",
      "desc_cn": "重置虚拟滚动计算；用于定制边缘案例"
    },
    "refresh": {
      "desc": "Refreshes the virtual scroll list; Use it after appending items",
      "params": {
        "index": {
          "type": [
            "String",
            "Number"
          ],
          "desc": "The index of the list item to scroll to after refresh (0 based); If it's not specified the scroll position is not changed; Use a negative value to keep scroll position",
          "desc_cn": "刷新后要滚动到的列表项的索引（基于0）；如果未指定滚动位置，则滚动位置不变；使用负值保持滚动位置"
        }
      },
      "desc_cn": "刷新虚拟滚动列表；附加项目后使用"
    },
    "resetValidation": {
      "desc": "Reset validation status",
      "desc_cn": "重置验证状态"
    },
    "validate": {
      "desc": "Trigger a validation",
      "params": {
        "value": {
          "type": "Any",
          "desc": "Optional value to validate against",
          "desc_cn": "要验证的可选值"
        }
      },
      "returns": {
        "type": [
          "Boolean",
          "Promise<boolean>"
        ],
        "desc": "True/false if no async rules, otherwise a Promise with the outcome (true -> validation was a success, false -> invalid models detected)",
        "examples": [
          "true",
          "validate().then(outcome => { ... })"
        ],
        "desc_cn": "如果没有异步规则，则为True/false，否则为带有结果的Promise（True->验证成功，false->检测到无效模型）"
      },
      "desc_cn": "触发验证"
    },
    "focus": {
      "desc": "Focus component",
      "desc_cn": "聚焦组件"
    },
    "blur": {
      "desc": "Blur component (lose focus)"
    },
    "showPopup": {
      "desc": "Focus and open popup",
      "desc_cn": "聚焦并打开弹出窗口"
    },
    "hidePopup": {
      "desc": "Hide popup",
      "desc_cn": "隐藏弹出窗口"
    },
    "removeAtIndex": {
      "desc": "Remove selected option located at specific index",
      "params": {
        "index": {
          "type": "Number",
          "required": true,
          "desc": "Index at which to remove selection",
          "desc_cn": "删除所选内容的索引"
        }
      },
      "desc_cn": "删除位于特定索引处的选定选项"
    },
    "add": {
      "desc": "Adds option to model",
      "params": {
        "opt": {
          "type": "Any",
          "required": true,
          "desc": "Option to add to model",
          "desc_cn": "添加到模型的选项"
        },
        "unique": {
          "type": "Boolean",
          "desc": "Option must be unique",
          "desc_cn": "选项必须唯一"
        }
      },
      "desc_cn": "向模型添加选项"
    },
    "toggleOption": {
      "desc": "Add/remove option from model",
      "params": {
        "opt": {
          "type": "Any",
          "required": true,
          "desc": "Option to add to model",
          "desc_cn": "添加到模型的选项"
        },
        "keepOpen": {
          "type": "Boolean",
          "desc": "Don't close the menu and do not clear the filter",
          "desc_cn": "不要关闭菜单，也不要清除过滤器"
        }
      },
      "desc_cn": "从模型中添加/删除选项"
    },
    "getOptionIndex": {
      "desc": "Gets current focused option index from menu; It's -1 if no option is focused",
      "returns": {
        "type": "Number",
        "desc": "Index of option from menu; It's -1 if no option is focused"
      },
      "addedIn": "v2.5.4"
    },
    "setOptionIndex": {
      "desc": "Sets option from menu as 'focused'; -1 to focus none",
      "params": {
        "index": {
          "type": "Number",
          "required": true,
          "desc": "Index of option from menu; -1 to focus none"
        }
      }
    },
    "moveOptionSelection": {
      "desc": "Move selected option from menu by index offset",
      "params": {
        "offset": {
          "type": "Number",
          "desc": "Number of options to move up or down",
          "default": 1,
          "required": false,
          "desc_cn": "向上或向下移动的选项数"
        },
        "skipInputValue": {
          "type": "Boolean",
          "desc": "Don't set input-value on navigation",
          "desc_cn": "不设置导航的输入值"
        }
      },
      "desc_cn": "按索引偏移量从菜单中移动所选选项"
    },
    "filter": {
      "desc": "Filter options",
      "params": {
        "value": {
          "type": "String",
          "required": true,
          "desc": "String to filter with",
          "examples": [
            "car"
          ],
          "desc_cn": "要筛选的字符串"
        }
      },
      "desc_cn": "筛选选项"
    },
    "updateMenuPosition": {
      "desc": "Recomputes menu position",
      "desc_cn": "重新计算菜单位置"
    },
    "updateInputValue": {
      "desc": "If 'use-input' is specified, this updates the value that it holds",
      "params": {
        "value": {
          "type": "String",
          "required": true,
          "desc": "String to set the input value to",
          "examples": [
            "hotel"
          ],
          "desc_cn": "设置输入值的字符串"
        },
        "noFilter": {
          "type": "Boolean",
          "desc": "Set to true if you don't want the filter (if any) to be also triggered",
          "desc_cn": "如果不希望同时触发筛选器（如果有），请设置为true"
        }
      },
      "desc_cn": "如果指定了use-input，则会更新它所保存的值"
    },
    "isOptionSelected": {
      "desc": "Tells if an option is selected",
      "params": {
        "opt": {
          "type": "Any",
          "required": true,
          "desc": "Option entry",
          "desc_cn": "选项条目"
        }
      },
      "returns": {
        "type": "Boolean",
        "desc": "Option is selected or not",
        "desc_cn": "选项是否选中"
      },
      "desc_cn": "指示是否选择了选项"
    },
    "getEmittingOptionValue": {
      "desc": "Get the model value that would be emitted by QSelect when selecting a said option; Also takes into consideration if 'emit-value' is set",
      "params": {
        "opt": {
          "type": "Any",
          "required": true,
          "desc": "Option entry",
          "desc_cn": "选项条目"
        }
      },
      "returns": {
        "type": "Any",
        "desc": "Emitting model value of said option",
        "desc_cn": "所述选项的模型值"
      },
      "desc_cn": "获取选择所述选项时QSelect将发出的模型值；如果设置了“emit-value”，也会考虑到这一点"
    },
    "getOptionValue": {
      "desc": "Get the model value of an option; Takes into consideration 'option-value' (if used), but does not looks for 'emit-value', like getEmittingOptionValue() does",
      "params": {
        "opt": {
          "type": "Any",
          "required": true,
          "desc": "Option entry",
          "desc_cn": "选项条目"
        }
      },
      "returns": {
        "type": "Any",
        "desc": "Model value of said option",
        "desc_cn": "所述选项的模型值"
      },
      "desc_cn": "得到选项的模型值；考虑“option-value”（如果使用），但不像getEmittingOptionValue()那样查找“emit-value”"
    },
    "getOptionLabel": {
      "desc": "Get the label of an option; Takes into consideration the 'option-label' prop (if used)",
      "params": {
        "opt": {
          "type": "Any",
          "required": true,
          "desc": "Option entry",
          "desc_cn": "选项分录"
        }
      },
      "returns": {
        "type": "Any",
        "desc": "Label of said option",
        "desc_cn": "所述选项的标签"
      },
      "desc_cn": "获取选项的标签；考虑“option-label”属性（如果使用）"
    },
    "isOptionDisabled": {
      "desc": "Tells if an option is disabled; Takes into consideration 'option-disable' prop (if used)",
      "params": {
        "opt": {
          "type": "Any",
          "required": true,
          "desc": "Option entry",
          "desc_cn": "选项分录"
        }
      },
      "returns": {
        "type": "Boolean",
        "desc": "Option is disabled or not",
        "desc_cn": "选项是否禁用"
      },
      "desc_cn": "指示是否禁用某个选项；考虑“option-disable”属性（如果使用）"
    }
  },
  "computedProps": {
    "hasError": {
      "type": "Boolean",
      "desc": "Whether the component is in error state"
    }
  }
}