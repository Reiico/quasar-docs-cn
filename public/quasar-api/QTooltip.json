{
  "type": "component",
  "meta": {
    "docsUrl": "https://v2.quasar.dev/vue-components/tooltip"
  },
  "props": {
    "transition-show": {
      "type": "String",
      "desc": "One of Quasar's embedded transitions",
      "desc_cn": "Quasar 内置的过渡效果之一",
      "examples": [
        "fade",
        "slide-down"
      ],
      "category": "transition",
      "default": "jump-down",
      "required": false,
      "desc_cn": "Quasar的嵌入式过渡动画之一"
    },
    "transition-hide": {
      "type": "String",
      "desc": "One of Quasar's embedded transitions",
      "desc_cn": "Quasar 内置的过渡效果之一",
      "examples": [
        "fade",
        "slide-down"
      ],
      "category": "transition",
      "default": "jump-up",
      "required": false,
      "desc_cn": "Quasar的嵌入式过渡动画之一"
    },
    "transition-duration": {
      "type": [
        "String",
        "Number"
      ],
      "desc": "Transition duration (in milliseconds, without unit)",
      "default": 300,
      "category": "transition",
      "required": false
    },
    "model-value": {
      "type": "Boolean",
      "desc": "Model of the component defining shown/hidden state; Either use this property (along with a listener for 'update:model-value' event) OR use v-model directive",
      "category": "model"
    },
    "max-height": {
      "type": "String",
      "desc": "The maximum height of the Tooltip; Size in CSS units, including unit name",
      "examples": [
        "16px",
        "2rem"
      ],
      "category": "content",
      "desc_cn": "工具提示的最大高度；带有 CSS 单位的尺寸大小，包括单位的名称"
    },
    "max-width": {
      "type": "String",
      "desc": "The maximum width of the Tooltip; Size in CSS units, including unit name",
      "examples": [
        "16px",
        "2rem"
      ],
      "category": "content",
      "desc_cn": "工具提示的最大宽度；带有 CSS 单位的尺寸大小，包括单位的名称"
    },
    "anchor": {
      "type": "String",
      "desc": "Two values setting the starting position or anchor point of the Tooltip relative to its target",
      "values": [
        "top left",
        "top middle",
        "top right",
        "top start",
        "top end",
        "center left",
        "center middle",
        "center right",
        "center start",
        "center end",
        "bottom left",
        "bottom middle",
        "bottom right",
        "bottom start",
        "bottom end"
      ],
      "default": "bottom middle",
      "category": "position",
      "required": false,
      "desc_cn": "设置工具提示相对于其目标的起始位置或定位点的两个值"
    },
    "self": {
      "type": "String",
      "desc": "Two values setting the Tooltip's own position relative to its target",
      "values": [
        "top left",
        "top middle",
        "top right",
        "top start",
        "top end",
        "center left",
        "center middle",
        "center right",
        "center start",
        "center end",
        "bottom left",
        "bottom middle",
        "bottom right",
        "bottom start",
        "bottom end"
      ],
      "default": "top middle",
      "category": "position",
      "required": false,
      "desc_cn": "两个值设置工具提示自身相对于其目标的位置"
    },
    "offset": {
      "type": "Array",
      "desc": "An array of two numbers to offset the Tooltip horizontally and vertically in pixels",
      "default": "[14, 14]",
      "examples": [
        "[8, 8]",
        "[5, 10]"
      ],
      "category": "position",
      "required": false,
      "desc_cn": "以像素为单位水平和垂直偏移工具提示的两个数字的数组"
    },
    "scroll-target": {
      "type": [
        "Element",
        "String"
      ],
      "desc": "CSS selector or DOM element to be used as a custom scroll container instead of the auto detected one",
      "examples": [
        ":scroll-target=\"$refs.scrollTarget\"",
        "scroll-target=\".scroll-target-class\"",
        "scroll-target=\"#scroll-target-id\"",
        "scroll-target=\"body\""
      ],
      "category": "behavior",
      "desc_cn": "CSS选择器或DOM元素用作自定义滚动容器，而不是自动检测到的滚动容器"
    },
    "target": {
      "type": [
        "Boolean",
        "String"
      ],
      "desc": "Configure a target element to trigger Tooltip toggle; 'true' means it enables the parent DOM element, 'false' means it disables attaching events to any DOM elements; By using a String (CSS selector) it attaches the events to the specified DOM element (if it exists)",
      "default": true,
      "values": [
        "(Boolean) true",
        "(Boolean) false",
        "(CSS selector)"
      ],
      "examples": [
        ":target=\"false\"",
        "target=\".my-parent\""
      ],
      "category": "behavior",
      "required": false,
      "desc_cn": "配置目标元素以触发工具提示切换；'“true”表示启用父DOM元素，“false”表示禁用将事件附加到任何DOM元素；通过使用字符串（CSS选择器），它将事件附加到指定的DOM元素（如果存在）"
    },
    "no-parent-event": {
      "type": "Boolean",
      "desc": "Skips attaching events to the target DOM element (that trigger the element to get shown)",
      "category": "behavior",
      "desc_cn": "取消将事件附加到目标DOM元素（触发元素显示的事件）"
    },
    "delay": {
      "type": "Number",
      "desc": "Configure Tooltip to appear with delay",
      "default": 0,
      "category": "behavior",
      "required": false,
      "desc_cn": "将工具提示配置为延迟显示"
    },
    "hide-delay": {
      "type": "Number",
      "desc": "Configure Tooltip to disappear with delay",
      "default": 0,
      "category": "behavior",
      "required": false,
      "desc_cn": "将工具提示配置为延迟消失"
    }
  },
  "slots": {
    "default": {
      "desc": "Default slot in the devland unslotted content of the component",
      "desc_cn": "组件的devland unslotted内容中的默认插槽"
    }
  },
  "events": {
    "update:model-value": {
      "desc": "Emitted when showing/hidden state changes; Is also used by v-model",
      "params": {
        "value": {
          "type": "Boolean",
          "desc": "New state (showing/hidden)"
        }
      }
    },
    "show": {
      "desc": "Emitted after component has triggered show()",
      "params": {
        "evt": {
          "type": "Event",
          "desc": "JS event object",
          "required": true,
          "desc_cn": "JS事件对象"
        }
      },
      "desc_cn": "在组件触发show()后发出"
    },
    "before-show": {
      "desc": "Emitted when component triggers show() but before it finishes doing it",
      "params": {
        "evt": {
          "type": "Event",
          "desc": "JS event object",
          "required": true,
          "desc_cn": "JS事件对象"
        }
      },
      "desc_cn": "在组件触发show()但在完成之前发出"
    },
    "hide": {
      "desc": "Emitted after component has triggered hide()",
      "params": {
        "evt": {
          "type": "Event",
          "desc": "JS event object",
          "required": true,
          "desc_cn": "JS事件对象"
        }
      },
      "desc_cn": "在组件触发hide()后发出"
    },
    "before-hide": {
      "desc": "Emitted when component triggers hide() but before it finishes doing it",
      "params": {
        "evt": {
          "type": "Event",
          "desc": "JS event object",
          "required": true,
          "desc_cn": "JS事件对象"
        }
      },
      "desc_cn": "在组件触发hide()但在完成之前发出"
    }
  },
  "methods": {
    "show": {
      "desc": "Triggers component to show",
      "params": {
        "evt": {
          "type": "Event",
          "desc": "JS event object",
          "required": false,
          "desc_cn": "JS事件对象"
        }
      },
      "desc_cn": "触发组件显示"
    },
    "hide": {
      "desc": "Triggers component to hide",
      "params": {
        "evt": {
          "type": "Event",
          "desc": "JS event object",
          "required": false,
          "desc_cn": "JS事件对象"
        }
      },
      "desc_cn": "触发组件隐藏"
    },
    "toggle": {
      "params": {
        "evt": {
          "type": "Event",
          "desc": "JS event object",
          "required": false,
          "desc_cn": "JS事件对象"
        }
      },
      "desc": "Triggers component to toggle between show/hide",
      "desc_cn": "触发组件在显示/隐藏之间切换"
    },
    "updatePosition": {
      "desc": "There are some custom scenarios for which Quasar cannot automatically reposition the tooltip without significant performance drawbacks so the optimal solution is for you to call this method when you need it",
      "desc_cn": "有一些自定义场景，Quasar无法在没有明显性能缺陷的情况下自动重新定位工具提示，因此最佳解决方案是在需要时调用此方法"
    }
  },
  "computedProps": {
    "contentEl": {
      "type": "Element",
      "desc": "The DOM Element of the rendered content",
      "addedIn": "v2.10.1"
    }
  }
}