{
  "type": "component",
  "meta": {
    "docsUrl": "https://v2.quasar.dev/vue-components/editor"
  },
  "props": {
    "fullscreen": {
      "type": "Boolean",
      "sync": true,
      "desc": "Fullscreen mode",
      "examples": [
        "v-model:fullscreen=\"isFullscreen\""
      ],
      "category": "behavior",
      "syncable": true,
      "desc_cn": "全屏模式"
    },
    "no-route-fullscreen-exit": {
      "type": "Boolean",
      "desc": "Changing route app won't exit fullscreen",
      "category": "behavior",
      "desc_cn": "更改路由应用程序不会退出全屏"
    },
    "model-value": {
      "desc": "Model of the component; Either use this property (along with a listener for 'update:modelValue' event) OR use v-model directive",
      "required": true,
      "syncable": true,
      "category": "model",
      "type": "String",
      "examples": [
        "v-model=\"content\""
      ],
      "desc_cn": "组件的 model 数据，可使用此属性（搭配一个 'update:model-value' 监听事件）或者直接使用 v-model 指令。"
    },
    "readonly": {
      "type": "Boolean",
      "desc": "Put component in readonly mode",
      "category": "state",
      "desc_cn": "将组件置于只读模式"
    },
    "square": {
      "type": "Boolean",
      "desc": "Removes border-radius so borders are squared",
      "category": "style",
      "desc_cn": "删除边框圆角（border-radius），使边框为正方形"
    },
    "flat": {
      "type": "Boolean",
      "desc": "Applies a 'flat' design (no borders)",
      "category": "style",
      "desc_cn": "应用 'flat' 设计（无边框）"
    },
    "dense": {
      "type": "Boolean",
      "desc": "Dense mode; toolbar buttons are shown on one-line only",
      "category": "style",
      "desc_cn": "紧凑模式；工具栏按钮仅显示在一行上"
    },
    "dark": {
      "type": "Boolean",
      "desc": "Notify the component that the background is a dark color",
      "category": "style",
      "desc_cn": "设置组件背景为深色"
    },
    "disable": {
      "type": "Boolean",
      "desc": "Put component in disabled mode",
      "category": "state",
      "desc_cn": "将组件置于禁用模式"
    },
    "min-height": {
      "type": "String",
      "desc": "CSS unit for the minimum height of the editable area",
      "default": "10rem",
      "examples": [
        "15rem",
        "50vh"
      ],
      "category": "style",
      "required": false,
      "desc_cn": "可编辑区域最小高度（带单位的 CSS 尺寸）"
    },
    "max-height": {
      "type": "String",
      "desc": "CSS unit for maximum height of the input area",
      "examples": [
        "1000px",
        "90vh"
      ],
      "category": "style",
      "desc_cn": "输入区域最大高度（带单位的 CSS 尺寸）"
    },
    "height": {
      "type": "String",
      "desc": "CSS value to set the height of the editable area",
      "examples": [
        "100px",
        "50vh"
      ],
      "category": "style",
      "desc_cn": "设置可编辑区域的高度（带单位的 CSS 尺寸）"
    },
    "definitions": {
      "type": "Object",
      "desc": "Definition of commands and their buttons to be included in the 'toolbar' prop",
      "examples": [
        ":definitions=\"{ save: { tip: 'Save your work', icon: 'save', label: 'Save', handler: saveWork }, upload: { tip: 'Upload to cloud', icon: 'cloud_upload', label: 'Upload', handler: uploadIt } }\""
      ],
      "definition": {
        "...commandName": {
          "type": "Object",
          "tsType": "QEditorCommand",
          "autoDefineTsType": true,
          "desc": "Command definition",
          "definition": {
            "label": {
              "type": "String",
              "desc": "Label of the button",
              "examples": [
                "Addresses"
              ],
              "desc_cn": "按钮的文案"
            },
            "tip": {
              "type": "String",
              "desc": "Text to be displayed as a tooltip on hover",
              "examples": [
                "Add a contact from the Address Book"
              ],
              "desc_cn": "鼠标悬浮提示显示的文本"
            },
            "htmlTip": {
              "type": "String",
              "desc": "HTML formatted text to be displayed within a tooltip on hover",
              "examples": [
                "Add a <span class=\"red\">user</span> from the address book"
              ],
              "desc_cn": "鼠标悬浮提示显示的 HTML"
            },
            "icon": {
              "type": "String",
              "desc": "Icon of the button",
              "examples": [
                "fas fa-address-book"
              ],
              "desc_cn": "按钮的图标"
            },
            "key": {
              "type": "Number",
              "desc": "Keycode of a key to be used together with the <ctrl> key for use as a shortcut to trigger this element",
              "examples": [
                "12",
                "36"
              ],
              "desc_cn": "此元素绑定的 <ctrl> 快捷键的 keycode"
            },
            "handler": {
              "type": "Function",
              "desc": "Either this or \"cmd\" is required. Function for when button gets clicked/tapped.",
              "params": null,
              "returns": null,
              "examples": [
                "() => this.uploadFile()"
              ],
              "desc_cn": "必须要有此属性或者 \"cmd\"。按钮被点击时执行的函数"
            },
            "cmd": {
              "type": "String",
              "desc": "Either this or \"handler\" is required. This must be a valid execCommand method according to the designMode API.",
              "examples": [
                "insertHTML",
                "justifyFull"
              ],
              "desc_cn": "必须要有此属性或者 \"handler\"。必须是一个 designMode API 中合法的可执行命令"
            },
            "param": {
              "type": "String",
              "desc": "Only set a param if using a \"cmd\". This is commonly text or HTML to inject, but is highly dependent upon the specific cmd being called.",
              "examples": [
                "<img src=\"://uploads/001.jpg\" alt=\"nice pic\" />"
              ],
              "desc_cn": "当使用 \"cmd\" 时可传入的参数。通常会是需要注入的文本或 HTML，但高度取决于所调用的特定命令"
            },
            "disable": {
              "type": [
                "Boolean",
                "Function"
              ],
              "desc": "Is button disabled?",
              "returns": {
                "type": "Boolean",
                "desc": "If true, the button will be disabled",
                "desc_cn": "如果为 true，此按钮禁用"
              },
              "examples": [
                "!user.active",
                "() => !checkIfUserIsActive()"
              ],
              "desc_cn": "设置按钮是否被禁用"
            },
            "type": {
              "type": "String",
              "desc": "Pass the value \"no-state\" if the button should not have an \"active\" state",
              "values": [
                null,
                "no-state"
              ],
              "examples": [
                "no-state"
              ],
              "desc_cn": "如果按钮没有一个激活状态，可以传入 \"no-state\" 值"
            },
            "fixedLabel": {
              "type": "Boolean",
              "desc": "Lock the button label, so it doesn't change based on the child option selected.",
              "desc_cn": "锁定按钮标签，以便它不会根据所选子选项更改。"
            },
            "fixedIcon": {
              "type": "Boolean",
              "desc": "Lock the button icon, so it doesn't change based on the child option selected.",
              "desc_cn": "锁定按钮图标，以便它不会根据所选子选项更改。"
            },
            "highlight": {
              "type": "Boolean",
              "desc": "Highlight the toolbar button, when a child option has been selected.",
              "desc_cn": "当选择了子选项时，高亮显示工具栏按钮。"
            }
          }
        }
      },
      "category": "toolbar",
      "desc_cn": "'toolbar' 属性中包含的命令及其按钮的定义"
    },
    "fonts": {
      "type": "Object",
      "desc": "Object with definitions of fonts",
      "examples": [
        ":fonts=\"{ arial: 'Arial', arial_black: 'Arial Black', comic_sans: 'Comic Sans MS' }\""
      ],
      "category": "toolbar",
      "desc_cn": "字体的定义对象"
    },
    "toolbar": {
      "type": "Array",
      "desc": "An array of arrays of Objects/Strings that you use to define the construction of the elements and commands available in the toolbar",
      "default": [
        [
          "left",
          "center",
          "right",
          "justify"
        ],
        [
          "bold",
          "italic",
          "underline",
          "strike"
        ],
        [
          "undo",
          "redo"
        ]
      ],
      "examples": [
        [
          "left",
          "center",
          "right",
          "justify"
        ]
      ],
      "category": "toolbar",
      "required": false,
      "desc_cn": "对象/字符串数组，用于定义工具栏中可用元素和命令的结构"
    },
    "toolbar-color": {
      "type": "String",
      "desc": "Font color (from the Quasar Palette) of buttons and text in the toolbar",
      "examples": [
        "primary",
        "teal-10"
      ],
      "category": "toolbar",
      "desc_cn": "工具栏中按钮和文本的字体颜色（来自 Quasar 调色板）"
    },
    "toolbar-text-color": {
      "type": "String",
      "desc": "Text color (from the Quasar Palette) of toolbar commands",
      "examples": [
        "primary",
        "teal-10"
      ],
      "category": "toolbar",
      "desc_cn": "工具栏命令的文本颜色（来自 Quasar 调色板）"
    },
    "toolbar-toggle-color": {
      "type": "String",
      "desc": "Choose the active color (from the Quasar Palette) of toolbar commands button",
      "default": "primary",
      "examples": [
        "secondary",
        "blue-3"
      ],
      "category": "toolbar",
      "required": false,
      "desc_cn": "设置工具栏命令按钮的激活的颜色（从 Quasar 调色板）"
    },
    "toolbar-bg": {
      "type": "String",
      "desc": "Toolbar background color (from Quasar Palette)",
      "default": "grey-3",
      "examples": [
        "secondary",
        "blue-3"
      ],
      "category": "toolbar",
      "required": false,
      "desc_cn": "工具栏背景色（来自 Quasar 调色板）"
    },
    "toolbar-outline": {
      "type": "Boolean",
      "desc": "Toolbar buttons are rendered \"outlined\"",
      "category": "toolbar|style",
      "desc_cn": "工具栏按钮呈现 \"outlined\""
    },
    "toolbar-push": {
      "type": "Boolean",
      "desc": "Toolbar buttons are rendered as a \"push-button\" type",
      "category": "toolbar|style",
      "desc_cn": "工具栏按钮呈现为 \"push-button\" 类型"
    },
    "toolbar-rounded": {
      "type": "Boolean",
      "desc": "Toolbar buttons are rendered \"rounded\"",
      "category": "toolbar|style",
      "desc_cn": "工具栏按钮呈现为“圆形”（\"rounded\"）"
    },
    "paragraph-tag": {
      "type": "String",
      "desc": "Paragraph tag to be used",
      "values": [
        "div",
        "p"
      ],
      "category": "behavior",
      "desc_cn": "要使用的段落标签"
    },
    "content-style": {
      "type": "Object",
      "tsType": "VueStyleObjectProp",
      "desc": "Object with CSS properties and values for styling the container of QEditor",
      "examples": [
        ":content-style=\"{ backgroundColor: '#C0C0C0' }\""
      ],
      "category": "style",
      "desc_cn": "具有 CSS 属性和值的对象，用于设置 QEditor 容器的样式"
    },
    "content-class": {
      "type": [
        "String",
        "Array",
        "Object"
      ],
      "tsType": "VueClassProp",
      "desc": "CSS classes for the input area",
      "examples": [
        "my-special-class",
        ":content-class=\"{ 'my-special-class': <condition> }\""
      ],
      "category": "style",
      "desc_cn": "输入区域的 CSS 类"
    },
    "placeholder": {
      "type": "String",
      "desc": "Text to display as placeholder",
      "examples": [
        "Type your story here ..."
      ],
      "category": "content",
      "desc_cn": "显示为占位符的文本"
    }
  },
  "events": {
    "fullscreen": {
      "desc": "Emitted when fullscreen state changes",
      "params": {
        "value": {
          "type": "Boolean",
          "desc": "Fullscreen state (showing/hidden)",
          "desc_cn": "全屏状态（显示/隐藏）"
        }
      },
      "desc_cn": "全屏状态切换时触发"
    },
    "update:model-value": {
      "desc": "Emitted when the component needs to change the model; Is also used by v-model",
      "params": {
        "value": {
          "type": "String",
          "desc": "The pure HTML of the content",
          "required": true,
          "desc_cn": "内容的纯 HTML"
        }
      },
      "desc_cn": "当组件需要改变模型数据（model）时触发，也会被 v-model 使用"
    },
    "dropdown-show": {
      "desc": "Emitted after a dropdown in the toolbar has triggered show()",
      "params": {
        "evt": {
          "type": "Event",
          "desc": "JS event object",
          "desc_cn": "JS 事件对象"
        }
      },
      "addedIn": "v2.11.8",
      "desc_cn": "当工具栏中的一个下拉菜单触发了 show() 之后触发"
    },
    "dropdown-before-show": {
      "desc": "Emitted when a dropdown in the toolbar triggers show() but before it finishes doing it",
      "params": {
        "evt": {
          "type": "Event",
          "desc": "JS event object",
          "desc_cn": "JS 事件对象"
        }
      },
      "addedIn": "v2.11.8",
      "desc_cn": "当工具栏中的一个下拉菜单触发 show() 之前触发"
    },
    "dropdown-hide": {
      "desc": "Emitted after a dropdown in the toolbar has triggered hide()",
      "params": {
        "evt": {
          "type": "Event",
          "desc": "JS event object",
          "desc_cn": "JS 事件对象"
        }
      },
      "addedIn": "v2.11.8",
      "desc_cn": "当工具栏中的一个下拉菜单触发了 hide() 之后触发"
    },
    "dropdown-before-hide": {
      "desc": "Emitted when a dropdown in the toolbar triggers hide() but before it finishes doing it",
      "params": {
        "evt": {
          "type": "Event",
          "desc": "JS event object",
          "desc_cn": "JS 事件对象"
        }
      },
      "addedIn": "v2.11.8",
      "desc_cn": "当工具栏中的一个下拉菜单触发 hide() 之前触发"
    },
    "link-show": {
      "desc": "Emitted when the toolbar for editing a link is shown",
      "addedIn": "v2.11.9",
      "desc_cn": "当显示编辑链接的工具栏时触发"
    },
    "link-hide": {
      "desc": "Emitted when the toolbar for editing a link is hidden",
      "addedIn": "v2.11.9",
      "desc_cn": "当隐藏编辑链接的工具栏时触发"
    }
  },
  "methods": {
    "toggleFullscreen": {
      "desc": "Toggle the view to be fullscreen or not fullscreen",
      "desc_cn": "将视图切换为全屏或非全屏"
    },
    "setFullscreen": {
      "desc": "Enter the fullscreen view",
      "desc_cn": "进入全屏视图"
    },
    "exitFullscreen": {
      "desc": "Leave the fullscreen view",
      "desc_cn": "退出全屏视图"
    },
    "runCmd": {
      "desc": "Run contentEditable command at caret position and range",
      "params": {
        "cmd": {
          "type": "String",
          "desc": "Must be a valid execCommand method according to the designMode API",
          "examples": [
            "copy",
            "cut",
            "paste"
          ],
          "required": true,
          "desc_cn": "根据 designMode API，必须是有效的 execCommand 方法"
        },
        "param": {
          "type": "String",
          "desc": "The argument to pass to the command",
          "examples": [
            "<small>Small Text</small>"
          ],
          "desc_cn": "传递给命令的参数"
        },
        "update": {
          "type": "Boolean",
          "desc": "Refresh the toolbar",
          "default": true,
          "required": false,
          "desc_cn": "刷新工具栏"
        }
      },
      "desc_cn": "在插入符号的位置和范围运行 contentEditable 命令"
    },
    "refreshToolbar": {
      "desc": "Hide the link editor if visible and force the instance to re-render",
      "desc_cn": "隐藏链接编辑器（如果可见），并强制实例重新渲染"
    },
    "focus": {
      "desc": "Focus on the contentEditable at saved cursor position",
      "desc_cn": "将焦点放在保存的光标位置的可编辑内容上"
    },
    "getContentEl": {
      "desc": "Retrieve the content of the Editor",
      "returns": {
        "type": "Element",
        "desc": "Provides the pure HTML within the editable area",
        "desc_cn": "提供可编辑区域内的纯 HTML"
      },
      "desc_cn": "检索编辑器的内容"
    }
  },
  "computedProps": {
    "caret": {
      "type": "Object",
      "tsType": "QEditorCaret",
      "desc": "The current caret state",
      "desc_cn": "当前的插入符号的数据"
    }
  }
}