{
  "type": "component",
  "meta": {
    "docsUrl": "https://v2.quasar.dev/vue-components/breadcrumbs"
  },
  "props": {
    "to": {
      "type": [
        "String",
        "Object"
      ],
      "desc": "Equivalent to Vue Router <router-link> 'to' property; Superseded by 'href' prop if used",
      "examples": [
        "/home/dashboard",
        ":to=\"{ name: 'my-route-name' }\""
      ],
      "category": "navigation",
      "desc_cn": "等价于 Vue Router 中的 <router-link> 组件的 'to' 属性。如果还设置了 'href' 属性则优先使用 'href'，'to' 会被取代"
    },
    "exact": {
      "type": "Boolean",
      "desc": "Equivalent to Vue Router <router-link> 'exact' property; Superseded by 'href' prop if used",
      "category": "navigation",
      "desc_cn": "等价于 Vue Router 中的 <router-link> 组件的 'exact' 属性。如果还设置了 'href' 属性则优先使用 'href'，'exact' 会被取代"
    },
    "replace": {
      "type": "Boolean",
      "desc": "Equivalent to Vue Router <router-link> 'replace' property; Superseded by 'href' prop if used",
      "category": "navigation",
      "desc_cn": "等价于 Vue Router 中的 <router-link> 组件的 'replace' 属性。如果还设置了 'href' 属性则优先使用 'href'，'replace' 会被取代"
    },
    "active-class": {
      "type": "String",
      "desc": "Equivalent to Vue Router <router-link> 'active-class' property; Superseded by 'href' prop if used",
      "examples": [
        "my-active-class"
      ],
      "category": "navigation",
      "desc_cn": "等价于 Vue Router 中的 <router-link> 组件的 'active-class' 属性。如果还设置了 'href' 属性则优先使用 'href'，'active-class' 会被取代"
    },
    "exact-active-class": {
      "type": "String",
      "desc": "Equivalent to Vue Router <router-link> 'exact-active-class' property; Superseded by 'href' prop if used",
      "examples": [
        "my-exact-active-class"
      ],
      "category": "navigation",
      "desc_cn": "等价于 Vue Router 中的 <router-link> 组件的 'exact-active-class' 属性。如果还设置了 'href' 属性则优先使用 'href'，'exact-active-class' 会被取代"
    },
    "href": {
      "type": "String",
      "desc": "Native <a> link href attribute; Has priority over the 'to'/'exact'/'replace'/'active-class'/'exact-active-class' props",
      "examples": [
        "https://quasar.dev"
      ],
      "category": "navigation",
      "addedIn": "v2.4",
      "desc_cn": "原生 <a> 标签的 href 属性。优先级高于 'to'/'exact'/'replace'/'active-class'/'exact-active-class' 属性"
    },
    "target": {
      "type": "String",
      "desc": "Native <a> link target attribute; Use it only along with 'href' prop; Has priority over the 'to'/'exact'/'replace'/'active-class'/'exact-active-class' props",
      "examples": [
        "_blank",
        "_self",
        "_parent",
        "_top"
      ],
      "category": "navigation",
      "addedIn": "v2.4",
      "desc_cn": "原生 <a> 标签的 target 属性。优先级高于 'to'/'exact'/'replace'/'active-class'/'exact-active-class' 属性"
    },
    "disable": {
      "type": "Boolean",
      "desc": "Put component in disabled mode",
      "category": "state",
      "desc_cn": "将组件置于禁用模式"
    },
    "label": {
      "type": "String",
      "desc": "The label text for the breadcrumb",
      "examples": [
        "Home",
        "Index"
      ],
      "category": "content",
      "desc_cn": "面包屑的标签文本"
    },
    "icon": {
      "type": "String",
      "desc": "Icon name following Quasar convention; Make sure you have the icon library installed unless you are using 'img:' prefix; If 'none' (String) is used as value then no icon is rendered (but screen real estate will still be used for it)",
      "examples": [
        "map",
        "ion-add",
        "img:https://cdn.quasar.dev/logo-v2/svg/logo.svg",
        "img:path/to/some_image.png"
      ],
      "category": "content",
      "desc_cn": "图标的名称，需确保已经安装了相关的图标库，除非使用了 'img:' 前缀来引用本地的图片，如果设置为 'none'，则不会渲染图标"
    },
    "tag": {
      "type": "String",
      "desc": "HTML tag to use",
      "examples": [
        "div",
        "span",
        "div",
        "span"
      ],
      "category": "content",
      "default": "span",
      "required": false,
      "desc_cn": "渲染为哪个 HTML 标签"
    }
  },
  "slots": {
    "default": {
      "desc": "This is where custom content goes, unless 'icon' and 'label' props are not enough",
      "desc_cn": "这就是自定义内容的所在位置，除非“icon”和“label”属性不够"
    }
  },
  "events": {
    "click": {
      "desc": "Emitted when the component is clicked",
      "params": {
        "evt": {
          "type": "Event",
          "desc": "JS event object; If you are using route navigation ('to'/'replace' props) and you want to cancel navigation then call evt.preventDefault() synchronously in your event handler",
          "desc_cn": "JS 事件对象。如果您还使用了路由导航相关的属性（'to'/'replace'）并且先要取消导航，那么可以在处理函数中调用 evt.preventDefault()"
        },
        "go": {
          "type": "Function",
          "desc": "Available ONLY if you are using route navigation ('to'/'replace' props); When you need to control the time at which the component should trigger the route navigation then call evt.preventDefault() synchronously and then call this function at your convenience; Useful if you have async work to be done before the actual route navigation or if you want to redirect somewhere else",
          "required": false,
          "addedIn": "v2.9",
          "params": {
            "opts": {
              "type": "Object",
              "desc": "Optional options",
              "required": false,
              "definition": {
                "to": {
                  "type": [
                    "String",
                    "Object"
                  ],
                  "desc": "Equivalent to Vue Router <router-link> 'to' property; Specify it explicitly otherwise it will be set with same value as component's 'to' prop",
                  "required": false,
                  "examples": [
                    "/home/dashboard",
                    "{ name: 'my-route-name' }"
                  ],
                  "desc_cn": "等价于 Vue Router 中的 <router-link> 组件的 'to' 属性。显式指定它，否则它将被设置为与组件的 'to' 属性相同的值"
                },
                "replace": {
                  "type": "Boolean",
                  "desc": "Equivalent to Vue Router <router-link> 'replace' property; Specify it explicitly otherwise it will be set with same value as component's 'replace' prop",
                  "required": false,
                  "desc_cn": "等价于 Vue Router 中的 <router-link> 组件的 'replace' 属性。显式指定它，否则它将被设置为与组件的 'replace' 属性相同的值"
                },
                "returnRouterError": {
                  "type": "Boolean",
                  "desc": "Return the router error, if any; Otherwise the returned Promise will always fulfill",
                  "required": false,
                  "desc_cn": "是否返回路由的错误，若设置为 false，则返回的 Promise 总是会完成"
                }
              },
              "desc_cn": "可选的配置对象"
            }
          },
          "returns": {
            "type": "Promise<any>",
            "desc": "Returns the router's navigation promise",
            "desc_cn": "返回路由导航的 Promise"
          },
          "desc_cn": "仅在使用了路由导航相关的属性（'to'/'replce'）时可用。当您想要控制组件触发导航的时机时，你可以在点击事件的处理函数中调用 evt.preventDefault() 来阻止导航跳转，然后在合适的时机再调用此函数进行路由跳转。当您需要等待一些异步任务完成后再执行跳转，或者您想要重定向到别的地方时特别有用"
        }
      },
      "desc_cn": "组件被点击时触发"
    }
  }
}