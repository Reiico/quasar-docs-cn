{
  "type": "component",
  "meta": {
    "docsUrl": "https://v2.quasar.dev/vue-components/input"
  },
  "props": {
    "name": {
      "type": "String",
      "desc": "Used to specify the name of the control; Useful if dealing with forms; If not specified, it takes the value of 'for' prop, if it exists",
      "examples": [
        "car_id",
        "car_id"
      ],
      "category": "behavior",
      "desc_cn": "用于指定控件的名称；处理表单时有用；如果未指定，则采用“for”属性的值（如果存在）"
    },
    "mask": {
      "type": "String",
      "desc": "Custom mask or one of the predefined mask names",
      "examples": [
        "###-##",
        "date",
        "datetime",
        "time",
        "fulltime",
        "phone",
        "card"
      ],
      "category": "behavior",
      "desc_cn": "自定义掩码或预定义的掩码名称之一"
    },
    "fill-mask": {
      "type": [
        "Boolean",
        "String"
      ],
      "desc": "Fills string with specified characters (or underscore if value is not string) to fill mask's length",
      "examples": [
        "true",
        "'0'",
        "'_'"
      ],
      "category": "behavior",
      "desc_cn": "用指定的字符（如果值不是字符串，则用下划线）填充字符串以填充掩码的长度"
    },
    "reverse-fill-mask": {
      "type": "Boolean",
      "desc": "Fills string from the right side of the mask",
      "category": "behavior",
      "desc_cn": "填充掩码右侧的字符串"
    },
    "unmasked-value": {
      "type": "Boolean",
      "desc": "Model will be unmasked (won't contain tokens/separation characters)",
      "category": "behavior",
      "desc_cn": "模型将被取消屏蔽（不包含标记/分隔字符）"
    },
    "model-value": {
      "desc": "Model of the component; Either use this property (along with a listener for 'update:modelValue' event) OR use v-model directive",
      "required": true,
      "syncable": true,
      "category": "model",
      "type": [
        "String",
        "Number",
        "null",
        "undefined"
      ],
      "examples": [
        "v-model=\"myText\""
      ]
    },
    "error": {
      "type": "Boolean",
      "desc": "Does field have validation errors?",
      "category": "behavior",
      "desc_cn": "字段是否有验证错误？"
    },
    "error-message": {
      "type": "String",
      "desc": "Validation error message (gets displayed only if 'error' is set to 'true')",
      "examples": [
        "Username must have at least 5 characters"
      ],
      "category": "content",
      "desc_cn": "验证错误消息（仅当“error”设置为“true”时显示）"
    },
    "no-error-icon": {
      "type": "Boolean",
      "desc": "Hide error icon when there is an error",
      "category": "content",
      "desc_cn": "出现错误时隐藏错误图标"
    },
    "rules": {
      "type": "Array",
      "tsType": "ValidationRule",
      "desc": "Array of Functions/Strings; If String, then it must be a name of one of the embedded validation rules",
      "examples": [
        ":rules=\"[ val => val.length <= 3 || 'Please use maximum 3 characters' ]\"",
        ":rules=\"[ 'fulltime' ]\"",
        ":rules=\"[ (val, rules) => rules.email(val) || 'Please enter a valid email address' ]\""
      ],
      "category": "behavior",
      "desc_cn": "函数/字符串数组；如果是字符串，则它必须是嵌入式验证规则的其中一个名称"
    },
    "reactive-rules": {
      "type": "Boolean",
      "desc": "By default a change in the rules does not trigger a new validation until the model changes; If set to true then a change in the rules will trigger a validation; Has a performance penalty, so use it only when you really need it",
      "category": "behavior",
      "desc_cn": "默认情况下，在模型更改之前，规则的更改不会触发新的验证；如果设置为true，则规则中的更改将触发验证；有一个性能损失，所以只有当你真的需要它时使用它"
    },
    "lazy-rules": {
      "type": [
        "Boolean",
        "String"
      ],
      "desc": "If set to boolean true then it checks validation status against the 'rules' only after field loses focus for first time; If set to 'ondemand' then it will trigger only when component's validate() method is manually called or when the wrapper QForm submits itself",
      "values": [
        "(Boolean) true",
        "(Boolean) false",
        "ondemand"
      ],
      "category": "behavior",
      "desc_cn": "如果设置为布尔真，则只有在字段第一次失去焦点后，它才会根据“rules”检查验证状态；如果设置为“ondemand”，则仅当手动调用组件的validate()方法或当包装器QForm提交自身时才会触发"
    },
    "label": {
      "type": "String",
      "desc": "A text label that will “float” up above the input field, once the field gets focus",
      "examples": [
        "Username"
      ],
      "category": "content",
      "desc_cn": "一种文本标签，一旦字段获得焦点，它将“浮动”到输入字段上方"
    },
    "stack-label": {
      "type": "Boolean",
      "desc": "Label will be always shown above the field regardless of field content (if any)",
      "category": "content",
      "desc_cn": "标签将始终显示在字段上方，而不考虑字段内容（如果有）"
    },
    "hint": {
      "type": "String",
      "desc": "Helper (hint) text which gets placed below your wrapped form component",
      "examples": [
        "Fill in between 3 and 12 characters"
      ],
      "category": "content",
      "desc_cn": "辅助（提示）文本，放在包装的窗体组件下面"
    },
    "hide-hint": {
      "type": "Boolean",
      "desc": "Hide the helper (hint) text when field doesn't have focus",
      "category": "content",
      "desc_cn": "当字段没有焦点时隐藏辅助（提示）文本"
    },
    "prefix": {
      "type": "String",
      "desc": "Prefix",
      "examples": [
        "$"
      ],
      "category": "content",
      "desc_cn": "前缀"
    },
    "suffix": {
      "type": "String",
      "desc": "Suffix",
      "examples": [
        "@gmail.com"
      ],
      "category": "content",
      "desc_cn": "后缀"
    },
    "label-color": {
      "type": "String",
      "desc": "Color name for the label from the Quasar Color Palette; Overrides the 'color' prop; The difference from 'color' prop is that the label will always have this color, even when field is not focused",
      "examples": [
        "primary",
        "teal-10"
      ],
      "category": "style",
      "desc_cn": "标签的来自Quasar调色板的颜色名称；覆盖“color”属性；与“color”属性的区别在于，标签将始终具有此颜色，即使字段未聚焦"
    },
    "color": {
      "type": "String",
      "desc": "Color name for component from the Quasar Color Palette",
      "examples": [
        "primary",
        "teal-10"
      ],
      "category": "style",
      "desc_cn": "组件的颜色，来自 Quasar 调色板的颜色名称"
    },
    "bg-color": {
      "type": "String",
      "desc": "Color name for component from the Quasar Color Palette",
      "examples": [
        "primary",
        "teal-10"
      ],
      "category": "style",
      "desc_cn": "组件的颜色，来自 Quasar 调色板的颜色名称"
    },
    "dark": {
      "type": "Boolean",
      "desc": "Notify the component that the background is a dark color",
      "category": "style",
      "desc_cn": "设置组件背景为深色"
    },
    "loading": {
      "type": "Boolean",
      "desc": "Signals the user a process is in progress by displaying a spinner; Spinner can be customized by using the 'loading' slot.",
      "category": "behavior|content",
      "desc_cn": "通过显示旋转器向用户发出进程正在进行的信号；可以使用“loading”槽自定义旋转器。"
    },
    "clearable": {
      "type": "Boolean",
      "desc": "Appends clearable icon when a value (not undefined or null) is set; When clicked, model becomes null",
      "category": "behavior|content",
      "desc_cn": "设置值（非undefined或null）时附加可清除图标；单击时，模型将变为空"
    },
    "clear-icon": {
      "type": "String",
      "desc": "Custom icon to use for the clear button when using along with 'clearable' prop",
      "examples": [
        "close"
      ],
      "category": "content",
      "desc_cn": "与“clearable”属性一起使用时用于清除按钮的自定义图标"
    },
    "filled": {
      "type": "Boolean",
      "desc": "Use 'filled' design for the field",
      "category": "style",
      "desc_cn": "对字段使用“填充”设计"
    },
    "outlined": {
      "type": "Boolean",
      "desc": "Use 'outlined' design for the field",
      "category": "style",
      "desc_cn": "对字段使用“轮廓线”设计"
    },
    "borderless": {
      "type": "Boolean",
      "desc": "Use 'borderless' design for the field",
      "category": "style",
      "desc_cn": "对字段采用“无边界”设计"
    },
    "standout": {
      "type": [
        "Boolean",
        "String"
      ],
      "desc": "Use 'standout' design for the field; Specifies classes to be applied when focused (overriding default ones)",
      "examples": [
        "standout",
        "standout=\"bg-primary text-white\""
      ],
      "category": "style",
      "desc_cn": "对字段采用“突出”设计；指定聚焦时要应用的类（覆盖默认类）"
    },
    "label-slot": {
      "type": "Boolean",
      "desc": "Enables label slot; You need to set it to force use of the 'label' slot if the 'label' prop is not set",
      "category": "content",
      "desc_cn": "启用标签槽；如果未设置“label”属性，则需要将其设置为强制使用“label”插槽"
    },
    "bottom-slots": {
      "type": "Boolean",
      "desc": "Enables bottom slots ('error', 'hint', 'counter')",
      "category": "content",
      "desc_cn": "启用底部插槽（'error'，'hint'，'counter'）"
    },
    "hide-bottom-space": {
      "type": "Boolean",
      "desc": "Do not reserve space for hint/error/counter anymore when these are not used; As a result, it also disables the animation for those; It also allows the hint/error area to stretch vertically based on its content",
      "category": "style",
      "desc_cn": "不使用hint/error/counter时，不要再为其保留空间；因此，它也会禁用这些对象的动画；它还允许hint/error区域根据其内容进行垂直拉伸"
    },
    "counter": {
      "type": "Boolean",
      "desc": "Show an automatic counter on bottom right",
      "category": "content",
      "desc_cn": "在右下角显示自动计数器"
    },
    "rounded": {
      "type": "Boolean",
      "desc": "Applies a small standard border-radius for a squared shape of the component",
      "category": "style",
      "desc_cn": "为组件应用较小标准的边框圆角（border-radius）"
    },
    "square": {
      "type": "Boolean",
      "desc": "Remove border-radius so borders are squared; Overrides 'rounded' prop",
      "category": "style",
      "desc_cn": "去除border-radius，使边界为正方形；覆盖“rounded”属性"
    },
    "dense": {
      "type": "Boolean",
      "desc": "Dense mode; occupies less space",
      "category": "style",
      "desc_cn": "紧凑模式，占用更少的空间"
    },
    "item-aligned": {
      "type": "Boolean",
      "desc": "Match inner content alignment to that of QItem",
      "category": "style",
      "desc_cn": "将内部内容对齐方式与QItem匹配"
    },
    "disable": {
      "type": "Boolean",
      "desc": "Put component in disabled mode",
      "category": "state",
      "desc_cn": "将组件置于禁用模式"
    },
    "readonly": {
      "type": "Boolean",
      "desc": "Put component in readonly mode",
      "category": "state",
      "desc_cn": "将组件置于只读模式"
    },
    "autofocus": {
      "type": "Boolean",
      "desc": "Focus field on initial component render",
      "category": "behavior",
      "desc_cn": "初始组件渲染时的聚焦字段"
    },
    "for": {
      "type": "String",
      "desc": "Used to specify the 'id' of the control and also the 'for' attribute of the label that wraps it; If no 'name' prop is specified, then it is used for this attribute as well",
      "examples": [
        "myFieldsId"
      ],
      "category": "behavior",
      "desc_cn": "用于指定控件的“id”以及包装它的标签的“for”属性；如果没有指定'name'属性，那么它也将用于此属性"
    },
    "shadow-text": {
      "type": "String",
      "desc": "Text to be displayed as shadow at the end of the text in the control; Does NOT applies to type=file",
      "examples": [
        "rest of the fill value"
      ],
      "category": "content",
      "desc_cn": "在控件中文本的末尾显示为阴影的文本；不适用于type=file"
    },
    "type": {
      "type": "String",
      "desc": "Input type",
      "default": "text",
      "values": [
        "text",
        "password",
        "textarea",
        "email",
        "search",
        "tel",
        "file",
        "number",
        "url",
        "time",
        "date"
      ],
      "category": "general",
      "required": false,
      "desc_cn": "输入类型"
    },
    "debounce": {
      "type": [
        "String",
        "Number"
      ],
      "desc": "Debounce amount (in milliseconds) when updating model",
      "category": "model",
      "desc_cn": "更新模型时的去抖动量（毫秒）"
    },
    "maxlength": {
      "type": [
        "String",
        "Number"
      ],
      "desc": "Specify a max length of model",
      "category": "model",
      "desc_cn": "指定模型的最大长度"
    },
    "autogrow": {
      "type": "Boolean",
      "desc": "Make field autogrow along with its content (uses a textarea)",
      "category": "content",
      "desc_cn": "使字段及其内容自动增长（使用文本区域）"
    },
    "input-class": {
      "type": [
        "String",
        "Array",
        "Object"
      ],
      "tsType": "VueClassProp",
      "desc": "Class definitions to be attributed to the underlying input tag",
      "examples": [
        "my-special-class",
        ":input-class=\"{ 'my-special-class': <condition> }\""
      ],
      "category": "style",
      "desc_cn": "作为基础输入标记属性的类的定义"
    },
    "input-style": {
      "type": [
        "String",
        "Array",
        "Object"
      ],
      "tsType": "VueStyleProp",
      "desc": "Style definitions to be attributed to the underlying input tag",
      "examples": [
        "background-color: #ff0000",
        ":input-style=\"{ backgroundColor: '#ff0000' }\""
      ],
      "category": "style",
      "desc_cn": "作为基础输入标记属性的样式定义"
    }
  },
  "slots": {
    "default": {
      "desc": "Field main content",
      "desc_cn": "字段主要内容"
    },
    "prepend": {
      "desc": "Prepend inner field; Suggestions: QIcon, QBtn",
      "desc_cn": "前置内部字段；建议：QIcon、QBtn"
    },
    "append": {
      "desc": "Append to inner field; Suggestions: QIcon, QBtn",
      "desc_cn": "后置内部字段；建议：QIcon、QBtn"
    },
    "before": {
      "desc": "Prepend outer field; Suggestions: QIcon, QBtn",
      "desc_cn": "前置外部字段；建议：QIcon、QBtn"
    },
    "after": {
      "desc": "Append outer field; Suggestions: QIcon, QBtn",
      "desc_cn": "后置外部字段；建议：QIcon、QBtn"
    },
    "label": {
      "desc": "Slot for label; Used only if 'label-slot' prop is set or the 'label' prop is set; When it is used the text in the 'label' prop is ignored",
      "desc_cn": "标签槽；仅当设置了“label-slot”属性或设置了“label”属性时使用；使用时，“label”属性中的文本将被忽略"
    },
    "error": {
      "desc": "Slot for errors; Enabled only if 'bottom-slots' prop is used; Suggestion: <div>",
      "desc_cn": "错误插槽；仅在使用“bottom-slots”属性时启用；建议：<div>"
    },
    "hint": {
      "desc": "Slot for hint text; Enabled only if 'bottom-slots' prop is used; Suggestion: <div>",
      "desc_cn": "提示文本槽；仅在使用“bottom-slots”属性时启用；建议：<div>"
    },
    "counter": {
      "desc": "Slot for counter text; Enabled only if 'bottom-slots' prop is used; Suggestion: <div>",
      "desc_cn": "计数器文本槽；仅在使用“bottom-slots”属性时启用；建议：<div>"
    },
    "loading": {
      "desc": "Override default spinner when component is in loading mode; Use in conjunction with 'loading' prop",
      "desc_cn": "当组件处于加载模式时覆盖默认旋转器；与“loading”属性一起使用"
    }
  },
  "events": {
    "clear": {
      "desc": "When using the 'clearable' property, this event is emitted when the clear icon is clicked",
      "params": {
        "value": {
          "type": "Any",
          "desc": "The previous value before clearing it",
          "desc_cn": "清除之前的值"
        }
      },
      "desc_cn": "使用“clearable”属性时，单击清除图标时会发出此事件"
    },
    "update:model-value": {
      "desc": "Emitted when the component needs to change the model; Is also used by v-model",
      "desc_cn":"当组件需要改变模型数据（model）时触发，也会被 v-model 使用",
      "params": {
        "value": {
          "type": [
            "String",
            "Number",
            "null"
          ],
          "desc": "New model value",
          "required": true
        }
      }
    },
    "focus": {
      "desc": "Emitted when component gets focused",
      "params": {
        "evt": {
          "type": "Event",
          "desc": "JS event object",
          "desc_cn": "JS事件对象"
        }
      },
      "desc_cn": "组件聚焦时发出"
    },
    "blur": {
      "desc": "Emitted when component loses focus",
      "params": {
        "evt": {
          "type": "Event",
          "desc": "JS event object",
          "desc_cn": "JS事件对象"
        }
      },
      "desc_cn": "当组件失去焦点时发出"
    }
  },
  "methods": {
    "resetValidation": {
      "desc": "Reset validation status",
      "desc_cn": "重置验证状态"
    },
    "validate": {
      "desc": "Trigger a validation",
      "params": {
        "value": {
          "type": "Any",
          "desc": "Optional value to validate against",
          "desc_cn": "要验证的可选值"
        }
      },
      "returns": {
        "type": [
          "Boolean",
          "Promise<boolean>"
        ],
        "desc": "True/false if no async rules, otherwise a Promise with the outcome (true -> validation was a success, false -> invalid models detected)",
        "examples": [
          "true",
          "validate().then(outcome => { ... })"
        ],
        "desc_cn": "如果没有异步规则，则为True/false，否则为带有结果的Promise（True->验证成功，false->检测到无效模型）"
      },
      "desc_cn": "触发验证"
    },
    "focus": {
      "desc": "Focus underlying input tag",
      "desc_cn": "聚焦基础输入标记"
    },
    "blur": {
      "desc": "Lose focus on underlying input tag",
      "desc_cn": "失去对基础输入标记的焦点"
    },
    "select": {
      "desc": "Select input text",
      "desc_cn": "选择输入的文本"
    },
    "getNativeElement": {
      "desc": "DEPRECATED; Access 'nativeEl' directly instead; Get the native input/textarea DOM Element",
      "returns": {
        "type": "Element",
        "tsType": "QInputNativeElement",
        "desc": "The underlying native input/textarea DOM Element",
        "desc_cn": "底层input/textarea区域DOM元素"
      }
    }
  },
  "computedProps": {
    "hasError": {
      "type": "Boolean",
      "desc": "Whether the component is in error state"
    },
    "nativeEl": {
      "type": "Element",
      "tsType": "QInputNativeElement",
      "desc": "The native input/textarea DOM Element",
      "addedIn": "v2.10.1"
    }
  }
}