{
  "type": "component",
  "meta": {
    "docsUrl": "https://v2.quasar.dev/vue-components/toggle"
  },
  "props": {
    "name": {
      "type": "String",
      "desc": "Used to specify the name of the control; Useful if dealing with forms submitted directly to a URL",
      "examples": [
        "car_id"
      ],
      "category": "behavior",
      "desc_cn": "用于指定控件的名称；如果处理直接提交到URL的表单，则非常有用"
    },
    "size": {
      "type": "String",
      "desc": "Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)",
      "examples": [
        "16px",
        "2rem",
        "xs",
        "md"
      ],
      "category": "style",
      "desc_cn": "带有 CSS 单位的尺寸大小，包括单位的名称或标准大小名称（xs | sm | md | lg | xl）"
    },
    "model-value": {
      "desc": "Model of the component; Either use this property (along with a listener for 'update:model-value' event) OR use v-model directive",
      "required": true,
      "syncable": true,
      "category": "model",
      "type": [
        "Any",
        "Array"
      ],
      "examples": [
        "false",
        "['car', 'building']"
      ],
      "desc_cn": "组件的 model 数据，可通过 'update:model-value' 监听事件或 'v-model' 指令使用此属性"
    },
    "val": {
      "type": "Any",
      "desc": "Works when model ('value') is Array. It tells the component which value should add/remove when ticked/unticked",
      "examples": [
        "car"
      ],
      "category": "model",
      "desc_cn": "当model（'value'）是数组时工作。它告诉组件在勾选/取消勾选时应该添加/删除哪个值"
    },
    "true-value": {
      "type": "Any",
      "desc": "What model value should be considered as checked/ticked/on?",
      "default": true,
      "examples": [
        "Agreed"
      ],
      "category": "model",
      "required": false,
      "desc_cn": "什么模型值应被视为选中/勾选/启用？"
    },
    "false-value": {
      "type": "Any",
      "desc": "What model value should be considered as unchecked/unticked/off?",
      "default": false,
      "examples": [
        "Disagree"
      ],
      "category": "model",
      "required": false,
      "desc_cn": "什么模型值应被视为未选中/未选中/关闭？"
    },
    "indeterminate-value": {
      "type": "Any",
      "desc": "What model value should be considered as 'indeterminate'?",
      "default": null,
      "examples": [
        0,
        "not_answered"
      ],
      "category": "behavior",
      "required": false,
      "desc_cn": "什么模型值应被视为“不确定”？"
    },
    "toggle-order": {
      "type": "String",
      "desc": "Determines toggle order of the two states ('t' stands for state of true, 'f' for state of false); If 'toggle-indeterminate' is true, then the order is: indet -> first state -> second state -> indet (and repeat), otherwise: indet -> first state -> second state -> first state -> second state -> ...",
      "default": "tf",
      "values": [
        "tf",
        "ft"
      ],
      "category": "behavior",
      "required": false,
      "desc_cn": "确定两种状态的切换顺序（“t”表示真状态，“f”表示假状态）；如果“toggle indeterminate”为true，则顺序为：indet->first state->second state->indet（并重复），否则：indet->first state->second state->first state->second state->..."
    },
    "toggle-indeterminate": {
      "type": "Boolean",
      "desc": "When user clicks/taps on the component, should we toggle through the indeterminate state too?",
      "category": "behavior",
      "desc_cn": "当用户点击组件时，我们是否也应该切换到不确定状态？"
    },
    "label": {
      "type": "String",
      "desc": "Label to display along the component (or use the default slot instead of this prop)",
      "examples": [
        "I agree with the Terms and Conditions"
      ],
      "category": "label",
      "desc_cn": "沿组件显示的标签（或使用默认插槽而不是此属性）"
    },
    "left-label": {
      "type": "Boolean",
      "desc": "Label (if any specified) should be displayed on the left side of the component",
      "category": "label",
      "desc_cn": "标签（如有指定）应显示在组件的左侧"
    },
    "checked-icon": {
      "type": "String",
      "examples": [
        "visibility"
      ],
      "category": "icons",
      "desc": "The icon to be used when the toggle is on",
      "desc_cn": "打开切换时要使用的图标"
    },
    "unchecked-icon": {
      "type": "String",
      "examples": [
        "visibility_off"
      ],
      "category": "icons",
      "desc": "The icon to be used when the toggle is off",
      "desc_cn": "关闭切换时使用的图标"
    },
    "indeterminate-icon": {
      "type": "String",
      "examples": [
        "help"
      ],
      "category": "icons",
      "desc": "The icon to be used when the model is indeterminate",
      "desc_cn": "模型不确定时要使用的图标"
    },
    "color": {
      "type": "String",
      "desc": "Color name for component from the Quasar Color Palette",
      "examples": [
        "primary",
        "teal-10"
      ],
      "category": "style",
      "desc_cn": "组件的颜色，来自 Quasar 调色板的颜色名称"
    },
    "keep-color": {
      "type": "Boolean",
      "desc": "Should the color (if specified any) be kept when the component is unticked/ off?",
      "category": "behavior",
      "desc_cn": "当组件松开/关闭时，是否应保留颜色（如有规定）？"
    },
    "dark": {
      "type": "Boolean",
      "desc": "Notify the component that the background is a dark color",
      "category": "style",
      "desc_cn": "设置组件背景为深色"
    },
    "dense": {
      "type": "Boolean",
      "desc": "Dense mode; occupies less space",
      "category": "style",
      "desc_cn": "紧凑模式，占用更少的空间"
    },
    "disable": {
      "type": "Boolean",
      "desc": "Put component in disabled mode",
      "category": "state",
      "desc_cn": "将组件置于禁用模式"
    },
    "tabindex": {
      "type": [
        "Number",
        "String"
      ],
      "desc": "Tabindex HTML attribute value",
      "examples": [
        "0",
        "100"
      ],
      "category": "general",
      "desc_cn": "Tabindex HTML 属性值"
    },
    "icon": {
      "type": "String",
      "desc": "Icon name following Quasar convention; Make sure you have the icon library installed unless you are using 'img:' prefix; If 'none' (String) is used as value then no icon is rendered (but screen real estate will still be used for it)",
      "examples": [
        "map",
        "ion-add",
        "img:https://cdn.quasar.dev/logo-v2/svg/logo.svg",
        "img:path/to/some_image.png"
      ],
      "category": "content",
      "desc_cn": "图标的名称，需确保已经安装了相关的图标库，除非使用了 'img:' 前缀来引用本地的图片，如果设置为 'none'，则不会渲染图标"
    },
    "icon-color": {
      "type": "String",
      "desc": "Override default icon color (for truthy state only); Color name for component from the Quasar Color Palette",
      "examples": [
        "primary",
        "teal-10"
      ],
      "category": "style",
      "desc_cn": "覆盖默认图标颜色（仅适用于truthy状态）；组件的颜色，来自 Quasar 调色板的颜色名称"
    }
  },
  "slots": {
    "default": {
      "desc": "Default slot can be used as label, unless 'label' prop is specified; Suggestion: string",
      "desc_cn": "可以用作标签的默认插槽，除非指定了“label”属性；建议：字符串"
    }
  },
  "events": {
    "update:model-value": {
      "desc": "Emitted when the component needs to change the model; Is also used by v-model",
      "params": {
        "value": {
          "type": "Any",
          "desc": "New model value",
          "required": true
        },
        "evt": {
          "type": "Event",
          "desc": "JS event object",
          "required": true
        }
      },
      "desc_cn": "当组件需要改变模型数据（model）时触发，也会被 v-model 使用"
    }
  },
  "methods": {
    "toggle": {
      "desc": "Toggle the state (of the model)",
      "desc_cn": "切换（模型的）状态"
    }
  }
}