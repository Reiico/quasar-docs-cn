{
  "type": "component",
  "meta": {
    "docsUrl": "https://v2.quasar.dev/vue-components/button"
  },
  "props": {
    "size": {
      "type": "String",
      "desc": "Size in CSS units, including unit name or standard size name (xs|sm|md|lg|xl)",
      "examples": [
        "16px",
        "2rem",
        "xs",
        "md"
      ],
      "category": "style",
      "desc_cn": "带有 CSS 单位的尺寸大小，包括单位的名称或标准大小名称（xs | sm | md | lg | xl）"
    },
    "type": {
      "type": "String",
      "desc": "1) Define the button native type attribute (submit, reset, button) or 2) render component with <a> tag so you can access events even if disable or 3) Use 'href' prop and specify 'type' as a media tag",
      "default": "button",
      "examples": [
        "a",
        "submit",
        "button",
        "reset",
        "image/png",
        "href=\"https://quasar.dev\" target=\"_blank\""
      ],
      "category": "general",
      "required": false
    },
    "to": {
      "type": [
        "String",
        "Object"
      ],
      "desc": "Equivalent to Vue Router <router-link> 'to' property; Superseded by 'href' prop if used",
      "examples": [
        "/home/dashboard",
        ":to=\"{ name: 'my-route-name' }\""
      ],
      "category": "navigation",
      "desc_cn": "等价于 Vue Router 中的 <router-link> 组件的 'to' 属性。如果还设置了 'href' 属性则优先使用 'href'，'to' 会被取代"
    },
    "replace": {
      "type": "Boolean",
      "desc": "Equivalent to Vue Router <router-link> 'replace' property; Superseded by 'href' prop if used",
      "category": "navigation",
      "desc_cn": "等价于 Vue Router 中的 <router-link> 组件的 'replace' 属性。如果还设置了 'href' 属性则优先使用 'href'，'replace' 会被取代"
    },
    "href": {
      "type": "String",
      "desc": "Native <a> link href attribute; Has priority over the 'to' and 'replace' props",
      "examples": [
        "https://quasar.dev",
        "href=\"https://quasar.dev\" target=\"_blank\""
      ],
      "category": "navigation",
      "addedIn": "v2.4",
      "desc_cn": "原生 <a> 标签的 href 属性。优先级高于 'to'/'exact'/'replace'/'active-class'/'exact-active-class' 属性"
    },
    "target": {
      "type": "String",
      "desc": "Native <a> link target attribute; Use it only with 'to' or 'href' props",
      "examples": [
        "_blank",
        "_self",
        "_parent",
        "_top"
      ],
      "category": "navigation",
      "addedIn": "v2.4",
      "desc_cn": "原生 <a> 标签的 target 属性。优先级高于 'to'/'exact'/'replace'/'active-class'/'exact-active-class' 属性"
    },
    "label": {
      "type": [
        "String",
        "Number"
      ],
      "desc": "The text that will be shown on the button",
      "examples": [
        "Button Label"
      ],
      "category": "content",
      "desc_cn": "将显示在按钮上的文本"
    },
    "icon": {
      "type": "String",
      "desc": "Icon name following Quasar convention; Make sure you have the icon library installed unless you are using 'img:' prefix; If 'none' (String) is used as value then no icon is rendered (but screen real estate will still be used for it)",
      "examples": [
        "map",
        "ion-add",
        "img:https://cdn.quasar.dev/logo-v2/svg/logo.svg",
        "img:path/to/some_image.png"
      ],
      "category": "content",
      "desc_cn": "图标的名称，需确保已经安装了相关的图标库，除非使用了 'img:' 前缀来引用本地的图片，如果设置为 'none'，则不会渲染图标"
    },
    "icon-right": {
      "type": "String",
      "desc": "Icon name following Quasar convention; Make sure you have the icon library installed unless you are using 'img:' prefix; If 'none' (String) is used as value then no icon is rendered (but screen real estate will still be used for it)",
      "examples": [
        "map",
        "ion-add",
        "img:https://cdn.quasar.dev/logo-v2/svg/logo.svg",
        "img:path/to/some_image.png"
      ],
      "category": "content",
      "desc_cn": "图标的名称，需确保已经安装了相关的图标库，除非使用了 'img:' 前缀来引用本地的图片，如果设置为 'none'，则不会渲染图标"
    },
    "outline": {
      "type": "Boolean",
      "desc": "Use 'outline' design",
      "category": "style",
      "desc_cn": "使用“轮廓线”设计"
    },
    "flat": {
      "type": "Boolean",
      "desc": "Use 'flat' design",
      "category": "style",
      "desc_cn": "使用“扁平”设计"
    },
    "unelevated": {
      "type": "Boolean",
      "desc": "Remove shadow",
      "category": "style",
      "desc_cn": "移除阴影"
    },
    "rounded": {
      "type": "Boolean",
      "desc": "Applies a more prominent border-radius for a squared shape button",
      "category": "style",
      "desc_cn": "为方形按钮应用更突出的圆角（border-radius）"
    },
    "push": {
      "type": "Boolean",
      "desc": "Use 'push' design",
      "category": "style",
      "desc_cn": "使用“推”设计"
    },
    "square": {
      "type": "Boolean",
      "desc": "Removes border-radius so borders are squared",
      "category": "style",
      "addedIn": "v2.7.6",
      "desc_cn": "删除边框圆角（border-radius），所以边框是方形的"
    },
    "glossy": {
      "type": "Boolean",
      "desc": "Applies a glossy effect",
      "category": "style",
      "desc_cn": "应用光泽效果"
    },
    "fab": {
      "type": "Boolean",
      "desc": "Makes button size and shape to fit a Floating Action Button",
      "category": "style",
      "desc_cn": "使按钮大小和形状适合浮动按钮"
    },
    "fab-mini": {
      "type": "Boolean",
      "desc": "Makes button size and shape to fit a small Floating Action Button",
      "category": "style",
      "desc_cn": "使按钮的大小和形状适合一个小的浮动按钮"
    },
    "padding": {
      "type": "String",
      "desc": "Apply custom padding (vertical [horizontal]); Size in CSS units, including unit name or standard size name (none|xs|sm|md|lg|xl); Also removes the min width and height when set",
      "examples": [
        "16px",
        "10px 5px",
        "2rem",
        "xs",
        "md lg",
        "2px 2px 5px 7px"
      ],
      "category": "style",
      "desc_cn": "应用自定义内边距（垂直[水平]）。以 CSS 单位表示的尺寸，包括单位名称或标准尺寸名称（none | xs | sm | md | lg | xl）。设置时也会删除最小宽度和高度"
    },
    "color": {
      "type": "String",
      "desc": "Color name for component from the Quasar Color Palette",
      "examples": [
        "primary",
        "teal-10"
      ],
      "category": "style",
      "desc_cn": "组件的颜色，来自 Quasar 调色板的颜色名称"
    },
    "text-color": {
      "type": "String",
      "desc": "Overrides text color (if needed); Color name from the Quasar Color Palette",
      "examples": [
        "primary",
        "teal-10"
      ],
      "category": "style",
      "desc_cn": "覆盖文本颜色（如果需要）；来自 Quasar 调色板的颜色名称"
    },
    "no-caps": {
      "type": "Boolean",
      "desc": "Avoid turning label text into caps (which happens by default)",
      "category": "content",
      "desc_cn": "避免将标签文本转换为大写（默认情况下会发生这种情况）"
    },
    "no-wrap": {
      "type": "Boolean",
      "desc": "Avoid label text wrapping",
      "category": "content",
      "desc_cn": "避免标签文本换行"
    },
    "dense": {
      "type": "Boolean",
      "desc": "Dense mode; occupies less space",
      "category": "style",
      "desc_cn": "紧凑模式，占用更少的空间"
    },
    "ripple": {
      "type": [
        "Boolean",
        "Object"
      ],
      "desc": "Configure material ripple (disable it by setting it to 'false' or supply a config object)",
      "default": true,
      "examples": [
        false,
        "{ early: true, center: true, color: 'teal', keyCodes: [] }"
      ],
      "category": "style",
      "required": false,
      "desc_cn": "配置 material 水波动画（设置为 “false” 将其禁用或提供一个配置对象）"
    },
    "tabindex": {
      "type": [
        "Number",
        "String"
      ],
      "desc": "Tabindex HTML attribute value",
      "examples": [
        "0",
        "100"
      ],
      "category": "general",
      "desc_cn": "Tabindex HTML 属性值"
    },
    "align": {
      "type": "String",
      "desc": "Label or content alignment",
      "default": "center",
      "values": [
        "left",
        "right",
        "center",
        "around",
        "between",
        "evenly"
      ],
      "category": "content",
      "required": false,
      "desc_cn": "文本或内容的对齐方式"
    },
    "stack": {
      "type": "Boolean",
      "desc": "Stack icon and label vertically instead of on same line (like it is by default)",
      "category": "content",
      "desc_cn": "垂直堆叠图标和标签，而不是在同一行上（就像默认情况下一样）"
    },
    "stretch": {
      "type": "Boolean",
      "desc": "When used on flexbox parent, button will stretch to parent's height",
      "category": "content",
      "desc_cn": "当用于 flexbox 父元素时，按钮将拉伸到父元素的高度"
    },
    "loading": {
      "type": "Boolean",
      "desc": "Put button into loading state (displays a QSpinner -- can be overridden by using a 'loading' slot)",
      "category": "behavior|state",
      "desc_cn": "将按钮置于加载状态（显示一个 QSpinner ——可以通过使用 'loading' 插槽来重写）"
    },
    "disable": {
      "type": "Boolean",
      "desc": "Put component in disabled mode",
      "category": "state",
      "desc_cn": "将组件置于禁用模式"
    },
    "round": {
      "type": "Boolean",
      "desc": "Makes a circle shaped button",
      "category": "style",
      "desc_cn": "设置为圆形按钮"
    },
    "percentage": {
      "type": "Number",
      "desc": "Percentage (0.0 < x < 100.0); To be used along 'loading' prop; Display a progress bar on the background",
      "category": "behavior",
      "desc_cn": "百分比（0.0<x<100.0）；和 'loading' 属性一起使用。在背景上显示进度条"
    },
    "dark-percentage": {
      "type": "Boolean",
      "desc": "Progress bar on the background should have dark color; To be used along with 'percentage' and 'loading' props",
      "category": "behavior",
      "desc_cn": "背景上的进度条设置为深色。与 'percentage' 和 'loading' 属性一起使用"
    }
  },
  "slots": {
    "default": {
      "desc": "Use for custom content, instead of relying on 'icon' and 'label' props",
      "desc_cn": "用于自定义内容，而不是依赖 'icon' 和 'label' 属性"
    },
    "loading": {
      "desc": "Override the default QSpinner when in 'loading' state",
      "desc_cn": "当处于 'loading' 状态时重写默认的 QSpinner"
    }
  },
  "events": {
    "click": {
      "desc": "Emitted when the component is clicked",
      "params": {
        "evt": {
          "type": "Event",
          "desc": "JS event object; If you are using route navigation ('to'/'replace' props) and you want to cancel navigation then call evt.preventDefault() synchronously in your event handler",
          "desc_cn": "JS 事件对象。如果您还使用了路由导航相关的属性（'to'/'replace'）并且先要取消导航，那么可以在处理函数中调用 evt.preventDefault()"
        },
        "go": {
          "type": "Function",
          "desc": "Available ONLY if you are using route navigation ('to'/'replace' props); When you need to control the time at which the component should trigger the route navigation then call evt.preventDefault() synchronously and then call this function at your convenience; Useful if you have async work to be done before the actual route navigation or if you want to redirect somewhere else",
          "required": false,
          "addedIn": "v2.9",
          "params": {
            "opts": {
              "type": "Object",
              "desc": "Optional options",
              "required": false,
              "definition": {
                "to": {
                  "type": [
                    "String",
                    "Object"
                  ],
                  "desc": "Equivalent to Vue Router <router-link> 'to' property; Specify it explicitly otherwise it will be set with same value as component's 'to' prop",
                  "required": false,
                  "examples": [
                    "/home/dashboard",
                    "{ name: 'my-route-name' }"
                  ],
                  "desc_cn": "等价于 Vue Router 中的 <router-link> 组件的 'to' 属性。显式指定它，否则它将被设置为与组件的 'to' 属性相同的值"
                },
                "replace": {
                  "type": [
                    "String",
                    "Object"
                  ],
                  "desc": "Equivalent to Vue Router <router-link> 'replace' property; Specify it explicitly otherwise it will be set with same value as component's 'replace' prop",
                  "required": false,
                  "desc_cn": "等价于 Vue Router 中的 <router-link> 组件的 'replace' 属性。显式指定它，否则它将被设置为与组件的 'replace' 属性相同的值"
                },
                "returnRouterError": {
                  "type": "Boolean",
                  "desc": "Return the router error, if any; Otherwise the returned Promise will always fulfill",
                  "required": false,
                  "desc_cn": "是否返回路由的错误，若设置为 false，则返回的 Promise 总是会完成"
                }
              },
              "desc_cn": "可选的配置对象"
            }
          },
          "returns": {
            "type": "Promise<any>",
            "desc": "Returns the router's navigation promise",
            "desc_cn": "返回路由导航的 Promise"
          },
          "desc_cn": "仅在使用了路由导航相关的属性（'to'/'replce'）时可用。当您想要控制组件触发导航的时机时，你可以在点击事件的处理函数中调用 evt.preventDefault() 来阻止导航跳转，然后在合适的时机再调用此函数进行路由跳转。当您需要等待一些异步任务完成后再执行跳转，或者您想要重定向到别的地方时特别有用"
        }
      }
    }
  },
  "methods": {
    "click": {
      "desc": "Emulate click on QBtn",
      "params": {
        "evt": {
          "type": "Event",
          "desc": "JS event object",
          "desc_cn": "JS 事件对象"
        }
      },
      "desc_cn": "模拟点击 QBtn"
    }
  }
}