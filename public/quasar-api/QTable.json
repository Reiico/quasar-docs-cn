{
  "type": "component",
  "meta": {
    "docsUrl": "https://v2.quasar.dev/vue-components/table"
  },
  "props": {
    "fullscreen": {
      "type": "Boolean",
      "sync": true,
      "desc": "Fullscreen mode",
      "examples": [
        "v-model:fullscreen=\"isFullscreen\""
      ],
      "category": "behavior",
      "syncable": true,
      "desc_cn": "全屏模式"
    },
    "no-route-fullscreen-exit": {
      "type": "Boolean",
      "desc": "Changing route app won't exit fullscreen",
      "category": "behavior",
      "desc_cn": "更改路由应用不会全屏退出"
    },
    "rows": {
      "type": "Array",
      "desc": "Rows of data to display",
      "examples": [
        ":rows=\"myData\""
      ],
      "category": "general"
    },
    "row-key": {
      "type": [
        "String",
        "Function"
      ],
      "desc": "Property of each row that defines the unique key of each row (the result must be a primitive, not Object, Array, etc); The value of property must be string or a function taking a row and returning the desired (nested) key in the row; If supplying a function then for best performance, reference it from your scope and do not define it inline",
      "default": "id",
      "params": {
        "row": {
          "type": "Object",
          "desc": "The current row being processed",
          "examples": [
            "{ name: 'Lorem Ipsum', price: 19 }"
          ]
        }
      },
      "returns": {
        "type": "Any",
        "desc": "Current row's key",
        "examples": [
          "'34f39dda-6206-4071-a9df-4393aabe49ac'",
          "34"
        ]
      },
      "examples": [
        "row-key=\"name\"",
        ":row-key=\"row => row.name\""
      ],
      "category": "general",
      "required": false,
      "desc_cn": "每行的属性，定义每行的唯一键（结果必须是原始数据，而不是对象、数组等）；属性值必须是string或一个函数，该函数取一行并在该行中返回所需的（嵌套的）键；如果提供一个函数，那么为了获得最佳性能，请从您的范围引用它，不要内联定义它"
    },
    "virtual-scroll": {
      "type": "Boolean",
      "desc": "Display data using QVirtualScroll (for non-grid mode only)",
      "category": "virtual-scroll",
      "desc_cn": "使用QVirtualScroll显示数据（仅适用于非网格模式）"
    },
    "virtual-scroll-target": {
      "type": [
        "Element",
        "String"
      ],
      "desc": "CSS selector or DOM element to be used as a custom scroll container instead of the auto detected one",
      "examples": [
        ":scroll-target=\"$refs.scrollTarget\"",
        "scroll-target=\".scroll-target-class\"",
        "scroll-target=\"#scroll-target-id\"",
        "scroll-target=\"body\""
      ],
      "category": "behavior"
    },
    "virtual-scroll-slice-size": {
      "type": [
        "Number",
        "String"
      ],
      "desc": "Minimum number of rows to render in the virtual list",
      "default": 30,
      "category": "virtual-scroll",
      "required": false,
      "desc_cn": "要在虚拟列表中渲染的最小行数"
    },
    "virtual-scroll-slice-ratio-before": {
      "type": [
        "Number",
        "String"
      ],
      "desc": "Ratio of number of rows in visible zone to render before it",
      "default": 1,
      "category": "virtual-scroll",
      "required": false,
      "desc_cn": "可见区域中的行数与其之前渲染的行数之比"
    },
    "virtual-scroll-slice-ratio-after": {
      "type": [
        "Number",
        "String"
      ],
      "desc": "Ratio of number of rows in visible zone to render after it",
      "default": 1,
      "category": "virtual-scroll",
      "required": false,
      "desc_cn": "可见区域中的行数与之后渲染的行数之比"
    },
    "virtual-scroll-item-size": {
      "type": [
        "Number",
        "String"
      ],
      "desc": "Default size in pixels of a row; This value is used for rendering the initial table; Try to use a value close to the minimum size of a row",
      "default": "48 (24 if dense)",
      "category": "virtual-scroll",
      "required": false,
      "desc_cn": "行的默认像素大小；此值用于渲染初始表格；尝试使用接近行的最小大小的值"
    },
    "virtual-scroll-sticky-size-start": {
      "type": [
        "Number",
        "String"
      ],
      "desc": "Size in pixels of the sticky header (if using one); A correct value will improve scroll precision; Will be also used for non-virtual-scroll tables for fixing top alignment when using scrollTo method",
      "default": "0",
      "category": "virtual-scroll|behavior",
      "required": false
    },
    "virtual-scroll-sticky-size-end": {
      "type": [
        "Number",
        "String"
      ],
      "desc": "Size in pixels of the sticky footer part (if using one); A correct value will improve scroll precision",
      "default": "0",
      "category": "virtual-scroll",
      "required": false,
      "desc_cn": "粘性底部的像素大小（如果使用）；正确的值将提高滚动精度"
    },
    "table-colspan": {
      "type": [
        "Number",
        "String"
      ],
      "desc": "The number of columns in the table (you need this if you use table-layout: fixed)",
      "category": "virtual-scroll|content",
      "desc_cn": "表中的列数（如果使用table-layout: fixed，则需要此值）"
    },
    "color": {
      "type": "String",
      "desc": "Color name for component from the Quasar Color Palette",
      "examples": [
        "primary",
        "teal-10"
      ],
      "category": "style",
      "default": "grey-8",
      "required": false,
      "desc_cn": "组件的颜色，来自 Quasar 调色板的颜色名称"
    },
    "icon-first-page": {
      "type": "String",
      "desc": "Icon name following Quasar convention for stepping to first page; Make sure you have the icon library installed unless you are using 'img:' prefix",
      "examples": [
        "map",
        "ion-add",
        "img:https://cdn.quasar.dev/logo-v2/svg/logo.svg",
        "img:path/to/some_image.png"
      ],
      "category": "content",
      "desc_cn": "图标名称遵循Quasar的惯例，以进入第一页；请确保已安装图标库，除非使用“img:”前缀"
    },
    "icon-prev-page": {
      "type": "String",
      "desc": "Icon name following Quasar convention for stepping to previous page; Make sure you have the icon library installed unless you are using 'img:' prefix",
      "examples": [
        "map",
        "ion-add",
        "img:https://cdn.quasar.dev/logo-v2/svg/logo.svg",
        "img:path/to/some_image.png"
      ],
      "category": "content",
      "desc_cn": "图标名称遵循Quasar的惯例，用于跳转到上一页；请确保已安装图标库，除非使用“img:”前缀"
    },
    "icon-next-page": {
      "type": "String",
      "desc": "Icon name following Quasar convention for stepping to next page; Make sure you have the icon library installed unless you are using 'img:' prefix",
      "examples": [
        "map",
        "ion-add",
        "img:https://cdn.quasar.dev/logo-v2/svg/logo.svg",
        "img:path/to/some_image.png"
      ],
      "category": "content",
      "desc_cn": "图标名称遵循Quasar的惯例，以便进入下一页；请确保已安装图标库，除非使用“img:”前缀"
    },
    "icon-last-page": {
      "type": "String",
      "desc": "Icon name following Quasar convention for stepping to last page; Make sure you have the icon library installed unless you are using 'img:' prefix",
      "examples": [
        "map",
        "ion-add",
        "img:https://cdn.quasar.dev/logo-v2/svg/logo.svg",
        "img:path/to/some_image.png"
      ],
      "category": "content",
      "desc_cn": "图标名称遵循Quasar的惯例，以进入最后一页；请确保已安装图标库，除非使用“img:”前缀"
    },
    "grid": {
      "type": "Boolean",
      "desc": "Display data as a grid instead of the default table",
      "category": "behavior",
      "desc_cn": "将数据显示为网格而不是默认表格"
    },
    "grid-header": {
      "type": "Boolean",
      "desc": "Display header for grid-mode also",
      "category": "behavior|content",
      "desc_cn": "同时显示网格模式的头部"
    },
    "dense": {
      "type": "Boolean",
      "desc": "Dense mode; Connect with $q.screen for responsive behavior",
      "category": "style",
      "desc_cn": "密集模式；连接$q.screen以获得响应行为"
    },
    "columns": {
      "type": "Array",
      "desc": "The column definitions (Array of Objects)",
      "examples": [
        ":columns=\"tableColumns\""
      ],
      "category": "column",
      "definition": {
        "name": {
          "type": "String",
          "required": true,
          "desc": "Unique id, identifies column, (used by pagination.sortBy, 'body-cell-[name]' slot, ...)",
          "examples": [
            "desc"
          ],
          "desc_cn": "唯一id，标识列（由pagination.sortBy使用，'body cell-[name]'插槽，…）"
        },
        "label": {
          "type": "String",
          "required": true,
          "desc": "Label for header",
          "examples": [
            "Dessert (100g serving)"
          ],
          "desc_cn": "头部标签"
        },
        "field": {
          "type": [
            "String",
            "Function"
          ],
          "required": true,
          "desc": "Row Object property to determine value for this column or function which maps to the required property",
          "params": {
            "row": {
              "type": "Object",
              "required": true,
              "desc": "The current row being processed",
              "examples": [
                "{ name: 'Lorem Ipsum', prices: { active: 19, old: 25, list: 29 } }"
              ]
            }
          },
          "returns": {
            "type": "Any",
            "desc": "Value for this column",
            "examples": [
              "19"
            ]
          },
          "examples": [
            "name",
            "row => row.prices.active"
          ],
          "desc_cn": "行对象属性来确定映射到所需属性的列或函数的值"
        },
        "required": {
          "type": "Boolean",
          "desc": "If we use visible-columns, this col will always be visible",
          "desc_cn": "如果使用可见列，则此列将始终可见"
        },
        "align": {
          "type": "String",
          "desc": "Horizontal alignment of cells in this column",
          "values": [
            "left",
            "right",
            "center"
          ],
          "default": "right",
          "required": false,
          "desc_cn": "此列中单元格的水平对齐方式"
        },
        "sortable": {
          "type": "Boolean",
          "desc": "Tell QTable you want this column sortable",
          "default": false,
          "required": false,
          "desc_cn": "告诉QTable您希望此列可排序"
        },
        "sort": {
          "type": "Function",
          "desc": "Compare function if you have some custom data or want a specific way to compare two rows",
          "examples": [
            "(a, b, rowA, rowB) => parseInt(a, 10) - parseInt(b, 10)"
          ],
          "params": {
            "a": {
              "type": "Any",
              "required": true,
              "desc": "Value of the first comparison term",
              "examples": [
                123,
                "abc"
              ],
              "desc_cn": "第一个比较项的值"
            },
            "b": {
              "type": "Any",
              "required": true,
              "desc": "Value of the second comparison term",
              "examples": [
                123,
                "abc"
              ],
              "desc_cn": "第二个比较项的值"
            },
            "rowA": {
              "type": "Object",
              "required": true,
              "desc": "Full Row object in which is contained the first term",
              "examples": [
                "{ name: 'Potassium', value: 'K' }"
              ],
              "desc_cn": "包含第一项的整行对象"
            },
            "rowB": {
              "type": "Object",
              "required": true,
              "desc": "Full Row object in which is contained the second term",
              "examples": [
                "{ name: 'Fluorine', value: 'F' }"
              ],
              "desc_cn": "包含第二项的整行对象"
            }
          },
          "returns": {
            "type": "Number",
            "desc": "Comparison result of term 'a' with term 'b'. Less than 0 when 'a' should come first; greater than 0 if 'b' should come first; equal to 0 if their position must not be changed with respect to each other",
            "examples": [
              "-1",
              "0",
              "1"
            ],
            "desc_cn": "比较项“a”与比较项“b”的比较结果。“a”应排在第一位时小于0；如果“b”应排在第一位则大于0；如果它们的位置不能相互改变，则等于0"
          },
          "desc_cn": "如果您有一些自定义数据或需要比较两行的特定方法，请使用Compare函数"
        },
        "sortOrder": {
          "type": "String",
          "desc": "Set column sort order: 'ad' (ascending-descending) or 'da' (descending-ascending); Overrides the 'column-sort-order' prop",
          "values": [
            "ad",
            "da"
          ],
          "default": "ad",
          "required": false,
          "desc_cn": "设置列排序顺序：“ad”（升序-降序）或“da”（升序-降序）；覆盖“column-sort-order”属性"
        },
        "format": {
          "type": "Function",
          "desc": "Function you can apply to format your data",
          "examples": [
            "(val, row) => `${val}%`",
            "val => val ? /* Unicode checkmark checked */ '☑' : /* Unicode checkmark unchecked */ '☐'"
          ],
          "params": {
            "val": {
              "type": "Any",
              "required": true,
              "desc": "Value of the cell",
              "examples": [
                123,
                "abc"
              ],
              "desc_cn": "单元格的值"
            },
            "row": {
              "type": "Object",
              "required": true,
              "desc": "Full Row object in which the cell is contained",
              "examples": [
                "{ name: 'Potassium', value: 'K' }"
              ],
              "desc_cn": "包含单元格的整行对象"
            }
          },
          "returns": {
            "type": "Any",
            "desc": "The resulting formatted value",
            "examples": [
              "20%"
            ],
            "desc_cn": "生成的格式化值"
          },
          "desc_cn": "可以应用于格式化数据的函数"
        },
        "style": {
          "type": [
            "String",
            "Function"
          ],
          "desc": "Style to apply on normal cells of the column",
          "params": {
            "row": {
              "type": "Object",
              "required": true,
              "desc": "The current row being processed",
              "examples": [
                "{ name: 'Frozen Yogurt', calories: 159 }"
              ]
            }
          },
          "returns": {
            "type": "String"
          },
          "examples": [
            "'width: 500px'",
            "row => (row.calories % 2 === 0 ? 'width: 10px' : 'font-size: 2em; font-weight: bold')"
          ]
        },
        "classes": {
          "type": [
            "String",
            "Function"
          ],
          "desc": "Classes to add on normal cells of the column",
          "params": {
            "row": {
              "type": "Object",
              "required": true,
              "desc": "The current row being processed",
              "examples": [
                "{ name: 'Frozen Yogurt', calories: 159 }"
              ]
            }
          },
          "returns": {
            "type": "String"
          },
          "examples": [
            "'my-special-class bg-primary'",
            "row => (row.calories % 2 === 0 ? 'bg-green text-white' : 'bg-yellow')"
          ]
        },
        "headerStyle": {
          "type": "String",
          "desc": "Style to apply on header cells of the column",
          "examples": [
            "width: 500px"
          ],
          "desc_cn": "应用于列头部单元格的样式"
        },
        "headerClasses": {
          "type": "String",
          "desc": "Classes to add on header cells of the column",
          "examples": [
            "my-special-class"
          ],
          "desc_cn": "要添加到列头部单元格的类"
        }
      },
      "desc_cn": "列定义（对象数组）"
    },
    "visible-columns": {
      "type": "Array",
      "desc": "Array of Strings defining column names ('name' property of each column from 'columns' prop definitions); Columns marked as 'required' are not affected by this property",
      "examples": [
        ":visible-columns=\"myCols\"",
        "[ 'desc', 'carbs', 'protein' ]"
      ],
      "category": "column",
      "desc_cn": "定义列名的字符串数组（“columns”属性定义中每列的“name”属性）；标记为“required”的列不受此属性的影响"
    },
    "loading": {
      "type": "Boolean",
      "desc": "Put Table into 'loading' state; Notify the user something is happening behind the scenes",
      "category": "behavior|content"
    },
    "title": {
      "type": "String",
      "desc": "Table title",
      "examples": [
        "Device list"
      ],
      "category": "content",
      "desc_cn": "表格标题"
    },
    "hide-header": {
      "type": "Boolean",
      "desc": "Hide table header layer",
      "category": "content",
      "desc_cn": "隐藏表格头部层"
    },
    "hide-bottom": {
      "type": "Boolean",
      "desc": "Hide table bottom layer regardless of what it has to display",
      "category": "content",
      "desc_cn": "隐藏表格底部层，不管它必须显示什么"
    },
    "hide-selected-banner": {
      "type": "Boolean",
      "desc": "Hide the selected rows banner (if any)",
      "category": "content",
      "desc_cn": "隐藏所选行横幅（如果有）"
    },
    "hide-no-data": {
      "type": "Boolean",
      "desc": "Hide the default no data bottom layer",
      "category": "content",
      "desc_cn": "隐藏默认的无数据底层"
    },
    "hide-pagination": {
      "type": "Boolean",
      "desc": "Hide the pagination controls at the bottom",
      "category": "content",
      "desc_cn": "隐藏底部的分页控件"
    },
    "dark": {
      "type": "Boolean",
      "desc": "Notify the component that the background is a dark color",
      "category": "style",
      "desc_cn": "设置组件背景为深色"
    },
    "flat": {
      "type": "Boolean",
      "desc": "Applies a 'flat' design (no default shadow)",
      "category": "style",
      "desc_cn": "应用“平面”设计（无默认阴影）"
    },
    "bordered": {
      "type": "Boolean",
      "desc": "Applies a default border to the component",
      "category": "style",
      "desc_cn": "将默认边框应用于组件"
    },
    "square": {
      "type": "Boolean",
      "desc": "Removes border-radius so borders are squared",
      "category": "style",
      "desc_cn": "删除边框圆角（border-radius），使边框为正方形"
    },
    "separator": {
      "type": "String",
      "desc": "Use a separator/border between rows, columns or all cells",
      "default": "horizontal",
      "values": [
        "horizontal",
        "vertical",
        "cell",
        "none"
      ],
      "category": "content",
      "required": false,
      "desc_cn": "在行、列或所有单元格之间使用分隔条/边框"
    },
    "wrap-cells": {
      "type": "Boolean",
      "desc": "Wrap text within table cells",
      "category": "content",
      "desc_cn": "在表格单元格中换行文本"
    },
    "binary-state-sort": {
      "type": "Boolean",
      "desc": "Skip the third state (unsorted) when user toggles column sort direction",
      "category": "sorting",
      "desc_cn": "当用户切换列排序方向时，跳过第三种状态（未排序）"
    },
    "column-sort-order": {
      "type": "String",
      "desc": "Set column sort order: 'ad' (ascending-descending) or 'da' (descending-ascending); It gets applied to all columns unless a column has its own sortOrder specified in the 'columns' definition prop",
      "values": [
        "ad",
        "da"
      ],
      "default": "ad",
      "category": "sorting",
      "required": false,
      "desc_cn": "设置列排序顺序：“ad”（升序-降序）或“da”（升序-降序）；除非列在“columns”定义中指定了自己的排序器，否则它将应用于所有列"
    },
    "no-data-label": {
      "type": "String",
      "desc": "Override default text to display when no data is available",
      "examples": [
        "No devices available"
      ],
      "category": "content",
      "desc_cn": "替代没有可用数据时显示的默认文本"
    },
    "no-results-label": {
      "type": "String",
      "desc": "Override default text to display when user filters the table and no matched results are found",
      "examples": [
        "No matched records"
      ],
      "category": "content",
      "desc_cn": "替代默认文本以在用户筛选表时显示，但找不到匹配的结果"
    },
    "loading-label": {
      "type": "String",
      "desc": "Override default text to display when table is in loading state (see 'loading' prop)",
      "examples": [
        "Loading devices..."
      ],
      "category": "content",
      "desc_cn": "替代表格处于加载状态时显示的默认文本（请参阅“loading”属性）"
    },
    "selected-rows-label": {
      "type": "Function",
      "desc": "Text to display when user selected at least one row; For best performance, reference it from your scope and do not define it inline",
      "params": {
        "numberOfRows": {
          "type": "Number",
          "desc": "Number of rows available",
          "desc_cn": "可用行数"
        }
      },
      "returns": {
        "type": "String",
        "desc": "Label to display",
        "examples": [
          "5 rows are selected"
        ],
        "desc_cn": "要显示的标签"
      },
      "examples": [
        ":selected-rows-label=\"getSelectedString\""
      ],
      "category": "selection",
      "desc_cn": "当用户选择至少一行时要显示的文本；为了获得最佳性能，请从您的范围中引用它，而不要内联定义它"
    },
    "rows-per-page-label": {
      "type": "String",
      "desc": "Text to override default rows per page label at bottom of table",
      "examples": [
        "Records per page:"
      ],
      "category": "pagination",
      "desc_cn": "替代表底部每页默认行标签的文本"
    },
    "pagination-label": {
      "type": "Function",
      "desc": "Text to override default pagination label at bottom of table (unless 'pagination' scoped slot is used); For best performance, reference it from your scope and do not define it inline",
      "params": {
        "firstRowIndex": {
          "type": "Number",
          "desc": "Index of first displayed row",
          "desc_cn": "显示的第一行的索引"
        },
        "endRowIndex": {
          "type": "Number",
          "desc": "Index of last displayed row",
          "desc_cn": "最后显示行的索引"
        },
        "totalRowsNumber": {
          "type": "Number",
          "desc": "Number of total rows available in data",
          "desc_cn": "数据中可用的总行数"
        }
      },
      "returns": {
        "type": "String",
        "desc": "Label to display",
        "examples": [
          "1-10 of 132"
        ],
        "desc_cn": "要显示的标签"
      },
      "examples": [
        ":pagination-label=\"getPaginationLabel\""
      ],
      "category": "pagination",
      "desc_cn": "覆盖表格底部默认分页标签的文本（除非使用“pagination”范围的槽）；为了获得最佳性能，请从您的范围中引用它，而不要内联定义它"
    },
    "table-style": {
      "type": [
        "String",
        "Array",
        "Object"
      ],
      "tsType": "VueStyleProp",
      "desc": "CSS style to apply to native HTML <table> element's wrapper (which is a DIV)",
      "examples": [
        "background-color: #ff0000",
        ":table-style=\"{ backgroundColor: '#ff0000' }\""
      ],
      "category": "style",
      "desc_cn": "应用于原生HTML<table>元素包装器（DIV）的CSS样式"
    },
    "table-class": {
      "type": [
        "String",
        "Array",
        "Object"
      ],
      "tsType": "VueClassProp",
      "desc": "CSS classes to apply to native HTML <table> element's wrapper (which is a DIV)",
      "examples": [
        "my-special-class",
        ":table-class=\"{ 'my-special-class': [Boolean condition] }\""
      ],
      "category": "style",
      "desc_cn": "应用于原生HTML<table>元素的包装器（DIV）的CSS类"
    },
    "table-header-style": {
      "type": [
        "String",
        "Array",
        "Object"
      ],
      "tsType": "VueStyleProp",
      "desc": "CSS style to apply to header of native HTML <table> (which is a TR)",
      "examples": [
        "background-color: #ff0000",
        ":table-header-style=\"{ backgroundColor: '#ff0000' }\""
      ],
      "category": "style",
      "desc_cn": "应用于原生HTML<table>的头部（即TR）的CSS样式"
    },
    "table-header-class": {
      "type": [
        "String",
        "Array",
        "Object"
      ],
      "tsType": "VueClassProp",
      "desc": "CSS classes to apply to header of native HTML <table> (which is a TR)",
      "examples": [
        "my-special-class",
        ":table-header-class=\"{ 'my-special-class': [Boolean condition] }\""
      ],
      "category": "style",
      "desc_cn": "应用于本机HTML<table>的头部（即TR）的CSS类"
    },
    "card-container-style": {
      "type": [
        "String",
        "Array",
        "Object"
      ],
      "tsType": "VueStyleProp",
      "desc": "CSS style to apply to the cards container (when in grid mode)",
      "examples": [
        "background-color: #ff0000",
        ":card-container-style=\"{ backgroundColor: '#ff0000' }\""
      ],
      "category": "style",
      "desc_cn": "应用于卡片容器的CSS样式（在网格模式下）"
    },
    "card-container-class": {
      "type": [
        "String",
        "Array",
        "Object"
      ],
      "tsType": "VueClassProp",
      "desc": "CSS classes to apply to the cards container (when in grid mode)",
      "examples": [
        "my-special-class",
        "justify-center",
        ":card-container-class=\"{ 'my-special-class': [Boolean condition] }\""
      ],
      "category": "style",
      "desc_cn": "应用于卡片容器的CSS类（在网格模式下）"
    },
    "card-style": {
      "type": [
        "String",
        "Array",
        "Object"
      ],
      "tsType": "VueStyleProp",
      "desc": "CSS style to apply to the card (when in grid mode) or container card (when not in grid mode)",
      "examples": [
        "background-color: #ff0000",
        ":card-style=\"{ backgroundColor: '#ff0000' }\""
      ],
      "category": "style",
      "desc_cn": "应用于卡片（当处于网格模式时）或容器卡片（当不处于网格模式时）的CSS样式"
    },
    "card-class": {
      "type": [
        "String",
        "Array",
        "Object"
      ],
      "tsType": "VueClassProp",
      "desc": "CSS classes to apply to the card (when in grid mode) or container card (when not in grid mode)",
      "examples": [
        "my-special-class",
        ":card-class=\"{ 'my-special-class': [Boolean condition] }\""
      ],
      "category": "style",
      "desc_cn": "应用于卡片（当处于网格模式时）或容器卡片（当不处于网格模式时）的CSS类"
    },
    "title-class": {
      "type": [
        "String",
        "Array",
        "Object"
      ],
      "tsType": "VueClassProp",
      "desc": "CSS classes to apply to the title (if using 'title' prop)",
      "examples": [
        "my-special-class",
        "text-h1",
        ":title-class=\"{ 'text-h1': [Boolean condition] }\""
      ],
      "category": "style",
      "desc_cn": "应用于标题的CSS类（如果使用“title”属性）"
    },
    "filter": {
      "type": [
        "String",
        "Object"
      ],
      "desc": "String/Object to filter table with; When using an Object it requires 'filter-method' to also be specified since it will be a custom filtering",
      "examples": [
        ":filter=\"myFilterInput\""
      ],
      "category": "filter",
      "desc_cn": "用于筛选表的字符串/对象；使用对象时，需要指定“filter-method”，因为它将是一个自定义筛选"
    },
    "filter-method": {
      "type": "Function",
      "desc": "The actual filtering mechanism; For best performance, reference it from your scope and do not define it inline",
      "params": {
        "rows": {
          "type": "Array",
          "desc": "Array of rows",
          "desc_cn": "行的数组"
        },
        "terms": {
          "type": [
            "String",
            "Object"
          ],
          "desc": "Terms to filter with (is essentially the 'filter' prop value)",
          "desc_cn": "过滤条件（本质上是“过滤器”属性值）"
        },
        "cols": {
          "type": "Array",
          "desc": "Column definitions"
        },
        "getCellValue": {
          "type": "Function",
          "desc": "Optional function to get a cell value",
          "params": {
            "col": {
              "type": "Object",
              "required": true,
              "desc": "Column name from column definitions",
              "desc_cn": "列定义中的列名"
            },
            "row": {
              "type": "Object",
              "required": true,
              "desc": "The row object",
              "desc_cn": "行对象"
            }
          },
          "returns": {
            "type": "Any",
            "desc": "Parsed/Processed cell value",
            "examples": [
              "Ice Cream Sandwich"
            ],
            "desc_cn": "已分析/处理的单元格值"
          },
          "desc_cn": "获取单元格值的可选函数"
        }
      },
      "returns": {
        "type": "Array",
        "desc": "Filtered rows",
        "desc_cn": "筛选的行"
      },
      "default": "(see source code)",
      "examples": [
        "(see source code)"
      ],
      "category": "filter",
      "required": false,
      "desc_cn": "实际的过滤机制；为了获得最佳性能，请从您的范围中引用它，而不要内联定义它"
    },
    "pagination": {
      "type": "Object",
      "desc": "Pagination object; You can also use the 'v-model:pagination' for synching; When not synching it simply initializes the pagination on first render",
      "definition": {
        "sortBy": {
          "type": "String",
          "desc": "Column name (from column definition)",
          "examples": [
            "calories"
          ],
          "desc_cn": "列名（来自列定义）"
        },
        "descending": {
          "type": "Boolean",
          "desc": "Is sorting in descending order?",
          "desc_cn": "排序是按降序排列的吗？"
        },
        "page": {
          "type": "Number",
          "desc": "Page number (1-based)",
          "desc_cn": "页码（基于1）"
        },
        "rowsPerPage": {
          "type": "Number",
          "desc": "How many rows per page? 0 means Infinite",
          "desc_cn": "每页多少行？0表示无限"
        },
        "rowsNumber": {
          "type": "Number",
          "desc": "For server-side fetching only. How many total database rows are there to be added to the table. If set, causes the QTable to emit @request when data is required.",
          "desc_cn": "仅用于服务器端获取。要添加到表中的数据库行总数。如果设置，则当需要数据时，使QTable发出@request。"
        }
      },
      "syncable": true,
      "examples": [
        ":pagination=\"myInitialPagination\"",
        "v-model:pagination=\"myPagination\""
      ],
      "category": "pagination"
    },
    "rows-per-page-options": {
      "type": "Array",
      "desc": "Options for user to pick (Numbers); Number 0 means 'Show all rows in one page'",
      "default": "[ 3, 5, 7, 10, 15, 20, 25, 50, 0 ]",
      "examples": [
        ":rows-per-page-options=\"[10, 20]\""
      ],
      "category": "pagination",
      "required": false,
      "desc_cn": "供用户选择的选项（数字）；数字0表示“在一页中显示所有行”"
    },
    "selection": {
      "type": "String",
      "desc": "Selection type",
      "default": "none",
      "values": [
        "single",
        "multiple",
        "none"
      ],
      "category": "selection",
      "required": false,
      "desc_cn": "选择类型"
    },
    "selected": {
      "type": "Array",
      "desc": "Keeps the user selection array",
      "default": "[]",
      "syncable": true,
      "examples": [
        "v-model:selected=\"selection\""
      ],
      "category": "selection",
      "required": false,
      "desc_cn": "保留用户选择数组"
    },
    "expanded": {
      "type": "Array",
      "desc": "Keeps the array with expanded rows keys",
      "default": "[]",
      "syncable": true,
      "examples": [
        "v-model:expanded=\"expanded\""
      ],
      "category": "expansion",
      "required": false,
      "desc_cn": "使用展开的行键保留数组"
    },
    "sort-method": {
      "type": "Function",
      "desc": "The actual sort mechanism. Function (rows, sortBy, descending) => sorted rows; For best performance, reference it from your scope and do not define it inline",
      "params": {
        "rows": {
          "type": "Array",
          "desc": "Array with rows",
          "desc_cn": "带行数组"
        },
        "sortBy": {
          "type": "String",
          "desc": "Column name (from column definition)",
          "examples": [
            "calories"
          ],
          "desc_cn": "列名（来自列定义）"
        },
        "descending": {
          "type": "Boolean",
          "desc": "Is sorting in descending order?",
          "desc_cn": "排序是按降序排列的吗？"
        }
      },
      "returns": {
        "type": "Array",
        "desc": "Sorted rows",
        "desc_cn": "排序的行"
      },
      "default": "(see source code)",
      "examples": [
        "(see source code)"
      ],
      "category": "sorting",
      "required": false,
      "desc_cn": "实际的排序机制。函数 (rows, sortBy, descending) => sorted rows；为了获得最佳性能，请从您的范围中引用它，而不要内联定义它"
    }
  },
  "slots": {
    "loading": {
      "desc": "Override default effect when table is in loading state; Suggestion: QInnerLoading",
      "desc_cn": "表处于加载状态时覆盖默认效果；建议：QinerLoading"
    },
    "item": {
      "desc": "Slot to use for defining an item when in 'grid' mode; Suggestion: QCard",
      "scope": {
        "key": {
          "type": "Any",
          "desc": "Row/Item's key"
        },
        "row": {
          "type": "Object",
          "desc": "Row/Item object"
        },
        "rowIndex": {
          "type": "Number",
          "desc": "Row/Item's index (0 based) in the filtered and sorted table"
        },
        "pageIndex": {
          "type": "Number",
          "desc": "Row/Item's index (0 based) in the current page of the filtered and sorted table"
        },
        "cols": {
          "type": "Object",
          "desc": "Column definitions"
        },
        "colsMap": {
          "type": "Object",
          "desc": "Column mapping (key is column name, value is column object)"
        },
        "sort": {
          "type": "Function",
          "desc": "Trigger a table sort",
          "params": {
            "col": {
              "type": [
                "String",
                "Object"
              ],
              "required": true,
              "desc": "Column name or column definition object",
              "examples": [
                "calories"
              ]
            }
          },
          "returns": null
        },
        "selected": {
          "type": "Boolean",
          "desc": "(Only if using selection) Is row/item selected? Can directly be assigned new Boolean value which changes selection state",
          "reactive": true
        },
        "expand": {
          "type": "Boolean",
          "desc": "Is row/item expanded? Can directly be assigned new Boolean value which changes expanded state",
          "reactive": true
        },
        "color": {
          "type": "String",
          "desc": "Color name for component from the Quasar Color Palette",
          "examples": [
            "primary",
            "teal-10"
          ],
          "category": "style"
        },
        "dark": {
          "type": "Boolean",
          "desc": "Notify the component that the background is a dark color",
          "category": "style"
        },
        "dense": {
          "type": "Boolean",
          "desc": "Dense mode; occupies less space",
          "category": "style"
        }
      }
    },
    "body": {
      "desc": "Slot to define how a body row looks like; Suggestion: QTr + Td",
      "scope": {
        "key": {
          "type": "Any",
          "desc": "Row's key"
        },
        "row": {
          "type": "Object",
          "desc": "Row object"
        },
        "rowIndex": {
          "type": "Number",
          "desc": "Row's index (0 based) in the filtered and sorted table"
        },
        "pageIndex": {
          "type": "Number",
          "desc": "Row's index (0 based) in the current page of the filtered and sorted table"
        },
        "cols": {
          "type": "Object",
          "desc": "Column definitions"
        },
        "colsMap": {
          "type": "Object",
          "desc": "Column mapping (key is column name, value is column object)"
        },
        "sort": {
          "type": "Function",
          "desc": "Trigger a table sort",
          "params": {
            "col": {
              "type": [
                "String",
                "Object"
              ],
              "required": true,
              "desc": "Column name or column definition object",
              "examples": [
                "calories"
              ]
            }
          },
          "returns": null
        },
        "selected": {
          "type": "Boolean",
          "desc": "(Only if using selection) Is row selected? Can directly be assigned new Boolean value which changes selection state",
          "reactive": true
        },
        "expand": {
          "type": "Boolean",
          "desc": "Is row expanded? Can directly be assigned new Boolean value which changes expanded state",
          "reactive": true
        },
        "color": {
          "type": "String",
          "desc": "Color name for component from the Quasar Color Palette",
          "examples": [
            "primary",
            "teal-10"
          ],
          "category": "style"
        },
        "dark": {
          "type": "Boolean",
          "desc": "Notify the component that the background is a dark color",
          "category": "style"
        },
        "dense": {
          "type": "Boolean",
          "desc": "Dense mode; occupies less space",
          "category": "style"
        },
        "__trClass": {
          "type": "String",
          "desc": "Internal prop passed down to QTr (if used)"
        }
      }
    },
    "body-cell": {
      "desc": "Slot to define how all body cells look like; Suggestion: QTd",
      "scope": {
        "col": {
          "type": "Object",
          "desc": "Column definition for column associated with table cell"
        },
        "value": {
          "type": "Any",
          "desc": "Parsed/Formatted value of table cell"
        },
        "key": {
          "type": "Any",
          "desc": "Row's key"
        },
        "row": {
          "type": "Object",
          "desc": "Row object"
        },
        "rowIndex": {
          "type": "Number",
          "desc": "Row's index (0 based) in the filtered and sorted table"
        },
        "pageIndex": {
          "type": "Number",
          "desc": "Row's index (0 based) in the current page of the filtered and sorted table"
        },
        "cols": {
          "type": "Object",
          "desc": "Column definitions"
        },
        "colsMap": {
          "type": "Object",
          "desc": "Column mapping (key is column name, value is column object)"
        },
        "sort": {
          "type": "Function",
          "desc": "Trigger a table sort",
          "params": {
            "col": {
              "type": [
                "String",
                "Object"
              ],
              "required": true,
              "desc": "Column name or column definition object",
              "examples": [
                "calories"
              ]
            }
          },
          "returns": null
        },
        "selected": {
          "type": "Boolean",
          "desc": "(Only if using selection) Is row selected? Can directly be assigned new Boolean value which changes selection state",
          "reactive": true
        },
        "expand": {
          "type": "Boolean",
          "desc": "Is row expanded? Can directly be assigned new Boolean value which changes expanded state",
          "reactive": true
        },
        "color": {
          "type": "String",
          "desc": "Color name for component from the Quasar Color Palette",
          "examples": [
            "primary",
            "teal-10"
          ],
          "category": "style"
        },
        "dark": {
          "type": "Boolean",
          "desc": "Notify the component that the background is a dark color",
          "category": "style"
        },
        "dense": {
          "type": "Boolean",
          "desc": "Dense mode; occupies less space",
          "category": "style"
        }
      }
    },
    "body-cell-[name]": {
      "desc": "Slot to define how a specific column cell looks like; replace '[name]' with column name (from columns definition object)",
      "scope": {
        "col": {
          "type": "Object",
          "desc": "Column definition for column associated with table cell"
        },
        "value": {
          "type": "Any",
          "desc": "Parsed/Formatted value of table cell"
        },
        "key": {
          "type": "Any",
          "desc": "Row's key"
        },
        "row": {
          "type": "Object",
          "desc": "Row object"
        },
        "rowIndex": {
          "type": "Number",
          "desc": "Row's index (0 based) in the filtered and sorted table"
        },
        "pageIndex": {
          "type": "Number",
          "desc": "Row's index (0 based) in the current page of the filtered and sorted table"
        },
        "cols": {
          "type": "Object",
          "desc": "Column definitions"
        },
        "colsMap": {
          "type": "Object",
          "desc": "Column mapping (key is column name, value is column object)"
        },
        "sort": {
          "type": "Function",
          "desc": "Trigger a table sort",
          "params": {
            "col": {
              "type": [
                "String",
                "Object"
              ],
              "required": true,
              "desc": "Column name or column definition object",
              "examples": [
                "calories"
              ]
            }
          },
          "returns": null
        },
        "selected": {
          "type": "Boolean",
          "desc": "(Only if using selection) Is row selected? Can directly be assigned new Boolean value which changes selection state",
          "reactive": true
        },
        "expand": {
          "type": "Boolean",
          "desc": "Is row expanded? Can directly be assigned new Boolean value which changes expanded state",
          "reactive": true
        },
        "color": {
          "type": "String",
          "desc": "Color name for component from the Quasar Color Palette",
          "examples": [
            "primary",
            "teal-10"
          ],
          "category": "style"
        },
        "dark": {
          "type": "Boolean",
          "desc": "Notify the component that the background is a dark color",
          "category": "style"
        },
        "dense": {
          "type": "Boolean",
          "desc": "Dense mode; occupies less space",
          "category": "style"
        }
      }
    },
    "header": {
      "desc": "Slot to define how header looks like; Suggestion: QTr + QTh",
      "scope": {
        "cols": {
          "type": "Object",
          "desc": "Column definitions"
        },
        "colsMap": {
          "type": "Object",
          "desc": "Column mapping (key is column name, value is column object)"
        },
        "sort": {
          "type": "Function",
          "desc": "Trigger a table sort",
          "params": {
            "col": {
              "type": [
                "String",
                "Object"
              ],
              "required": true,
              "desc": "Column name or column definition object",
              "examples": [
                "calories"
              ]
            }
          },
          "returns": null
        },
        "selected": {
          "type": "Boolean",
          "desc": "(Only if using selection) Is row selected? Can directly be assigned new Boolean value which changes selection state",
          "reactive": true
        },
        "expand": {
          "type": "Boolean",
          "desc": "Is row expanded? Can directly be assigned new Boolean value which changes expanded state",
          "reactive": true
        },
        "color": {
          "type": "String",
          "desc": "Color name for component from the Quasar Color Palette",
          "examples": [
            "primary",
            "teal-10"
          ],
          "category": "style"
        },
        "dark": {
          "type": "Boolean",
          "desc": "Notify the component that the background is a dark color",
          "category": "style"
        },
        "dense": {
          "type": "Boolean",
          "desc": "Dense mode; occupies less space",
          "category": "style"
        },
        "__trClass": {
          "type": "String",
          "desc": "Internal prop passed down to QTr (if used)"
        },
        "header": {
          "type": "Boolean",
          "desc": "Internal prop passed down to QTh (if used); Always 'true'"
        }
      }
    },
    "header-cell": {
      "desc": "Slot to define how each header cell looks like; Suggestion: QTh",
      "scope": {
        "col": {
          "type": "Object",
          "desc": "Column definition associated to header cell"
        },
        "cols": {
          "type": "Object",
          "desc": "Column definitions"
        },
        "colsMap": {
          "type": "Object",
          "desc": "Column mapping (key is column name, value is column object)"
        },
        "sort": {
          "type": "Function",
          "desc": "Trigger a table sort",
          "params": {
            "col": {
              "type": [
                "String",
                "Object"
              ],
              "required": true,
              "desc": "Column name or column definition object",
              "examples": [
                "calories"
              ]
            }
          },
          "returns": null
        },
        "selected": {
          "type": "Boolean",
          "desc": "(Only if using selection) Is row selected? Can directly be assigned new Boolean value which changes selection state",
          "reactive": true
        },
        "expand": {
          "type": "Boolean",
          "desc": "Is row expanded? Can directly be assigned new Boolean value which changes expanded state",
          "reactive": true
        },
        "color": {
          "type": "String",
          "desc": "Color name for component from the Quasar Color Palette",
          "examples": [
            "primary",
            "teal-10"
          ],
          "category": "style"
        },
        "dark": {
          "type": "Boolean",
          "desc": "Notify the component that the background is a dark color",
          "category": "style"
        },
        "dense": {
          "type": "Boolean",
          "desc": "Dense mode; occupies less space",
          "category": "style"
        }
      }
    },
    "header-cell-[name]": {
      "desc": "Slot to define how a specific header cell looks like; replace '[name]' with column name (from columns definition object)",
      "scope": {
        "col": {
          "type": "Object",
          "desc": "Column definition associated to header cell"
        },
        "cols": {
          "type": "Object",
          "desc": "Column definitions"
        },
        "colsMap": {
          "type": "Object",
          "desc": "Column mapping (key is column name, value is column object)"
        },
        "sort": {
          "type": "Function",
          "desc": "Trigger a table sort",
          "params": {
            "col": {
              "type": [
                "String",
                "Object"
              ],
              "required": true,
              "desc": "Column name or column definition object",
              "examples": [
                "calories"
              ]
            }
          },
          "returns": null
        },
        "selected": {
          "type": "Boolean",
          "desc": "(Only if using selection) Is row selected? Can directly be assigned new Boolean value which changes selection state",
          "reactive": true
        },
        "expand": {
          "type": "Boolean",
          "desc": "Is row expanded? Can directly be assigned new Boolean value which changes expanded state",
          "reactive": true
        },
        "color": {
          "type": "String",
          "desc": "Color name for component from the Quasar Color Palette",
          "examples": [
            "primary",
            "teal-10"
          ],
          "category": "style"
        },
        "dark": {
          "type": "Boolean",
          "desc": "Notify the component that the background is a dark color",
          "category": "style"
        },
        "dense": {
          "type": "Boolean",
          "desc": "Dense mode; occupies less space",
          "category": "style"
        }
      }
    },
    "body-selection": {
      "desc": "Slot to define how body selection column looks like; Suggestion: QCheckbox",
      "scope": {
        "key": {
          "type": "Any",
          "desc": "Row's key"
        },
        "row": {
          "type": "Object",
          "desc": "Row object"
        },
        "rowIndex": {
          "type": "Number",
          "desc": "Row's index (0 based) in the filtered and sorted table"
        },
        "pageIndex": {
          "type": "Number",
          "desc": "Row's index (0 based) in the current page of the filtered and sorted table"
        },
        "cols": {
          "type": "Object",
          "desc": "Column definitions"
        },
        "colsMap": {
          "type": "Object",
          "desc": "Column mapping (key is column name, value is column object)"
        },
        "sort": {
          "type": "Function",
          "desc": "Trigger a table sort",
          "params": {
            "col": {
              "type": [
                "String",
                "Object"
              ],
              "required": true,
              "desc": "Column name or column definition object",
              "examples": [
                "calories"
              ]
            }
          },
          "returns": null
        },
        "selected": {
          "type": "Boolean",
          "desc": "(Only if using selection) Is row selected? Can directly be assigned new Boolean value which changes selection state",
          "reactive": true
        },
        "expand": {
          "type": "Boolean",
          "desc": "Is row expanded? Can directly be assigned new Boolean value which changes expanded state",
          "reactive": true
        },
        "color": {
          "type": "String",
          "desc": "Color name for component from the Quasar Color Palette",
          "examples": [
            "primary",
            "teal-10"
          ],
          "category": "style"
        },
        "dark": {
          "type": "Boolean",
          "desc": "Notify the component that the background is a dark color",
          "category": "style"
        },
        "dense": {
          "type": "Boolean",
          "desc": "Dense mode; occupies less space",
          "category": "style"
        }
      }
    },
    "header-selection": {
      "desc": "Slot to define how header selection column looks like (available only for multiple selection mode); Suggestion: QCheckbox",
      "scope": {
        "cols": {
          "type": "Object",
          "desc": "Column definitions"
        },
        "colsMap": {
          "type": "Object",
          "desc": "Column mapping (key is column name, value is column object)"
        },
        "sort": {
          "type": "Function",
          "desc": "Trigger a table sort",
          "params": {
            "col": {
              "type": [
                "String",
                "Object"
              ],
              "required": true,
              "desc": "Column name or column definition object",
              "examples": [
                "calories"
              ]
            }
          },
          "returns": null
        },
        "selected": {
          "type": "Boolean",
          "desc": "(Only if using selection) Is row selected? Can directly be assigned new Boolean value which changes selection state",
          "reactive": true
        },
        "expand": {
          "type": "Boolean",
          "desc": "Is row expanded? Can directly be assigned new Boolean value which changes expanded state",
          "reactive": true
        },
        "color": {
          "type": "String",
          "desc": "Color name for component from the Quasar Color Palette",
          "examples": [
            "primary",
            "teal-10"
          ],
          "category": "style"
        },
        "dark": {
          "type": "Boolean",
          "desc": "Notify the component that the background is a dark color",
          "category": "style"
        },
        "dense": {
          "type": "Boolean",
          "desc": "Dense mode; occupies less space",
          "category": "style"
        }
      }
    },
    "top-row": {
      "desc": "Slot to define how top extra row looks like",
      "scope": {
        "cols": {
          "type": "Object",
          "desc": "Column definitions"
        }
      }
    },
    "bottom-row": {
      "desc": "Slot to define how bottom extra row looks like",
      "scope": {
        "cols": {
          "type": "Object",
          "desc": "Column definitions"
        }
      }
    },
    "top": {
      "desc": "Slot to define how table top looks like",
      "scope": {
        "pagination": {
          "type": "Object",
          "desc": "Pagination object",
          "definition": {
            "sortBy": {
              "type": "String",
              "required": true,
              "desc": "Column name (from column definition)",
              "examples": [
                "calories"
              ]
            },
            "descending": {
              "type": "Boolean",
              "required": true,
              "desc": "Is sorting in descending order?"
            },
            "page": {
              "type": "Number",
              "required": true,
              "desc": "Page number (1-based)"
            },
            "rowsPerPage": {
              "type": "Number",
              "required": true,
              "desc": "How many rows per page? 0 means Infinite"
            }
          }
        },
        "pagesNumber": {
          "type": "Number",
          "desc": "Number of pages available"
        },
        "isFirstPage": {
          "type": "Boolean",
          "desc": "Are we on first page?"
        },
        "isLastPage": {
          "type": "Boolean",
          "desc": "Are we on last page?"
        },
        "firstPage": {
          "type": "Function",
          "desc": "Navigates to first page",
          "params": null,
          "returns": null
        },
        "prevPage": {
          "type": "Function",
          "desc": "Navigates to previous page, if available",
          "params": null,
          "returns": null
        },
        "nextPage": {
          "type": "Function",
          "desc": "Navigates to next page, if available",
          "params": null,
          "returns": null
        },
        "lastPage": {
          "type": "Function",
          "desc": "Navigates to last page",
          "params": null,
          "returns": null
        },
        "inFullscreen": {
          "type": "Boolean",
          "desc": "Is table in fullscreen mode?"
        },
        "toggleFullscreen": {
          "type": "Function",
          "desc": "Toggles fullscreen mode",
          "params": null,
          "returns": null
        }
      }
    },
    "bottom": {
      "desc": "Slot to define how table bottom looks like",
      "scope": {
        "pagination": {
          "type": "Object",
          "desc": "Pagination object",
          "definition": {
            "sortBy": {
              "type": "String",
              "required": true,
              "desc": "Column name (from column definition)",
              "examples": [
                "calories"
              ]
            },
            "descending": {
              "type": "Boolean",
              "required": true,
              "desc": "Is sorting in descending order?"
            },
            "page": {
              "type": "Number",
              "required": true,
              "desc": "Page number (1-based)"
            },
            "rowsPerPage": {
              "type": "Number",
              "required": true,
              "desc": "How many rows per page? 0 means Infinite"
            }
          }
        },
        "pagesNumber": {
          "type": "Number",
          "desc": "Number of pages available"
        },
        "isFirstPage": {
          "type": "Boolean",
          "desc": "Are we on first page?"
        },
        "isLastPage": {
          "type": "Boolean",
          "desc": "Are we on last page?"
        },
        "firstPage": {
          "type": "Function",
          "desc": "Navigates to first page",
          "params": null,
          "returns": null
        },
        "prevPage": {
          "type": "Function",
          "desc": "Navigates to previous page, if available",
          "params": null,
          "returns": null
        },
        "nextPage": {
          "type": "Function",
          "desc": "Navigates to next page, if available",
          "params": null,
          "returns": null
        },
        "lastPage": {
          "type": "Function",
          "desc": "Navigates to last page",
          "params": null,
          "returns": null
        },
        "inFullscreen": {
          "type": "Boolean",
          "desc": "Is table in fullscreen mode?"
        },
        "toggleFullscreen": {
          "type": "Function",
          "desc": "Toggles fullscreen mode",
          "params": null,
          "returns": null
        }
      }
    },
    "pagination": {
      "desc": "Slot to override default pagination label and buttons",
      "scope": {
        "pagination": {
          "type": "Object",
          "desc": "Pagination object",
          "definition": {
            "sortBy": {
              "type": "String",
              "required": true,
              "desc": "Column name (from column definition)",
              "examples": [
                "calories"
              ]
            },
            "descending": {
              "type": "Boolean",
              "required": true,
              "desc": "Is sorting in descending order?"
            },
            "page": {
              "type": "Number",
              "required": true,
              "desc": "Page number (1-based)"
            },
            "rowsPerPage": {
              "type": "Number",
              "required": true,
              "desc": "How many rows per page? 0 means Infinite"
            }
          }
        },
        "pagesNumber": {
          "type": "Number",
          "desc": "Number of pages available"
        },
        "isFirstPage": {
          "type": "Boolean",
          "desc": "Are we on first page?"
        },
        "isLastPage": {
          "type": "Boolean",
          "desc": "Are we on last page?"
        },
        "firstPage": {
          "type": "Function",
          "desc": "Navigates to first page",
          "params": null,
          "returns": null
        },
        "prevPage": {
          "type": "Function",
          "desc": "Navigates to previous page, if available",
          "params": null,
          "returns": null
        },
        "nextPage": {
          "type": "Function",
          "desc": "Navigates to next page, if available",
          "params": null,
          "returns": null
        },
        "lastPage": {
          "type": "Function",
          "desc": "Navigates to last page",
          "params": null,
          "returns": null
        },
        "inFullscreen": {
          "type": "Boolean",
          "desc": "Is table in fullscreen mode?"
        },
        "toggleFullscreen": {
          "type": "Function",
          "desc": "Toggles fullscreen mode",
          "params": null,
          "returns": null
        }
      }
    },
    "top-left": {
      "desc": "Slot to define how left part of the table top looks like",
      "scope": {
        "pagination": {
          "type": "Object",
          "desc": "Pagination object",
          "definition": {
            "sortBy": {
              "type": "String",
              "required": true,
              "desc": "Column name (from column definition)",
              "examples": [
                "calories"
              ]
            },
            "descending": {
              "type": "Boolean",
              "required": true,
              "desc": "Is sorting in descending order?"
            },
            "page": {
              "type": "Number",
              "required": true,
              "desc": "Page number (1-based)"
            },
            "rowsPerPage": {
              "type": "Number",
              "required": true,
              "desc": "How many rows per page? 0 means Infinite"
            }
          }
        },
        "pagesNumber": {
          "type": "Number",
          "desc": "Number of pages available"
        },
        "isFirstPage": {
          "type": "Boolean",
          "desc": "Are we on first page?"
        },
        "isLastPage": {
          "type": "Boolean",
          "desc": "Are we on last page?"
        },
        "firstPage": {
          "type": "Function",
          "desc": "Navigates to first page",
          "params": null,
          "returns": null
        },
        "prevPage": {
          "type": "Function",
          "desc": "Navigates to previous page, if available",
          "params": null,
          "returns": null
        },
        "nextPage": {
          "type": "Function",
          "desc": "Navigates to next page, if available",
          "params": null,
          "returns": null
        },
        "lastPage": {
          "type": "Function",
          "desc": "Navigates to last page",
          "params": null,
          "returns": null
        },
        "inFullscreen": {
          "type": "Boolean",
          "desc": "Is table in fullscreen mode?"
        },
        "toggleFullscreen": {
          "type": "Function",
          "desc": "Toggles fullscreen mode",
          "params": null,
          "returns": null
        }
      }
    },
    "top-right": {
      "desc": "Slot to define how right part of the table top looks like",
      "scope": {
        "pagination": {
          "type": "Object",
          "desc": "Pagination object",
          "definition": {
            "sortBy": {
              "type": "String",
              "required": true,
              "desc": "Column name (from column definition)",
              "examples": [
                "calories"
              ]
            },
            "descending": {
              "type": "Boolean",
              "required": true,
              "desc": "Is sorting in descending order?"
            },
            "page": {
              "type": "Number",
              "required": true,
              "desc": "Page number (1-based)"
            },
            "rowsPerPage": {
              "type": "Number",
              "required": true,
              "desc": "How many rows per page? 0 means Infinite"
            }
          }
        },
        "pagesNumber": {
          "type": "Number",
          "desc": "Number of pages available"
        },
        "isFirstPage": {
          "type": "Boolean",
          "desc": "Are we on first page?"
        },
        "isLastPage": {
          "type": "Boolean",
          "desc": "Are we on last page?"
        },
        "firstPage": {
          "type": "Function",
          "desc": "Navigates to first page",
          "params": null,
          "returns": null
        },
        "prevPage": {
          "type": "Function",
          "desc": "Navigates to previous page, if available",
          "params": null,
          "returns": null
        },
        "nextPage": {
          "type": "Function",
          "desc": "Navigates to next page, if available",
          "params": null,
          "returns": null
        },
        "lastPage": {
          "type": "Function",
          "desc": "Navigates to last page",
          "params": null,
          "returns": null
        },
        "inFullscreen": {
          "type": "Boolean",
          "desc": "Is table in fullscreen mode?"
        },
        "toggleFullscreen": {
          "type": "Function",
          "desc": "Toggles fullscreen mode",
          "params": null,
          "returns": null
        }
      }
    },
    "top-selection": {
      "desc": "Slot to define how top table section looks like when user has selected at least one row",
      "scope": {
        "pagination": {
          "type": "Object",
          "desc": "Pagination object",
          "definition": {
            "sortBy": {
              "type": "String",
              "required": true,
              "desc": "Column name (from column definition)",
              "examples": [
                "calories"
              ]
            },
            "descending": {
              "type": "Boolean",
              "required": true,
              "desc": "Is sorting in descending order?"
            },
            "page": {
              "type": "Number",
              "required": true,
              "desc": "Page number (1-based)"
            },
            "rowsPerPage": {
              "type": "Number",
              "required": true,
              "desc": "How many rows per page? 0 means Infinite"
            }
          }
        },
        "pagesNumber": {
          "type": "Number",
          "desc": "Number of pages available"
        },
        "isFirstPage": {
          "type": "Boolean",
          "desc": "Are we on first page?"
        },
        "isLastPage": {
          "type": "Boolean",
          "desc": "Are we on last page?"
        },
        "firstPage": {
          "type": "Function",
          "desc": "Navigates to first page",
          "params": null,
          "returns": null
        },
        "prevPage": {
          "type": "Function",
          "desc": "Navigates to previous page, if available",
          "params": null,
          "returns": null
        },
        "nextPage": {
          "type": "Function",
          "desc": "Navigates to next page, if available",
          "params": null,
          "returns": null
        },
        "lastPage": {
          "type": "Function",
          "desc": "Navigates to last page",
          "params": null,
          "returns": null
        },
        "inFullscreen": {
          "type": "Boolean",
          "desc": "Is table in fullscreen mode?"
        },
        "toggleFullscreen": {
          "type": "Function",
          "desc": "Toggles fullscreen mode",
          "params": null,
          "returns": null
        }
      }
    },
    "no-data": {
      "desc": "Slot to define how the bottom will look like when is nothing to display",
      "scope": {
        "message": {
          "type": "String",
          "desc": "The suggested message",
          "examples": [
            "No data available"
          ]
        },
        "icon": {
          "type": "String",
          "desc": "The suggested icon name (following Quasar convention)",
          "examples": [
            "warning"
          ]
        }
      }
    }
  },
  "events": {
    "row-click": {
      "desc": "Emitted when user clicks/taps on a row; Is not emitted when using body/row/item scoped slots",
      "params": {
        "evt": {
          "type": "Event",
          "desc": "JS event object",
          "desc_cn": "JS事件对象"
        },
        "row": {
          "type": "Object",
          "desc": "The row upon which user has clicked/tapped",
          "desc_cn": "用户单击/点击的行"
        },
        "index": {
          "type": "Number",
          "desc": "Index of the row in the current page",
          "desc_cn": "当前页中行的索引"
        }
      },
      "desc_cn": "当用户点击一行时发出；在使用body/row/item范围的插槽时不发出"
    },
    "row-dblclick": {
      "desc": "Emitted when user quickly double clicks/taps on a row; Is not emitted when using body/row/item scoped slots; Please check JS dblclick event support before using",
      "params": {
        "evt": {
          "type": "Event",
          "desc": "JS event object",
          "desc_cn": "JS事件对象"
        },
        "row": {
          "type": "Object",
          "desc": "The row upon which user has double clicked/tapped",
          "desc_cn": "用户双击/点击的行"
        },
        "index": {
          "type": "Number",
          "desc": "Index of the row in the current page",
          "desc_cn": "当前页中行的索引"
        }
      },
      "desc_cn": "当用户快速双击/轻触一行时发出；在使用body/row/item范围的插槽时不发出；使用前请检查JS dblclick事件支持"
    },
    "row-contextmenu": {
      "desc": "Emitted when user right clicks/long taps on a row; Is not emitted when using body/row/item scoped slots",
      "params": {
        "evt": {
          "type": "Event",
          "desc": "JS event object",
          "desc_cn": "JS事件对象"
        },
        "row": {
          "type": "Object",
          "desc": "The row upon which user has right clicked/long tapped",
          "desc_cn": "用户已右键单击/长按的行"
        },
        "index": {
          "type": "Number",
          "desc": "Index of the row in the current page",
          "desc_cn": "当前页中行的索引"
        }
      },
      "desc_cn": "当用户在一行上右击/长按时发出；在使用body/row/item范围的插槽时不发出"
    },
    "request": {
      "desc": "Emitted when a server request is triggered",
      "params": {
        "requestProp": {
          "type": "Object",
          "desc": "Props of the request",
          "definition": {
            "pagination": {
              "type": "Object",
              "required": true,
              "desc": "Pagination object",
              "definition": {
                "sortBy": {
                  "type": "String",
                  "required": true,
                  "desc": "Column name (from column definition)",
                  "examples": [
                    "calories"
                  ],
                  "desc_cn": "列名（来自列定义）"
                },
                "descending": {
                  "type": "Boolean",
                  "required": true,
                  "desc": "Is sorting in descending order?",
                  "desc_cn": "排序是按降序排列的吗？"
                },
                "page": {
                  "type": "Number",
                  "required": true,
                  "desc": "Page number (1-based)",
                  "desc_cn": "页码（基于1）"
                },
                "rowsPerPage": {
                  "type": "Number",
                  "required": true,
                  "desc": "How many rows per page? 0 means Infinite",
                  "desc_cn": "每页多少行？0表示无限"
                }
              },
              "desc_cn": "分页对象"
            },
            "filter": {
              "type": [
                "String",
                "Object"
              ],
              "desc": "String/Object to filter table with (the 'filter' prop)"
            },
            "getCellValue": {
              "type": "Function",
              "required": true,
              "desc": "Function to get a cell value",
              "params": {
                "col": {
                  "type": "Object",
                  "required": true,
                  "desc": "Column name from column definitions",
                  "desc_cn": "列定义中的列名"
                },
                "row": {
                  "type": "Object",
                  "required": true,
                  "desc": "The row object",
                  "desc_cn": "行对象"
                }
              },
              "returns": {
                "type": "Any",
                "desc": "Parsed/Processed cell value",
                "examples": [
                  "Ice Cream Sandwich"
                ],
                "desc_cn": "已分析/处理的单元格值"
              }
            }
          },
          "desc_cn": "请求的属性"
        }
      },
      "desc_cn": "触发服务器请求时发出"
    },
    "selection": {
      "desc": "Emitted when user selects/unselects row(s)",
      "params": {
        "details": {
          "type": "Object",
          "desc": "Selection details",
          "definition": {
            "rows": {
              "type": "Array",
              "required": true,
              "desc": "Array of row objects that were selected/unselected",
              "desc_cn": "选定/未选定的行对象数组"
            },
            "keys": {
              "type": "Array",
              "required": true,
              "desc": "Array of the keys of rows that were selected/unselected",
              "desc_cn": "选定/未选定行的键数组"
            },
            "added": {
              "type": "Boolean",
              "required": true,
              "desc": "Were the rows added to selection (true) or removed from selection (false)",
              "desc_cn": "行是添加到选择中（true）还是从选择中删除（false）"
            },
            "evt": {
              "type": "Event",
              "desc": "JS event object",
              "required": true,
              "desc_cn": "JS事件对象"
            }
          },
          "desc_cn": "选择详细信息"
        }
      },
      "desc_cn": "当用户选择/取消选择行时发出"
    },
    "update:pagination": {
      "desc": "Used by Vue on 'v-model:pagination' for updating its value",
      "params": {
        "newPagination": {
          "type": "Object",
          "desc": "The updated pagination object",
          "definition": {
            "sortBy": {
              "type": "String",
              "required": true,
              "desc": "Column name (from column definition)",
              "examples": [
                "calories"
              ],
              "desc_cn": "列名（来自列定义）"
            },
            "descending": {
              "type": "Boolean",
              "required": true,
              "desc": "Is sorting in descending order?",
              "desc_cn": "排序是按降序排列的吗？"
            },
            "page": {
              "type": "Number",
              "required": true,
              "desc": "Page number (1-based)",
              "desc_cn": "页码（基于1）"
            },
            "rowsPerPage": {
              "type": "Number",
              "required": true,
              "desc": "How many rows per page? 0 means Infinite",
              "desc_cn": "每页多少行？0表示无限"
            },
            "rowsNumber": {
              "type": "Number",
              "required": false,
              "desc": "For server-side fetching only. How many total database rows are there to be added to the table."
            }
          },
          "desc_cn": "更新的分页对象"
        }
      }
    },
    "update:selected": {
      "desc": "Used by Vue on 'v-model:selected' prop for updating its value",
      "params": {
        "newSelected": {
          "type": "Array",
          "desc": "The updated selected array",
          "examples": [
            "[ { name: 'Frozen Yogurt', calories: 159, fat: 6 } ]"
          ],
          "desc_cn": "已更新的选定阵列"
        }
      }
    },
    "update:expanded": {
      "desc": "Used by Vue on 'v-model:expanded' prop for updating its value",
      "params": {
        "newExpanded": {
          "type": "Array",
          "desc": "The updated expanded array",
          "examples": [
            "[ 'row-a', 'row-b' ]"
          ],
          "desc_cn": "更新的扩展阵列"
        }
      }
    },
    "virtual-scroll": {
      "desc": "Emitted when the virtual scroll occurs, if using virtual scroll",
      "params": {
        "details": {
          "type": "Object",
          "desc": "Object of properties on the new scroll position",
          "definition": {
            "index": {
              "type": "Number",
              "required": true,
              "desc": "Index of the list item that was scrolled into view (0 based)",
              "desc_cn": "滚动到视图中的列表项的索引（基于0）"
            },
            "from": {
              "type": "Number",
              "required": true,
              "desc": "The index of the first list item that is rendered (0 based)",
              "desc_cn": "渲染的第一个列表项的索引（基于0）"
            },
            "to": {
              "type": "Number",
              "required": true,
              "desc": "The index of the last list item that is rendered (0 based)",
              "desc_cn": "最后渲染的列表项的索引（基于0）"
            },
            "direction": {
              "type": "String",
              "required": true,
              "desc": "Direction of change",
              "values": [
                "increase",
                "decrease"
              ],
              "desc_cn": "变化方向"
            }
          },
          "desc_cn": "新滚动位置上的属性对象"
        }
      },
      "desc_cn": "如果使用虚拟滚动，则在虚拟滚动发生时发出"
    }
  },
  "methods": {
    "toggleFullscreen": {
      "desc": "Toggles fullscreen mode",
      "desc_cn": "切换全屏模式"
    },
    "setFullscreen": {
      "desc": "Enter the fullscreen view",
      "desc_cn": "进入全屏视图"
    },
    "exitFullscreen": {
      "desc": "Leave the fullscreen view",
      "desc_cn": "离开全屏视图"
    },
    "requestServerInteraction": {
      "desc": "Trigger a server request (emits 'request' event)",
      "params": {
        "props": {
          "type": "Object",
          "required": false,
          "desc": "Request details",
          "definition": {
            "pagination": {
              "type": "Object",
              "required": false,
              "desc": "Optional pagination object",
              "definition": {
                "sortBy": {
                  "type": "String",
                  "desc": "Column name (from column definition)",
                  "examples": [
                    "calories"
                  ],
                  "desc_cn": "列名（来自列定义）"
                },
                "descending": {
                  "type": "Boolean",
                  "desc": "Is sorting in descending order?",
                  "desc_cn": "排序是按降序排列的吗？"
                },
                "page": {
                  "type": "Number",
                  "desc": "Page number (1-based)",
                  "desc_cn": "页码（基于1）"
                },
                "rowsPerPage": {
                  "type": "Number",
                  "desc": "How many rows per page? 0 means Infinite",
                  "desc_cn": "每页多少行？0表示无限"
                },
                "rowsNumber": {
                  "type": "Number",
                  "desc": "For server-side fetching only. How many total database rows are there to be added to the table."
                }
              },
              "desc_cn": "可选分页对象"
            },
            "filter": {
              "type": "Function",
              "desc": "Filtering method (the 'filter-method' prop)",
              "params": {
                "rows": {
                  "type": "Array",
                  "required": true,
                  "desc": "Array of rows",
                  "desc_cn": "行的数组"
                },
                "terms": {
                  "type": [
                    "String",
                    "Object"
                  ],
                  "required": true,
                  "desc": "Terms to filter with (is essentially the 'filter' prop value)",
                  "desc_cn": "过滤条件（本质上是“filter”属性值）"
                },
                "cols": {
                  "type": "Array",
                  "desc": "Optional column definitions",
                  "desc_cn": "可选列定义"
                },
                "getCellValue": {
                  "type": "Function",
                  "desc": "Optional function to get a cell value",
                  "params": {
                    "col": {
                      "type": "Object",
                      "desc": "Column name from column definitions",
                      "desc_cn": "列定义中的列名"
                    },
                    "row": {
                      "type": "Object",
                      "desc": "The row object",
                      "desc_cn": "行对象"
                    }
                  },
                  "returns": {
                    "type": "Any",
                    "desc": "Parsed/Processed cell value",
                    "examples": [
                      "Ice Cream Sandwich"
                    ],
                    "desc_cn": "已分析/处理的单元格值"
                  },
                  "desc_cn": "获取单元格值的可选函数"
                }
              },
              "returns": {
                "type": "Array",
                "desc": "Filtered rows",
                "desc_cn": "筛选的行"
              },
              "desc_cn": "过滤方法（“filter-method”属性）"
            }
          },
          "desc_cn": "请求详细信息"
        }
      },
      "desc_cn": "触发服务器请求（发出“request”事件）"
    },
    "setPagination": {
      "desc": "Unless using an external pagination Object (through 'v-model:pagination' prop), you can use this method and force the internal pagination to change",
      "params": {
        "pagination": {
          "type": "Object",
          "required": true,
          "desc": "Pagination object",
          "definition": {
            "sortBy": {
              "type": "String",
              "desc": "Column name (from column definition)",
              "examples": [
                "calories"
              ],
              "desc_cn": "列名（来自列定义）"
            },
            "descending": {
              "type": "Boolean",
              "desc": "Is sorting in descending order?",
              "desc_cn": "排序是按降序排列的吗？"
            },
            "page": {
              "type": "Number",
              "desc": "Page number (1-based)",
              "desc_cn": "页码（基于1）"
            },
            "rowsPerPage": {
              "type": "Number",
              "desc": "How many rows per page? 0 means Infinite",
              "desc_cn": "每页多少行？0表示无限"
            }
          },
          "desc_cn": "分页对象"
        },
        "forceServerRequest": {
          "type": "Boolean",
          "desc": "Also force a server request",
          "desc_cn": "同时强制服务器请求"
        }
      }
    },
    "firstPage": {
      "desc": "Navigates to first page",
      "desc_cn": "导航到第一页"
    },
    "prevPage": {
      "desc": "Navigates to previous page, if available",
      "desc_cn": "导航到上一页（如果可用）"
    },
    "nextPage": {
      "desc": "Navigates to next page, if available",
      "desc_cn": "导航到下一页（如果可用）"
    },
    "lastPage": {
      "desc": "Navigates to last page",
      "desc_cn": "导航到最后一页"
    },
    "isRowSelected": {
      "desc": "Determine if a row has been selected by user",
      "params": {
        "key": {
          "type": "Any",
          "required": true,
          "desc": "Row key value",
          "examples": [
            "calories"
          ],
          "desc_cn": "行键值"
        }
      },
      "returns": {
        "type": "Boolean",
        "desc": "Is row selected or not?",
        "desc_cn": "是否选中行？"
      },
      "desc_cn": "确定用户是否选择了行"
    },
    "clearSelection": {
      "desc": "Clears user selection (emits 'update:selected' with empty array)",
      "desc_cn": "清除用户选择（触发带空数组的“update:selected”）"
    },
    "isRowExpanded": {
      "desc": "Determine if a row is expanded or not",
      "params": {
        "key": {
          "type": "Any",
          "required": true,
          "desc": "Row key value",
          "examples": [
            "calories"
          ],
          "desc_cn": "行键值"
        }
      },
      "returns": {
        "type": "Boolean",
        "desc": "Is row expanded or not?",
        "desc_cn": "行是否展开？"
      },
      "desc_cn": "确定行是否展开"
    },
    "setExpanded": {
      "desc": "Sets the expanded rows keys array; Especially useful if not using an external 'expanded' state otherwise just emits 'update:expanded' with the value",
      "params": {
        "expanded": {
          "type": "Array",
          "required": true,
          "desc": "Array containing keys of the expanded rows",
          "examples": [
            "[ 'row-a', 'row-b' ]"
          ],
          "desc_cn": "包含展开行的键的数组"
        }
      },
      "desc_cn": "设置展开的行键数组；特别有用，如果不使用外部'expanded'状态，否则只是触发带值的'update:expanded'"
    },
    "sort": {
      "desc": "Trigger a table sort",
      "params": {
        "col": {
          "type": [
            "String",
            "Object"
          ],
          "required": true,
          "desc": "Column name or column definition object",
          "examples": [
            "calories"
          ],
          "desc_cn": "列名或列定义对象"
        }
      },
      "desc_cn": "触发表排序"
    },
    "resetVirtualScroll": {
      "desc": "Resets the virtual scroll (if using it) computations; Needed for custom edge-cases",
      "desc_cn": "重置虚拟滚动（如果使用它）计算；用于定制边缘案例"
    },
    "scrollTo": {
      "desc": "Scroll the table to the row with the specified index in page (0 based)",
      "params": {
        "index": {
          "type": [
            "String",
            "Number"
          ],
          "required": true,
          "desc": "The index of the row in page (0 based)",
          "desc_cn": "页中行的索引（基于0）"
        },
        "edge": {
          "type": "String",
          "desc": "Only for virtual scroll - the edge to align to if the row is not visible already; If the '-force' version is used then it always aligns",
          "values": [
            "start",
            "center",
            "end",
            "start-force",
            "center-force",
            "end-force"
          ],
          "default": "end (if scrolling towards the end) / start (if scrolling towards the start)",
          "required": false
        }
      },
      "desc_cn": "将表格滚动到页中具有指定索引的行（基于0）"
    }
  },
  "computedProps": {
    "filteredSortedRows": {
      "desc": "The filtered and sorted rows (same as the rows prop if using server-side fetching)",
      "type": "Array",
      "examples": [
        "[ { name: 'Ice Cream Sandwich', calories: 237, fat: 9.0, carbs: 37, protein: 4.3, sodium: 129, calcium: 8, iron: 1 }, ... ]"
      ]
    },
    "computedRows": {
      "desc": "Paginated, filtered, and sorted rows (same as the rows prop if using server-side fetching)",
      "type": "Array",
      "examples": [
        "[ { name: 'Ice Cream Sandwich', calories: 237, fat: 9.0, carbs: 37, protein: 4.3, sodium: 129, calcium: 8, iron: 1 }, ... ]"
      ]
    },
    "computedRowsNumber": {
      "desc": "The number of computed rows",
      "type": "Number"
    }
  }
}