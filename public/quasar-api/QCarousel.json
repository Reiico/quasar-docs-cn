{
  "type": "component",
  "meta": {
    "docsUrl": "https://v2.quasar.dev/vue-components/carousel"
  },
  "props": {
    "fullscreen": {
      "type": "Boolean",
      "sync": true,
      "desc": "Fullscreen mode",
      "examples": [
        "v-model:fullscreen=\"isFullscreen\""
      ],
      "category": "behavior",
      "syncable": true,
      "desc_cn": "全屏模式"
    },
    "no-route-fullscreen-exit": {
      "type": "Boolean",
      "desc": "Changing route app won't exit fullscreen",
      "category": "behavior",
      "desc_cn": "更改路由应用不会退出全屏"
    },
    "model-value": {
      "type": "Any",
      "desc": "Model of the component defining the current panel's name; If a Number is used, it does not define the panel's index, but rather the panel's name which can also be an Integer; Either use this property (along with a listener for 'update:model-value' event) OR use the v-model directive.",
      "examples": [
        "v-model=\"panelName\""
      ],
      "category": "model",
      "desc_cn": "组件的 model 数据，与当前显示面板的名称绑定。如果使用一个数字，它不表示面板的索引，而是指面板的名称也可以是一个整数。'update:model-value' 监听事件和 'v-model' 指令都会使用此属性"
    },
    "keep-alive": {
      "type": "Boolean",
      "desc": "Equivalent to using Vue's native <keep-alive> component on the content",
      "category": "behavior",
      "desc_cn": "相当于在内容上使用 Vue 的原生 '<keep alive>' 组件"
    },
    "keep-alive-include": {
      "type": [
        "String",
        "Array",
        "RegExp"
      ],
      "desc": "Equivalent to using Vue's native include prop for <keep-alive>; Values must be valid Vue component names",
      "examples": [
        "a,b",
        "/a|b/",
        "['a', 'b']"
      ],
      "category": "behavior",
      "desc_cn": "相当于 Vue 原生组件 '<keep alive>' 的 include 属性；值必须是有效的 Vue 组件名称"
    },
    "keep-alive-exclude": {
      "type": [
        "String",
        "Array",
        "RegExp"
      ],
      "desc": "Equivalent to using Vue's native exclude prop for <keep-alive>; Values must be valid Vue component names",
      "examples": [
        "a,b",
        "/a|b/",
        "['a', 'b']"
      ],
      "category": "behavior",
      "desc_cn": "相当于 Vue 原生组件 '<keep alive>' 的 exclude 属性；值必须是有效的 Vue 组件名称"
    },
    "keep-alive-max": {
      "type": "Number",
      "desc": "Equivalent to using Vue's native max prop for <keep-alive>",
      "category": "behavior",
      "desc_cn": "相当于 Vue 原生组件 '<keep alive>' 的 max 属性；值必须是有效的 Vue 组件名称"
    },
    "animated": {
      "type": "Boolean",
      "desc": "Enable transitions between panel (also see 'transition-prev' and 'transition-next' props)",
      "category": "behavior",
      "desc_cn": "启用面板之间切换时的过渡动画（另请参阅 'transition-prev' 和 'transition-next' 属性）"
    },
    "infinite": {
      "type": "Boolean",
      "desc": "Makes component appear as infinite (when reaching last panel, next one will become the first one)",
      "category": "behavior",
      "desc_cn": "使组件无限循环切换（当到达最后一个面板时，下一个切回第一个）"
    },
    "swipeable": {
      "type": "Boolean",
      "desc": "Enable swipe events (may interfere with content's touch/mouse events)",
      "category": "behavior",
      "desc_cn": "启用滑动事件（可能会干扰内容的触摸/鼠标事件）"
    },
    "vertical": {
      "type": "Boolean",
      "desc": "Default transitions and swipe actions will be on the vertical axis",
      "category": "behavior",
      "desc_cn": "默认的切换和滑动操作将作用在垂直轴上"
    },
    "transition-prev": {
      "type": "String",
      "desc": "One of Quasar's embedded transitions (has effect only if 'animated' prop is set)",
      "examples": [
        "fade",
        "slide-down"
      ],
      "category": "transition",
      "default": "fade",
      "required": false,
      "desc_cn": "Quasar 的内置过渡效果之一（只有设置了 'animated' 属性才有效）"
    },
    "transition-next": {
      "type": "String",
      "desc": "One of Quasar's embedded transitions (has effect only if 'animated' prop is set)",
      "examples": [
        "fade",
        "slide-down"
      ],
      "category": "transition",
      "default": "fade",
      "required": false,
      "desc_cn": "Quasar 的内置过渡效果之一（只有设置了 'animated' 属性才有效）"
    },
    "transition-duration": {
      "type": [
        "String",
        "Number"
      ],
      "desc": "Transition duration (in milliseconds, without unit)",
      "default": 300,
      "category": "transition",
      "addedIn": "v2.2",
      "required": false,
      "desc_cn": "过渡效果的时长（单位毫秒，不带单位）"
    },
    "dark": {
      "type": "Boolean",
      "desc": "Notify the component that the background is a dark color",
      "category": "style",
      "desc_cn": "设置组件背景为深色"
    },
    "height": {
      "type": "String",
      "desc": "Height of Carousel in CSS units, including unit name",
      "examples": [
        "16px",
        "2rem"
      ],
      "category": "style",
      "desc_cn": "每张幻灯片的高度（CSS 单位），包括单位名称"
    },
    "padding": {
      "type": "Boolean",
      "desc": "Applies a default padding to each slide, according to the usage of 'arrows' and 'navigation' props",
      "category": "content",
      "desc_cn": "根据 'arrows' 和 'navigation' 属性的值，对每张幻灯片应用默认内边距"
    },
    "control-color": {
      "type": "String",
      "desc": "Color name for QCarousel button controls (arrows, navigation) from the Quasar Color Palette",
      "examples": [
        "primary",
        "teal-10"
      ],
      "category": "style",
      "desc_cn": "QCarousel 按钮控件的颜色（箭头、导航），来自 Quasar 调色板的颜色名称"
    },
    "control-text-color": {
      "type": "String",
      "desc": "Color name for text color of QCarousel button controls (arrows, navigation) from the Quasar Color Palette",
      "examples": [
        "primary",
        "teal-10"
      ],
      "category": "style",
      "desc_cn": "QCarousel 按钮控件的文本颜色（箭头、导航），来自Quasar调色板的颜色名称"
    },
    "control-type": {
      "type": "String",
      "desc": "Type of button to use for controls (arrows, navigation)",
      "values": [
        "regular",
        "flat",
        "outline",
        "push",
        "unelevated"
      ],
      "category": "style",
      "desc_cn": "控件的按钮样式类型（箭头、导航）"
    },
    "autoplay": {
      "type": [
        "Number",
        "Boolean"
      ],
      "desc": "Jump to next slide (if 'true' or val > 0) or previous slide (if val < 0) at fixed time intervals (in milliseconds); 'false' disables autoplay, 'true' enables it for 5000ms intervals",
      "default": false,
      "examples": [
        ":autoplay=\"2500\"",
        true,
        false
      ],
      "category": "behavior",
      "required": false,
      "desc_cn": "间隔固定时间自动切换。如果值为 true 则每隔 5000 毫秒自动向下一页切换；如果值为大于 0 的数字，则以此数字为间隔（单位毫秒），自动向下一页切换；如果值为小于 0 的数字，则以此数字为间隔（单位毫秒），自动向上一页切换；如果值为 false 则关闭自动播放"
    },
    "arrows": {
      "type": "Boolean",
      "desc": "Show navigation arrow buttons",
      "category": "content",
      "desc_cn": "显示导航箭头按钮"
    },
    "prev-icon": {
      "type": "String",
      "desc": "Icon name following Quasar convention; Make sure you have the icon library installed unless you are using 'img:' prefix; If 'none' (String) is used as value then no icon is rendered (but screen real estate will still be used for it)",
      "examples": [
        "map",
        "ion-add",
        "img:https://cdn.quasar.dev/logo-v2/svg/logo.svg",
        "img:path/to/some_image.png"
      ],
      "category": "content",
      "desc_cn": "上一页按钮的图标名称，需确保已经安装了相关的图标库，除非使用了 'img:' 前缀来引用本地的图片，如果设置为 'none'，则不会渲染图标"
    },
    "next-icon": {
      "type": "String",
      "desc": "Icon name following Quasar convention; Make sure you have the icon library installed unless you are using 'img:' prefix; If 'none' (String) is used as value then no icon is rendered (but screen real estate will still be used for it)",
      "examples": [
        "map",
        "ion-add",
        "img:https://cdn.quasar.dev/logo-v2/svg/logo.svg",
        "img:path/to/some_image.png"
      ],
      "category": "content",
      "desc_cn": "下一页按钮的图标名称，需确保已经安装了相关的图标库，除非使用了 'img:' 前缀来引用本地的图片，如果设置为 'none'，则不会渲染图标"
    },
    "navigation": {
      "type": "Boolean",
      "desc": "Show navigation dots",
      "category": "content",
      "desc_cn": "显示导航点"
    },
    "navigation-position": {
      "type": "String",
      "desc": "Side to stick navigation to",
      "default": "bottom/right",
      "values": [
        "top",
        "right",
        "bottom",
        "left"
      ],
      "category": "content",
      "required": false,
      "desc_cn": "放置导航的侧边"
    },
    "navigation-icon": {
      "type": "String",
      "desc": "Icon name following Quasar convention; Make sure you have the icon library installed unless you are using 'img:' prefix; If 'none' (String) is used as value then no icon is rendered (but screen real estate will still be used for it)",
      "examples": [
        "map",
        "ion-add",
        "img:https://cdn.quasar.dev/logo-v2/svg/logo.svg",
        "img:path/to/some_image.png"
      ],
      "category": "content",
      "desc_cn": "导航图标的名称，需确保已经安装了相关的图标库，除非使用了 'img:' 前缀来引用本地的图片，如果设置为 'none'，则不会渲染图标"
    },
    "navigation-active-icon": {
      "type": "String",
      "desc": "Icon name following Quasar convention for the active (current slide) navigation icon; Make sure you have the icon library installed unless you are using 'img:' prefix",
      "examples": [
        "map",
        "ion-add",
        "img:https://cdn.quasar.dev/logo-v2/svg/logo.svg",
        "img:path/to/some_image.png"
      ],
      "category": "content",
      "desc_cn": "导航被激活的图标名称，需确保已经安装了相关的图标库，除非使用了 'img:' 前缀来引用本地的图片，如果设置为 'none'，则不会渲染图标"
    },
    "thumbnails": {
      "type": "Boolean",
      "desc": "Show thumbnails",
      "category": "content",
      "desc_cn": "显示缩略图"
    }
  },
  "slots": {
    "default": {
      "desc": "Suggestion: QCarouselSlide",
      "desc_cn": "建议：QCarouselSlide"
    },
    "control": {
      "desc": "Slot specific for QCarouselControl",
      "desc_cn": "特定于 QCarouselControl 的插槽"
    },
    "navigation-icon": {
      "desc": "Slot for navigation icon/btn; Suggestion: QBtn",
      "scope": {
        "index": {
          "type": "Number",
          "desc": "The 0-based index of corresponding slide",
          "desc_cn": "对应幻灯片的基于 0 的索引。"
        },
        "maxIndex": {
          "type": "Number",
          "desc": "The available number of slides",
          "desc_cn": "可用幻灯片的最大数量"
        },
        "name": {
          "type": "Any",
          "desc": "The name of the corresponding slide",
          "desc_cn": "对应幻灯片的名称"
        },
        "active": {
          "type": "Boolean",
          "desc": "Is this the current slide?",
          "desc_cn": "是否是当前显示的幻灯片"
        },
        "btnProps": {
          "type": "Object",
          "desc": "Default QBtn props that can be binded to your own QBtn",
          "desc_cn": "默认 QBtn 的属性，可以绑定到自己的 QBtn"
        },
        "onClick": {
          "type": "Function",
          "desc": "Default trigger when clicked/tapped on",
          "params": {
            "evt": {
              "type": "Event",
              "desc": "JS event object",
              "required": true,
              "desc_cn": "JS 事件对象"
            }
          },
          "returns": null,
          "desc_cn": "默认的点击事件"
        }
      },
      "desc_cn": "导航图标/按钮的插槽；建议使用：QBtn"
    }
  },
  "events": {
    "fullscreen": {
      "desc": "Emitted when fullscreen state changes",
      "params": {
        "value": {
          "type": "Boolean",
          "desc": "Fullscreen state (showing/hidden)",
          "desc_cn": "全屏状态（显示/隐藏）"
        }
      },
      "desc_cn": "当全屏状态切换时触发"
    },
    "update:model-value": {
      "desc": "Emitted when the component changes the model; This event _isn't_ fired if the model is changed externally; Is also used by v-model",
      "params": {
        "value": {
          "type": [
            "String",
            "Number"
          ],
          "desc": "New current panel name",
          "examples": [
            "dashboard"
          ],
          "desc_cn": "新的面板名称"
        }
      },
      "desc_cn": "当组件的 model 数据发生变化时触发。如果 model 数据被外部更改，则不会触发此事件；它也被 v-model 使用。"
    },
    "before-transition": {
      "desc": "Emitted before transitioning to a new panel",
      "params": {
        "newVal": {
          "type": [
            "String",
            "Number"
          ],
          "desc": "Panel name towards transition is going",
          "examples": [
            "dashboard"
          ],
          "desc_cn": "正在发生切换到的目标面板名称"
        },
        "oldVal": {
          "type": [
            "String",
            "Number"
          ],
          "desc": "Panel name from which transition is happening",
          "examples": [
            "dashboard"
          ],
          "desc_cn": "正在发生切换的来源面板名称"
        }
      },
      "desc_cn": "在切换到新面板之前触发"
    },
    "transition": {
      "desc": "Emitted after component transitioned to a new panel",
      "params": {
        "newVal": {
          "type": [
            "String",
            "Number"
          ],
          "desc": "Panel name towards transition has occurred",
          "examples": [
            "dashboard"
          ],
          "desc_cn": "已发生切换的目标面板名称"
        },
        "oldVal": {
          "type": [
            "String",
            "Number"
          ],
          "desc": "Panel name from which transition has happened",
          "examples": [
            "dashboard"
          ],
          "desc_cn": "已发生切换的来源面板名称"
        }
      },
      "desc_cn": "在组件切换到新面板后触发"
    }
  },
  "methods": {
    "toggleFullscreen": {
      "desc": "Toggle the view to be fullscreen or not fullscreen",
      "desc_cn": "将视图切换为全屏或非全屏"
    },
    "setFullscreen": {
      "desc": "Enter the fullscreen view",
      "desc_cn": "进入全屏视图"
    },
    "exitFullscreen": {
      "desc": "Leave the fullscreen view",
      "desc_cn": "离开全屏视图"
    },
    "next": {
      "desc": "Go to next panel",
      "desc_cn": "转到下一个面板"
    },
    "previous": {
      "desc": "Go to previous panel",
      "desc_cn": "转到上一面板"
    },
    "goTo": {
      "desc": "Go to specific panel",
      "params": {
        "panelName": {
          "type": [
            "String",
            "Number"
          ],
          "desc": "Panel's name, which may be a String or Number; Number does not refers to panel index, but to its name, which may be an Integer",
          "required": true,
          "examples": [
            "dashboard"
          ],
          "desc_cn": "面板名称，可以是字符串或数字；数字不是指面板索引，而是指其名称，名称可以是整数"
        }
      },
      "desc_cn": "转到特定面板"
    }
  }
}